From cb879ef2ce585710517885461fb0a765cd5a3178 Mon Sep 17 00:00:00 2001
From: Tk-Glitch <ti3nou@gmail.com>
Date: Tue, 4 Aug 2020 23:21:11 +0200
Subject: hotfix-rebased 0720c6cf & 2b76b9f2


diff --git a/dlls/ntdll/nt.c b/dlls/ntdll/nt.c
index 978919146c..eaf4b3055d 100644
--- a/dlls/ntdll/nt.c
+++ b/dlls/ntdll/nt.c
@@ -2143,11 +2143,13 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             size_t chassis_vendor_len, chassis_version_len, chassis_serial_len, chassis_asset_tag_len;
             char *buffer = (char*)sfti->TableBuffer;
             BYTE string_count;
+            BYTE handle_count = 0;
             struct smbios_prologue *prologue;
             struct smbios_bios *bios;
             struct smbios_system *system;
             struct smbios_board *board;
             struct smbios_chassis *chassis;
+            struct smbios_header *end_of_table;
 
 #define S(s) s, sizeof(s)
             bios_vendor_len = get_smbios_string("/sys/class/dmi/id/bios_vendor", S(bios_vendor));
@@ -2186,6 +2188,9 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             *required_len += sizeof(struct smbios_chassis);
             *required_len += max(L(chassis_vendor_len) + L(chassis_version_len) + L(chassis_serial_len) +
                                  L(chassis_asset_tag_len) + 1, 2);
+
+            *required_len += sizeof(struct smbios_header);
+            *required_len += 2;
 #undef L
 
             sfti->TableBufferLength = *required_len;
@@ -2207,7 +2212,7 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             bios = (struct smbios_bios*)buffer;
             bios->hdr.type = 0;
             bios->hdr.length = sizeof(struct smbios_bios);
-            bios->hdr.handle = 0;
+            bios->hdr.handle = handle_count++;
             bios->vendor = bios_vendor_len ? ++string_count : 0;
             bios->version = bios_version_len ? ++string_count : 0;
             bios->start = 0;
@@ -2232,7 +2237,7 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             system = (struct smbios_system*)buffer;
             system->hdr.type = 1;
             system->hdr.length = sizeof(struct smbios_system);
-            system->hdr.handle = 0;
+            system->hdr.handle = handle_count++;
             system->vendor = system_vendor_len ? ++string_count : 0;
             system->product = system_product_len ? ++string_count : 0;
             system->version = system_version_len ? ++string_count : 0;
@@ -2256,7 +2261,7 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             board = (struct smbios_board*)buffer;
             board->hdr.type = 2;
             board->hdr.length = sizeof(struct smbios_board);
-            board->hdr.handle = 0;
+            board->hdr.handle = handle_count++;
             board->vendor = board_vendor_len ? ++string_count : 0;
             board->product = board_product_len ? ++string_count : 0;
             board->version = board_version_len ? ++string_count : 0;
@@ -2274,7 +2279,7 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             chassis = (struct smbios_chassis*)buffer;
             chassis->hdr.type = 3;
             chassis->hdr.length = sizeof(struct smbios_chassis);
-            chassis->hdr.handle = 0;
+            chassis->hdr.handle = handle_count++;
             chassis->vendor = chassis_vendor_len ? ++string_count : 0;
             chassis->type = atoi(chassis_type);
             chassis->version = chassis_version_len ? ++string_count : 0;
@@ -2293,6 +2298,14 @@ static NTSTATUS get_firmware_info(SYSTEM_FIRMWARE_TABLE_INFORMATION *sfti, ULONG
             if (!string_count) *buffer++ = 0;
             *buffer++ = 0;
 
+            end_of_table = (struct smbios_header*)buffer;
+            end_of_table->type = 127;
+            end_of_table->length = sizeof(struct smbios_header);
+            end_of_table->handle = handle_count++;
+            buffer += sizeof(struct smbios_header);
+            *buffer++ = 0;
+            *buffer++ = 0;
+
             return STATUS_SUCCESS;
         }
     default:
