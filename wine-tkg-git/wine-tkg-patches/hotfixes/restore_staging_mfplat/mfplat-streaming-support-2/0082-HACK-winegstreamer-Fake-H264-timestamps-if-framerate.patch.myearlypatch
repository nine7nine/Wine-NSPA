From 292b80383163c9537733b47c27c6f2144edb18b5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 10 Feb 2022 09:58:32 +0100
Subject: [PATCH 82/88] HACK: winegstreamer: Fake H264 timestamps if framerate
 cannot be trusted.

Fixes MK11 video framerate.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=45988
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=47084
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=49715
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=52183
CW-Bug-Id: #16839
CW-Bug-Id: #18678
CW-Bug-Id: #19362
---
 dlls/winegstreamer/h264_decoder.c | 12 ++++++++++++
 dlls/winegstreamer/wg_transform.c | 10 ++++++++--
 2 files changed, 20 insertions(+), 2 deletions(-)

diff --git a/dlls/winegstreamer/h264_decoder.c b/dlls/winegstreamer/h264_decoder.c
index 66ecfad84de..ba6e681890b 100644
--- a/dlls/winegstreamer/h264_decoder.c
+++ b/dlls/winegstreamer/h264_decoder.c
@@ -52,6 +52,7 @@ struct h264_decoder
 
     struct wg_transform *wg_transform;
     struct wg_format wg_format;
+    ULONGLONG last_pts;
 };
 
 static struct h264_decoder *impl_from_IMFTransform(IMFTransform *iface)
@@ -75,6 +76,7 @@ static HRESULT try_create_wg_transform(struct h264_decoder *decoder)
     if (output_format.major_type == WG_MAJOR_TYPE_UNKNOWN)
         return MF_E_INVALIDMEDIATYPE;
 
+    decoder->last_pts = 0;
     decoder->wg_transform = wg_transform_create(&input_format, &output_format);
     if (decoder->wg_transform)
         return S_OK;
@@ -567,6 +569,7 @@ static HRESULT WINAPI h264_decoder_ProcessOutput(IMFTransform *iface, DWORD flag
     IMFMediaType *media_type;
     UINT32 align, offset;
     DWORD buffer_size;
+    UINT64 framerate;
     HRESULT hr;
 
     TRACE("iface %p, flags %#lx, count %lu, samples %p, status %p.\n", iface, flags, count, samples, status);
@@ -603,6 +606,15 @@ static HRESULT WINAPI h264_decoder_ProcessOutput(IMFTransform *iface, DWORD flag
         hr = MF_E_BUFFERTOOSMALL;
     else if (SUCCEEDED(hr = wg_transform_read_data(decoder->wg_transform, &wg_sample)))
     {
+        if (!(wg_sample.flags & (WG_SAMPLE_FLAG_HAS_PTS|WG_SAMPLE_FLAG_HAS_DURATION)))
+        {
+            IMFMediaType_GetUINT64(decoder->output_type, &MF_MT_FRAME_RATE, &framerate);
+            wg_sample.pts = decoder->last_pts;
+            wg_sample.duration = (UINT64)10000000 * (UINT32)framerate / (framerate >> 32);
+            wg_sample.flags |= (WG_SAMPLE_FLAG_HAS_PTS|WG_SAMPLE_FLAG_HAS_DURATION);
+            decoder->last_pts += wg_sample.duration;
+        }
+
         if (wg_sample.flags & WG_SAMPLE_FLAG_HAS_PTS)
             IMFSample_SetSampleTime(samples[0].pSample, wg_sample.pts);
         if (wg_sample.flags & WG_SAMPLE_FLAG_HAS_DURATION)
diff --git a/dlls/winegstreamer/wg_transform.c b/dlls/winegstreamer/wg_transform.c
index e3b7d8ed056..1c9dc6f72bb 100644
--- a/dlls/winegstreamer/wg_transform.c
+++ b/dlls/winegstreamer/wg_transform.c
@@ -522,6 +522,7 @@ NTSTATUS wg_transform_read_data(void *args)
     struct wg_sample *read_sample = params->sample;
     struct wg_transform_sample *transform_sample;
     struct wg_format buffer_format;
+    bool broken_timestamp = false;
     GstBuffer *buffer;
     struct list *head;
     GstMapInfo info;
@@ -549,6 +550,11 @@ NTSTATUS wg_transform_read_data(void *args)
             pthread_mutex_unlock(&transform->mutex);
             return MF_E_TRANSFORM_STREAM_CHANGE;
         }
+
+        if (buffer_format.major_type == WG_MAJOR_TYPE_VIDEO
+                && buffer_format.u.video.fps_n <= 1
+                && buffer_format.u.video.fps_d <= 1)
+            broken_timestamp = true;
     }
 
     gst_buffer_map(buffer, &info, GST_MAP_READ);
@@ -557,12 +563,12 @@ NTSTATUS wg_transform_read_data(void *args)
     memcpy(read_sample->data, info.data, read_sample->size);
     gst_buffer_unmap(buffer, &info);
 
-    if (buffer->pts != GST_CLOCK_TIME_NONE)
+    if (buffer->pts != GST_CLOCK_TIME_NONE && !broken_timestamp)
     {
         read_sample->flags |= WG_SAMPLE_FLAG_HAS_PTS;
         read_sample->pts = buffer->pts / 100;
     }
-    if (buffer->duration != GST_CLOCK_TIME_NONE)
+    if (buffer->duration != GST_CLOCK_TIME_NONE && !broken_timestamp)
     {
         read_sample->flags |= WG_SAMPLE_FLAG_HAS_DURATION;
         read_sample->duration = buffer->duration / 100;
-- 
2.34.1

