From b90b4207c326a3faf0e6ff5fb0649bd8a081fab7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Fri, 21 Jan 2022 14:25:58 +0100
Subject: [PATCH 62/88] winegstreamer: Add an audioconverter and audioresampler
 elements.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=51931
Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=52391
CW-Bug-Id: #19854
---
 dlls/winegstreamer/unix_private.h |  1 +
 dlls/winegstreamer/wg_parser.c    |  2 +-
 dlls/winegstreamer/wg_transform.c | 23 +++++++++++++++++++++--
 3 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/dlls/winegstreamer/unix_private.h b/dlls/winegstreamer/unix_private.h
index 38349eb5e8d..e6b0f3636f7 100644
--- a/dlls/winegstreamer/unix_private.h
+++ b/dlls/winegstreamer/unix_private.h
@@ -24,6 +24,7 @@
 #include "unixlib.h"
 
 extern bool init_gstreamer(void) DECLSPEC_HIDDEN;
+extern GstElement *create_element(const char *name, const char *plugin_set) DECLSPEC_HIDDEN;
 extern GstCaps *wg_format_to_caps(const struct wg_format *format) DECLSPEC_HIDDEN;
 
 extern NTSTATUS wg_transform_create(void *args) DECLSPEC_HIDDEN;
diff --git a/dlls/winegstreamer/wg_parser.c b/dlls/winegstreamer/wg_parser.c
index 2970e2464a2..02bf639962f 100644
--- a/dlls/winegstreamer/wg_parser.c
+++ b/dlls/winegstreamer/wg_parser.c
@@ -1280,7 +1280,7 @@ static gboolean sink_query_cb(GstPad *pad, GstObject *parent, GstQuery *query)
     }
 }
 
-static GstElement *create_element(const char *name, const char *plugin_set)
+GstElement *create_element(const char *name, const char *plugin_set)
 {
     GstElement *element;
 
diff --git a/dlls/winegstreamer/wg_transform.c b/dlls/winegstreamer/wg_transform.c
index d87b8cfa2c4..d96923594e2 100644
--- a/dlls/winegstreamer/wg_transform.c
+++ b/dlls/winegstreamer/wg_transform.c
@@ -210,9 +210,10 @@ NTSTATUS wg_transform_create(void *args)
     struct wg_encoded_format input_format = *params->input_format;
     struct wg_format output_format = *params->output_format;
     GstElement *first = NULL, *last = NULL, *element;
+    GstCaps *raw_caps, *src_caps, *sink_caps;
     struct wg_transform *transform;
-    GstCaps *src_caps, *sink_caps;
     GstPadTemplate *template;
+    const gchar *media_type;
     GstSegment *segment;
     int ret;
 
@@ -226,14 +227,31 @@ NTSTATUS wg_transform_create(void *args)
     assert(src_caps);
     sink_caps = wg_format_to_caps(&output_format);
     assert(sink_caps);
+    media_type = gst_structure_get_name(gst_caps_get_structure(sink_caps, 0));
+    raw_caps = gst_caps_new_empty_simple(media_type);
+    assert(raw_caps);
 
     transform->container = gst_bin_new("wg_transform");
     assert(transform->container);
 
-    if (!(element = try_create_transform(src_caps, sink_caps)) ||
+    if (!(element = try_create_transform(src_caps, raw_caps)) ||
             !transform_append_element(transform, element, &first, &last))
         goto failed;
 
+    switch (output_format.major_type)
+    {
+    case WG_MAJOR_TYPE_AUDIO:
+        if (!(element = create_element("audioconvert", "base")) ||
+                !transform_append_element(transform, element, &first, &last))
+            goto failed;
+        if (!(element = create_element("audioresample", "base")) ||
+                !transform_append_element(transform, element, &first, &last))
+            goto failed;
+        break;
+    default:
+        break;
+    }
+
     if (!(transform->their_sink = gst_element_get_static_pad(first, "sink")))
     {
         GST_ERROR("Failed to find target sink pad.");
@@ -312,6 +330,7 @@ NTSTATUS wg_transform_create(void *args)
     params->transform = transform;
 
 failed:
+    gst_caps_unref(raw_caps);
     gst_caps_unref(src_caps);
     gst_caps_unref(sink_caps);
 
-- 
2.34.1

