From 0b3d3540b821de5b5318451727410bead52c4712 Mon Sep 17 00:00:00 2001
From: Zhiyi Zhang <zzhang@codeweavers.com>
Date: Mon, 25 Jul 2022 12:01:07 +0800
Subject: [PATCH] ntdll: Restore the timezone bias cache.

After 7161dcd, the timezone bias is calculated every time when SystemTimeOfDayInformation is queried.
This restores the cache for timezone bias.

Improve HROT framerate from ~100fps to ~500fps. The game calls RtlSystemTimeToLocalTime() frequently.

Signed-off-by: Zhiyi Zhang <zzhang@codeweavers.com>
---
 dlls/ntdll/unix/system.c | 27 ++++++++++++++++++++-------
 1 file changed, 20 insertions(+), 7 deletions(-)

diff --git a/dlls/ntdll/unix/system.c b/dlls/ntdll/unix/system.c
index c914f5432a3..d4c0cec1396 100644
--- a/dlls/ntdll/unix/system.c
+++ b/dlls/ntdll/unix/system.c
@@ -243,6 +243,8 @@ static struct
 }
 cpu_override;
 
+static pthread_mutex_t timezone_mutex = PTHREAD_MUTEX_INITIALIZER;
+
 /*******************************************************************************
  * Architecture specific feature detection for CPUs
  *
@@ -2680,17 +2682,28 @@ NTSTATUS WINAPI NtQuerySystemInformation( SYSTEM_INFORMATION_CLASS class,
 
     case SystemTimeOfDayInformation:  /* 3 */
     {
+        static LONGLONG last_bias;
+        static time_t last_utc;
         struct tm *tm;
-        time_t now;
+        time_t utc;
         SYSTEM_TIMEOFDAY_INFORMATION sti = {{{ 0 }}};
 
         sti.BootTime.QuadPart = server_start_time;
-        now = time( NULL );
-        tm = gmtime( &now );
-        sti.TimeZoneBias.QuadPart = mktime( tm ) - now;
-        tm = localtime( &now );
-        if (tm->tm_isdst) sti.TimeZoneBias.QuadPart -= 3600;
-        sti.TimeZoneBias.QuadPart *= TICKSPERSEC;
+
+        utc = time( NULL );
+        pthread_mutex_lock( &timezone_mutex );
+        if (utc != last_utc)
+        {
+            last_utc = utc;
+            tm = gmtime( &utc );
+            last_bias = mktime( tm ) - utc;
+            tm = localtime( &utc );
+            if (tm->tm_isdst) last_bias -= 3600;
+            last_bias *= TICKSPERSEC;
+        }
+        sti.TimeZoneBias.QuadPart = last_bias;
+        pthread_mutex_unlock( &timezone_mutex );
+
         NtQuerySystemTime( &sti.SystemTime );
 
         if (size <= sizeof(sti))

