From: Myah Caron <qsniyg@protonmail.com>
Subject: [PATCH] ntdll: Map top-down if dll characteristics include DYNAMIC_BASE.
Message-Id: <5zupjdLvdJ1Ln4zJEpQogefY0pyXGckHXW80VLr6SEkCSshyxjMzU0pT00AJRVabpRAdocDUMPapJO81VRqhSq5tsrUO3iTeGuqXjqHlHIA=@protonmail.com>
Date: Tue, 13 Oct 2020 19:36:43 +0000

Wine-bug: https://bugs.winehq.org/show_bug.cgi?id=44893
Wine-bug: https://bugs.winehq.org/show_bug.cgi?id=48641
Signed-off-by: Myah Caron <qsniyg@protonmail.com>
---
Since I don't know how to write a test for this with the wine build system, I've written one here:
https://github.com/qsniyg/wine_dll_load_test/tree/b2b64bc8d7d1589cbfeb1dbb533674e4b32ed2b3/2

The reason for the two DLLs in the test is because I initially believed the issue was caused by
the conflict between both binkw64.dll and skse64_1_5_97.dll having a preferred imagebase of 0x180000000
(as noted by Focht).

If --dynamicbase is added to the linker options, it will allocate the DLL top-down rather than bottom-up.
This patch fixes the SKSE issue, as it requires its base address to be > 0x78000000.

diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 6a90770b3b4..b85e7497e04 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -2321,8 +2321,9 @@ static NTSTATUS load_native_dll( LPCWSTR load_path, const UNICODE_STRING *nt_nam
 {
     void *module = NULL;
     SIZE_T len = 0;
+    ULONG alloc_type = (image_info->DllCharacteristics & IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE) ? MEM_TOP_DOWN : 0;
     NTSTATUS status = NtMapViewOfSection( mapping, NtCurrentProcess(), &module, 0, 0, NULL, &len,
-                                          ViewShare, 0, PAGE_EXECUTE_READ );
+                                          ViewShare, alloc_type, PAGE_EXECUTE_READ );
 
     if (status == STATUS_IMAGE_NOT_AT_BASE) status = STATUS_SUCCESS;
 #ifdef _WIN64

--
2.28.0

