From eaa41f8fcf0b31d0b08993d70a5ce11f0e5dc11c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Thu, 19 Mar 2020 12:08:33 +0100
Subject: [PATCH 3/4] server: Always send replies with writev.

---
 server/request.c | 35 ++++++++++++++---------------------
 1 file changed, 14 insertions(+), 21 deletions(-)

diff --git a/server/request.c b/server/request.c
index 11111111111..11111111111 100644
--- a/server/request.c
+++ b/server/request.c
@@ -256,34 +256,27 @@ void write_reply( struct thread *thread )
 }
 
 /* send a reply to the current thread */
-static void send_reply( union generic_reply *reply )
+void send_reply( union generic_reply *reply )
 {
     int ret;
 
-    if (!current->reply_size)
-    {
-        if ((ret = write( get_unix_fd( current->reply_fd ),
-                          reply, sizeof(*reply) )) != sizeof(*reply)) goto error;
-    }
-    else
-    {
-        struct iovec vec[2];
+    struct iovec vec[2];
 
-        vec[0].iov_base = (void *)reply;
-        vec[0].iov_len  = sizeof(*reply);
-        vec[1].iov_base = current->reply_data;
-        vec[1].iov_len  = current->reply_size;
+    vec[0].iov_base = (void *)reply;
+    vec[0].iov_len  = sizeof(*reply);
+    vec[1].iov_base = current->reply_data;
+    vec[1].iov_len  = current->reply_size;
 
-        if ((ret = writev( get_unix_fd( current->reply_fd ), vec, 2 )) < sizeof(*reply)) goto error;
+    if ((ret = writev( get_unix_fd( current->reply_fd ), vec, 2 )) < sizeof(*reply)) goto error;
 
-        if ((current->reply_towrite = current->reply_size - (ret - sizeof(*reply))))
-        {
-            /* couldn't write it all, wait for POLLOUT */
-            set_fd_events( current->reply_fd, POLLOUT );
-            set_fd_events( current->request_fd, 0 );
-            return;
-        }
+    if ((current->reply_towrite = current->reply_size - (ret - sizeof(*reply))))
+    {
+        /* couldn't write it all, wait for POLLOUT */
+        set_fd_events( current->reply_fd, POLLOUT );
+        set_fd_events( current->request_fd, 0 );
+        return;
     }
+
     if (current->reply_data != current->rep_data) free( current->reply_data );
     current->reply_data = NULL;
     return;
