From 3ec22629d2154e75fe88148595d1640d5310fced Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty <etaash.mathamsetty@gmail.com>
Date: Sat, 22 Oct 2022 13:52:37 -0400
Subject: [PATCH] kernelbase: Implement various transacted file APIs.

fix missing new lines

fix more formatting issues

more formatting fixes

Link: https://gitlab.winehq.org/wine/wine/-/merge_requests/1145

CW-Bug-Id: #21447
---
 dlls/kernel32/kernel32.spec     |  22 ++++---
 dlls/kernelbase/file.c          | 112 ++++++++++++++++++++++++++++++++
 dlls/kernelbase/kernelbase.spec |  12 ++++
 3 files changed, 136 insertions(+), 10 deletions(-)

diff --git a/dlls/kernel32/kernel32.spec b/dlls/kernel32/kernel32.spec
index a03ebc1eb6f..156b7433046 100644
--- a/dlls/kernel32/kernel32.spec
+++ b/dlls/kernel32/kernel32.spec
@@ -272,8 +272,8 @@
 @ stdcall -import CreateDirectoryA(str ptr)
 @ stdcall CreateDirectoryExA(str str ptr)
 @ stdcall -import CreateDirectoryExW(wstr wstr ptr)
-# @ stub CreateDirectoryTransactedA
-# @ stub CreateDirectoryTransactedW
+@ stdcall -import CreateDirectoryTransactedA(str str ptr ptr)
+@ stdcall -import CreateDirectoryTransactedW(wstr wstr ptr ptr)
 @ stdcall -import CreateDirectoryW(wstr ptr)
 @ stdcall -import CreateEventA(ptr long long str)
 @ stdcall -import CreateEventExA(ptr str long long)
@@ -283,11 +283,13 @@
 @ stdcall -import CreateFiberEx(long long long ptr ptr)
 @ stdcall -import CreateFile2(wstr long long long ptr)
 @ stdcall -import CreateFileA(str long long ptr long long long)
+@ stdcall -import CreateFileTransactedA(str long long ptr long long long ptr ptr ptr)
 @ stdcall CreateFileMappingA(long ptr long long long str)
 # @ stub CreateFileMappingNumaA
 @ stdcall -import CreateFileMappingNumaW(long ptr long long long wstr long)
 @ stdcall -import CreateFileMappingW(long ptr long long long wstr)
 @ stdcall -import CreateFileW(wstr long long ptr long long long)
+@ stdcall -import CreateFileTransactedW(wstr long long ptr long long long ptr ptr ptr)
 @ stdcall -import CreateHardLinkA(str str ptr)
 @ stdcall CreateHardLinkTransactedA(str str ptr ptr)
 @ stdcall CreateHardLinkTransactedW(wstr wstr ptr ptr)
@@ -364,8 +366,8 @@
 @ stdcall DeleteCriticalSection(ptr) NTDLL.RtlDeleteCriticalSection
 @ stdcall -import DeleteFiber(ptr)
 @ stdcall -import DeleteFileA(str)
-# @ stub DeleteFileTransactedA
-# @ stub DeleteFileTransactedW
+@ stdcall -import DeleteFileTransactedA(str ptr)
+@ stdcall -import DeleteFileTransactedW(wstr ptr)
 @ stdcall -import DeleteFileW(wstr)
 @ stdcall -import DeleteProcThreadAttributeList(ptr)
 # @ stub DisableThreadProfiling
@@ -486,8 +488,8 @@
 @ stdcall -import FindFirstFileExW(wstr long ptr long ptr long)
 # @ stub FindFirstFileNameTransactedW
 # @ stub FindFirstFileNameW
-# @ stub FindFirstFileTransactedA
-# @ stub FindFirstFileTransactedW
+@ stdcall -import FindFirstFileTransactedA(str long ptr long ptr long ptr)
+@ stdcall -import FindFirstFileTransactedW(wstr long ptr long ptr long ptr)
 @ stdcall -import FindFirstFileW(wstr ptr)
 # @ stub FindFirstStreamTransactedW
 @ stdcall -import FindFirstStreamW(wstr long ptr long)
@@ -675,8 +677,8 @@
 @ stdcall -import GetFileAttributesA(str)
 @ stdcall -import GetFileAttributesExA(str long ptr)
 @ stdcall -import GetFileAttributesExW(wstr long ptr)
-# @ stub GetFileAttributesTransactedA
-# @ stub GetFileAttributesTransactedW
+@ stdcall -import GetFileAttributesTransactedA(str long ptr ptr)
+@ stdcall -import GetFileAttributesTransactedW(wstr long ptr ptr)
 @ stdcall -import GetFileAttributesW(wstr)
 # @ stub GetFileBandwidthReservation
 @ stdcall -import GetFileInformationByHandle(long ptr)
@@ -1290,8 +1292,8 @@
 @ stdcall -import ReplaceFile(wstr wstr wstr long ptr ptr) ReplaceFileW
 @ stdcall ReplaceFileA(str str str long ptr ptr)
 @ stdcall -import ReplaceFileW(wstr wstr wstr long ptr ptr)
-# @ stub RemoveDirectoryTransactedA
-# @ stub RemoveDirectoryTransactedW
+@ stdcall -import RemoveDirectoryTransactedA(str ptr)
+@ stdcall -import RemoveDirectoryTransactedW(wstr ptr)
 @ stdcall -import RemoveDllDirectory(ptr)
 # @ stub RemoveSecureMemoryCacheCallback
 # @ stub ReplacePartitionUnit
diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index 56b855482ce..fa886aca87e 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -594,6 +594,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH CopyFileW( const WCHAR *source, const WCHAR *dest,
     return CopyFileExW( source, dest, NULL, NULL, NULL, fail_if_exists ? COPY_FILE_FAIL_IF_EXISTS : 0 );
 }
 
+/***********************************************************************
+ *	CreateDirectoryTransactedA   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH CreateDirectoryTransactedA(LPCSTR template, LPCSTR path, LPSECURITY_ATTRIBUTES sa, HANDLE hTransaction)
+{
+    FIXME("(%s %s %p %p), semi-stub\n", debugstr_a(template), debugstr_a(path), sa, hTransaction);
+    return CreateDirectoryA(path, sa);
+}
 
 /***********************************************************************
  *	CreateDirectoryA   (kernelbase.@)
@@ -606,6 +614,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH CreateDirectoryA( LPCSTR path, LPSECURITY_ATTRIBUT
     return CreateDirectoryW( pathW, sa );
 }
 
+/***********************************************************************
+ *	CreateDirectoryTransactedW   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH CreateDirectoryTransactedW(LPCWSTR template, LPCWSTR path, LPSECURITY_ATTRIBUTES sa, HANDLE hTransaction)
+{
+    FIXME("(%s %s %p %p), semi-stub\n", debugstr_w(template), debugstr_w(path), sa, hTransaction);
+    return CreateDirectoryW(path, sa);
+}
 
 /***********************************************************************
  *	CreateDirectoryW   (kernelbase.@)
@@ -693,6 +709,20 @@ HANDLE WINAPI DECLSPEC_HOTPATCH CreateFile2( LPCWSTR name, DWORD access, DWORD s
     return CreateFileW( name, access, sharing, sa, creation, flags | attributes, template );
 }
 
+/*************************************************************************
+ *	CreateFileTransactedA   (kernelbase.@)
+ */
+HANDLE WINAPI DECLSPEC_HOTPATCH CreateFileTransactedA( LPCSTR name, DWORD access, DWORD sharing,
+                                                       LPSECURITY_ATTRIBUTES sa, DWORD creation,
+                                                       DWORD attributes, HANDLE template,
+                                                       HANDLE transaction, PUSHORT pusMiniVersion,
+                                                       PVOID pExtendedParameter )
+{
+    FIXME( "(%s %lx %lx %p %lx %lx %p %p %p %p), semi-stub\n", debugstr_a(name), access, sharing, sa,
+           creation, attributes, template, transaction, pusMiniVersion, pExtendedParameter );
+    
+    return CreateFileA( name, access, sharing, sa, creation, attributes, template );
+}
 
 /*************************************************************************
  *	CreateFileA   (kernelbase.@)
@@ -731,6 +761,20 @@ static UINT get_nt_file_options( DWORD attributes )
     return options;
 }
 
+/*************************************************************************
+ *	CreateFileTransactedW   (kernelbase.@)
+ */
+HANDLE WINAPI DECLSPEC_HOTPATCH CreateFileTransactedW( LPCWSTR name, DWORD access, DWORD sharing,
+                                                       LPSECURITY_ATTRIBUTES sa, DWORD creation,
+                                                       DWORD attributes, HANDLE template, HANDLE transaction,
+                                                       PUSHORT pusMiniVersion, PVOID pExtendedParameter )
+{
+    FIXME( "(%s %lx %lx %p %lx %lx %p %p %p %p), semi-stub\n", debugstr_w(name), access, sharing, sa,
+           creation, attributes, template, transaction, pusMiniVersion, pExtendedParameter );
+
+    return CreateFileW( name, access, sharing, sa, creation, attributes, template );
+}
+
 /*************************************************************************
  *	CreateFileW   (kernelbase.@)
  */
@@ -943,6 +987,14 @@ BOOLEAN WINAPI /* DECLSPEC_HOTPATCH */ CreateSymbolicLinkW( LPCWSTR link, LPCWST
     return TRUE;
 }
 
+/***********************************************************************
+ *	DeleteFileTransactedA   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH DeleteFileTransactedA(LPCSTR path, HANDLE hTransaction)
+{
+    FIXME("(%s %p): semi-stub\n", debugstr_a(path), hTransaction);
+    return DeleteFileA(path);
+}
 
 /***********************************************************************
  *	DeleteFileA   (kernelbase.@)
@@ -955,6 +1007,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH DeleteFileA( LPCSTR path )
     return DeleteFileW( pathW );
 }
 
+/***********************************************************************
+ *	DeleteFileTransactedW   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH DeleteFileTransactedW(LPCWSTR path, HANDLE hTransaction)
+{
+    FIXME("(%s %p): semi-stub\n", debugstr_w(path), hTransaction);
+    return DeleteFileW(path);
+}
 
 /***********************************************************************
  *	DeleteFileW   (kernelbase.@)
@@ -1074,6 +1134,16 @@ BOOL WINAPI DECLSPEC_HOTPATCH FindNextChangeNotification( HANDLE handle )
     return set_ntstatus( status );
 }
 
+/******************************************************************************
+ *	FindFirstFileTransactedA   (kernelbase.@)
+ */
+HANDLE WINAPI DECLSPEC_HOTPATCH FindFirstFileTransactedA(LPCSTR filename, FINDEX_INFO_LEVELS level,
+                                                  LPVOID data, FINDEX_SEARCH_OPS search_op,
+                                                  LPVOID filter, DWORD flags, HANDLE hTransaction)
+{
+    FIXME( "(%s %d %p %d %p %lx %p): semi-stub\n", debugstr_a(filename), level, data, search_op, filter, flags, hTransaction );
+    return FindFirstFileExA(filename, level, data, search_op, filter, flags);
+}
 
 /******************************************************************************
  *	FindFirstFileExA   (kernelbase.@)
@@ -1104,6 +1174,16 @@ HANDLE WINAPI DECLSPEC_HOTPATCH FindFirstFileExA( const char *filename, FINDEX_I
     return handle;
 }
 
+/******************************************************************************
+ *	FindFirstFileTransactedW   (kernelbase.@)
+ */
+HANDLE WINAPI DECLSPEC_HOTPATCH FindFirstFileTransactedW(LPCWSTR filename, FINDEX_INFO_LEVELS level,
+                                                  LPVOID data, FINDEX_SEARCH_OPS search_op,
+                                                  LPVOID filter, DWORD flags, HANDLE hTransaction)
+{
+    FIXME( "(%s %d %p %d %p %lx %p): semi-stub\n", debugstr_w(filename), level, data, search_op, filter, flags, hTransaction );
+    return FindFirstFileExW(filename, level, data, search_op, filter, flags);
+}
 
 /******************************************************************************
  *	FindFirstFileExW   (kernelbase.@)
@@ -1563,6 +1643,14 @@ UINT WINAPI DECLSPEC_HOTPATCH GetCurrentDirectoryW( UINT buflen, LPWSTR buf )
     return RtlGetCurrentDirectory_U( buflen * sizeof(WCHAR), buf ) / sizeof(WCHAR);
 }
 
+/**************************************************************************
+ *	GetFileAttributesTransactedA   (kernelbase.@)
+ */
+DWORD WINAPI DECLSPEC_HOTPATCH GetFileAttributesTransactedA(LPCSTR name, GET_FILEEX_INFO_LEVELS level, void *ptr, HANDLE hTransaction)
+{
+    FIXME("(%s %p): semi-stub\n", debugstr_a(name), hTransaction);
+    return GetFileAttributesExA(name, level, ptr);
+}
 
 /**************************************************************************
  *	GetFileAttributesA   (kernelbase.@)
@@ -1575,6 +1663,14 @@ DWORD WINAPI DECLSPEC_HOTPATCH GetFileAttributesA( LPCSTR name )
     return GetFileAttributesW( nameW );
 }
 
+/**************************************************************************
+ *	GetFileAttributesTransactedW   (kernelbase.@)
+ */
+DWORD WINAPI DECLSPEC_HOTPATCH GetFileAttributesTransactedW(LPCWSTR name, GET_FILEEX_INFO_LEVELS level, void *ptr, HANDLE hTransaction)
+{
+    FIXME("(%s %p): semi-stub\n", debugstr_w(name), hTransaction);
+    return GetFileAttributesExW(name, level, ptr);
+}
 
 /**************************************************************************
  *	GetFileAttributesW   (kernelbase.@)
@@ -3458,6 +3554,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH ReadFileScatter( HANDLE file, FILE_SEGMENT_ELEMENT
                                             segments, count, &offset, NULL ));
 }
 
+/***********************************************************************
+ *	RemoveDirectoryTransactedA   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH RemoveDirectoryTransactedA( LPCSTR path, HANDLE hTransaction )
+{
+    FIXME("(%s %p), semi-stub\n", debugstr_a(path), hTransaction);
+    return RemoveDirectoryA(path);
+}
 
 /***********************************************************************
  *	RemoveDirectoryA   (kernelbase.@)
@@ -3470,6 +3574,14 @@ BOOL WINAPI DECLSPEC_HOTPATCH RemoveDirectoryA( LPCSTR path )
     return RemoveDirectoryW( pathW );
 }
 
+/***********************************************************************
+ *	RemoveDirectoryTransactedW   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH RemoveDirectoryTransactedW( LPCWSTR path, HANDLE hTransaction )
+{
+    FIXME("(%s %p), semi-stub\n", debugstr_w(path), hTransaction);
+    return RemoveDirectoryW(path);
+}
 
 /***********************************************************************
  *	RemoveDirectoryW   (kernelbase.@)
diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index b8b301cba3e..61945e4ce65 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -177,7 +177,9 @@
 @ stdcall CreateBoundaryDescriptorW(wstr long)
 @ stdcall CreateConsoleScreenBuffer(long long ptr long ptr)
 @ stdcall CreateDirectoryA(str ptr)
+@ stdcall CreateDirectoryTransactedA(str str ptr ptr)
 @ stdcall CreateDirectoryExW(wstr wstr ptr)
+@ stdcall CreateDirectoryTransactedW(wstr wstr ptr ptr)
 @ stdcall CreateDirectoryW(wstr ptr)
 # @ stub CreateEnclave
 @ stdcall CreateEventA(ptr long long str)
@@ -188,10 +190,12 @@
 @ stdcall CreateFiberEx(long long long ptr ptr)
 @ stdcall CreateFile2(wstr long long long ptr)
 @ stdcall CreateFileA(str long long ptr long long long)
+@ stdcall CreateFileTransactedA(str long long ptr long long long ptr ptr ptr)
 @ stdcall CreateFileMappingFromApp(long ptr long int64 wstr)
 @ stdcall CreateFileMappingNumaW(long ptr long long long wstr long)
 @ stdcall CreateFileMappingW(long ptr long long long wstr)
 @ stdcall CreateFileW(wstr long long ptr long long long)
+@ stdcall CreateFileTransactedW(wstr long long ptr long long long ptr ptr ptr)
 @ stdcall CreateHardLinkA(str str ptr)
 @ stdcall CreateHardLinkW(wstr wstr ptr)
 @ stdcall CreateIoCompletionPort(long long long long)
@@ -253,7 +257,9 @@
 @ stdcall DeleteCriticalSection(ptr) ntdll.RtlDeleteCriticalSection
 @ stdcall DeleteFiber(ptr)
 @ stdcall DeleteFileA(str)
+@ stdcall DeleteFileTransactedA(str ptr)
 @ stdcall DeleteFileW(wstr)
+@ stdcall DeleteFileTransactedW(wstr ptr)
 @ stdcall DeleteProcThreadAttributeList(ptr)
 # @ stub DeleteStateAtomValue
 # @ stub DeleteStateContainer
@@ -358,7 +364,9 @@
 @ stdcall FindFirstChangeNotificationW(wstr long long)
 @ stdcall FindFirstFileA(str ptr)
 @ stdcall FindFirstFileExA(str long ptr long ptr long)
+@ stdcall FindFirstFileTransactedA(str long ptr long ptr long ptr)
 @ stdcall FindFirstFileExW(wstr long ptr long ptr long)
+@ stdcall FindFirstFileTransactedW(wstr long ptr long ptr long ptr)
 # @ stub FindFirstFileNameW
 @ stdcall FindFirstFileW(wstr ptr)
 @ stdcall FindFirstFreeAce(ptr ptr)
@@ -507,7 +515,9 @@
 @ stub GetFallbackDisplayName
 @ stdcall GetFileAttributesA(str)
 @ stdcall GetFileAttributesExA(str long ptr)
+@ stdcall GetFileAttributesTransactedA(str long ptr ptr)
 @ stdcall GetFileAttributesExW(wstr long ptr)
+@ stdcall GetFileAttributesTransactedW(wstr long ptr ptr)
 @ stdcall GetFileAttributesW(wstr)
 @ stdcall GetFileInformationByHandle(long ptr)
 @ stdcall GetFileInformationByHandleEx(long long ptr long)
@@ -1338,6 +1348,8 @@
 @ stdcall RemapPredefinedHandleInternal(long long)
 @ stdcall RemoveDirectoryA(str)
 @ stdcall RemoveDirectoryW(wstr)
+@ stdcall RemoveDirectoryTransactedA(str ptr)
+@ stdcall RemoveDirectoryTransactedW(wstr ptr)
 @ stdcall RemoveDllDirectory(ptr)
 # @ stub RemovePackageStatus
 # @ stub RemovePackageStatusForUser


From 9d9da40155bbca0c3cf525a461bf5e3ccbace031 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:22:56 +0100
Subject: [PATCH 1/8] msvcp90: Add _Cin_func implementation.

Wine-bug: https://bugs.winehq.org/show_bug.cgi?id=47304
---
 dlls/msvcp80/msvcp80.spec | 4 ++--
 dlls/msvcp90/ios.c        | 7 +++++++
 dlls/msvcp90/msvcp90.spec | 4 ++--
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 020e8d26fc7..8cf90ea4d50 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2117,8 +2117,8 @@
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IEAAX_K0G@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXII_W@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAX_K0_W@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
-@ stub -arch=win32 ?_Cin_func@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cin_func@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cin_func@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ() _Cin_func
+@ cdecl -arch=win64 ?_Cin_func@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ() _Cin_func
 # extern -arch=win64 ?_Cl@?5???$log@M@std@@YA?AV?$complex@M@1@AEBV21@@Z@4MB
 # extern -arch=win32 ?_Cl@?5???$log@N@std@@YA?AV?$complex@N@1@ABV21@@Z@4NB
 # extern -arch=win64 ?_Cl@?5???$log@N@std@@YA?AV?$complex@N@1@AEBV21@@Z@4NB
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index d176dffa802..c5dc43f3cb4 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15959,3 +15959,10 @@ void free_io(void)
     basic_ostream_wchar_vbase_dtor(&wclog.obj);
     basic_filebuf_wchar_dtor(&filebuf_wchar_log);
 }
+
+/* ?_Cin_func@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ */
+/* ?_Cin_func@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ */
+basic_istream_char* __cdecl _Cin_func(void)
+{
+    return &cin.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index 1e79400e469..532c477294c 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -2380,8 +2380,8 @@
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IEAAX_K0G@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IAEXII_W@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@IEAAX_K0_W@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
-@ stub -arch=win32 ?_Cin_func@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cin_func@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cin_func@std@@YAAAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ() _Cin_func
+@ cdecl -arch=win64 ?_Cin_func@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@1@XZ() _Cin_func
 # extern -arch=win64 ?_Cl@?5???$log@M@std@@YA?AV?$complex@M@1@AEBV21@@Z@4MB
 # extern -arch=win32 ?_Cl@?5???$log@N@std@@YA?AV?$complex@N@1@ABV21@@Z@4NB
 # extern -arch=win64 ?_Cl@?5???$log@N@std@@YA?AV?$complex@N@1@AEBV21@@Z@4NB
-- 
GitLab


From 60c2bd7b620ebd657ce09ea4121cf10f7ee73da0 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:22:57 +0100
Subject: [PATCH 2/8] msvcp90: Add _Wcin_func implementation.

---
 dlls/msvcp80/msvcp80.spec |  8 ++++----
 dlls/msvcp90/ios.c        | 14 ++++++++++++++
 dlls/msvcp90/msvcp90.spec |  8 ++++----
 3 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 8cf90ea4d50..87bc70e57fe 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2824,10 +2824,10 @@
 @ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
 @ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
+@ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
+@ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
+@ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index c5dc43f3cb4..a58ff709a46 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15966,3 +15966,17 @@ basic_istream_char* __cdecl _Cin_func(void)
 {
     return &cin.obj;
 }
+
+/* ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ */
+/* ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ */
+basic_istream_wchar* __cdecl _Wcin_func_short(void)
+{
+    return &ucin.obj;
+}
+
+/* ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ */
+/* ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ */
+basic_istream_wchar* __cdecl _Wcin_func(void)
+{
+    return &wcin.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index 532c477294c..b2488763131 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -3167,10 +3167,10 @@
 @ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
 @ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
+@ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
+@ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
+@ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-- 
GitLab


From ad964cd5b8ea9883077c39b6b950d3d58cbced8d Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:22:58 +0100
Subject: [PATCH 3/8] msvcp90: Add _Cout_func implementation.

---
 dlls/msvcp80/msvcp80.spec | 4 ++--
 dlls/msvcp90/ios.c        | 7 +++++++
 dlls/msvcp90/msvcp90.spec | 4 ++--
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 87bc70e57fe..179b9329447 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2151,8 +2151,8 @@
 @ stub ?_Cosh@?$_Ctraits@M@std@@SAMMM@Z
 @ stub ?_Cosh@?$_Ctraits@N@std@@SANNN@Z
 @ stub ?_Cosh@?$_Ctraits@O@std@@SAOOO@Z
-@ stub -arch=win32 ?_Cout_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cout_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cout_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cout_func
+@ cdecl -arch=win64 ?_Cout_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cout_func
 @ stub -arch=win32 ?_Debug_message@std@@YAXPBD0@Z
 @ stub -arch=win64 ?_Debug_message@std@@YAXPEBD0@Z
 @ thiscall -arch=win32 ?_Decref@facet@locale@std@@QAEPAV123@XZ(ptr) locale_facet__Decref
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index a58ff709a46..c13ed6b4e36 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15980,3 +15980,10 @@ basic_istream_wchar* __cdecl _Wcin_func(void)
 {
     return &wcin.obj;
 }
+
+/* ?_Cout_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+/* ?_Cout_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+basic_ostream_char* __cdecl _Cout_func(void)
+{
+    return &cout.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index b2488763131..6740e47b93f 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -2414,8 +2414,8 @@
 @ stub ?_Cosh@?$_Ctraits@M@std@@SAMMM@Z
 @ stub ?_Cosh@?$_Ctraits@N@std@@SANNN@Z
 @ stub ?_Cosh@?$_Ctraits@O@std@@SAOOO@Z
-@ stub -arch=win32 ?_Cout_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cout_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cout_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cout_func
+@ cdecl -arch=win64 ?_Cout_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cout_func
 @ stub -arch=win32 ?_Debug_message@std@@YAXPBD0@Z
 @ stub -arch=win64 ?_Debug_message@std@@YAXPEBD0@Z
 @ thiscall -arch=win32 ?_Decref@facet@locale@std@@QAEPAV123@XZ(ptr) locale_facet__Decref
-- 
GitLab


From ef746b306a078c1cd4893bf9e161f23a4b918540 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:22:59 +0100
Subject: [PATCH 4/8] msvcp90: Add _Clog_func implementation.

---
 dlls/msvcp80/msvcp80.spec | 4 ++--
 dlls/msvcp90/ios.c        | 7 +++++++
 dlls/msvcp90/msvcp90.spec | 4 ++--
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 179b9329447..8aecaad284b 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2126,8 +2126,8 @@
 @ extern -arch=win64 ?_Clocptr@_Locimp@locale@std@@0PEAV123@EA locale__Locimp__Clocptr
 @ cdecl -arch=win32 ?_Clocptr_func@_Locimp@locale@std@@CAAAPAV123@XZ() locale__Locimp__Clocptr_func
 @ cdecl -arch=win64 ?_Clocptr_func@_Locimp@locale@std@@CAAEAPEAV123@XZ() locale__Locimp__Clocptr_func
-@ stub -arch=win32 ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Clog_func
+@ cdecl -arch=win64 ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Clog_func
 @ stub -arch=win64 ?_Cm@?5???$log@M@std@@YA?AV?$complex@M@1@AEBV21@@Z@4MB
 @ stub -arch=win64 ?_Cm@?5???$log@N@std@@YA?AV?$complex@N@1@AEBV21@@Z@4NB
 @ thiscall -arch=win32 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z(ptr long long) basic_string_char__Copy
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index c13ed6b4e36..8eedf0fe23b 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15987,3 +15987,10 @@ basic_ostream_char* __cdecl _Cout_func(void)
 {
     return &cout.obj;
 }
+
+/* ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+/* ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+basic_ostream_char* __cdecl _Clog_func(void)
+{
+    return &MSVCP_clog.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index 6740e47b93f..d0861437cc6 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -2389,8 +2389,8 @@
 @ extern -arch=win64 ?_Clocptr@_Locimp@locale@std@@0PEAV123@EA locale__Locimp__Clocptr
 @ cdecl -arch=win32 ?_Clocptr_func@_Locimp@locale@std@@CAAAPAV123@XZ() locale__Locimp__Clocptr_func
 @ cdecl -arch=win64 ?_Clocptr_func@_Locimp@locale@std@@CAAEAPEAV123@XZ() locale__Locimp__Clocptr_func
-@ stub -arch=win32 ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Clog_func
+@ cdecl -arch=win64 ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Clog_func
 @ stub -arch=win64 ?_Cm@?5???$log@M@std@@YA?AV?$complex@M@1@AEBV21@@Z@4MB
 @ stub -arch=win64 ?_Cm@?5???$log@N@std@@YA?AV?$complex@N@1@AEBV21@@Z@4NB
 @ thiscall -arch=win32 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z(ptr long long) basic_string_char__Copy
-- 
GitLab


From dfef29596b42f8744794d203d9e05e29fa58871d Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:23:00 +0100
Subject: [PATCH 5/8] msvcp90: Add _Cerr_func implementation.

---
 dlls/msvcp80/msvcp80.spec | 4 ++--
 dlls/msvcp90/ios.c        | 7 +++++++
 dlls/msvcp90/msvcp90.spec | 4 ++--
 3 files changed, 11 insertions(+), 4 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 8aecaad284b..2bc65d9d65b 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2109,8 +2109,8 @@
 @ cdecl -arch=win64 ?_BADOFF_func@std@@YAAEB_JXZ() std_BADOFF_func
 @ thiscall -arch=i386 ?_Callfns@ios_base@std@@AAEXW4event@12@@Z(ptr long) ios_base_Callfns
 @ cdecl -arch=win64 ?_Callfns@ios_base@std@@AEAAXW4event@12@@Z(ptr long) ios_base_Callfns
-@ stub -arch=win32 ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cerr_func
+@ cdecl -arch=win64 ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cerr_func
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXIID@Z(ptr long long long) MSVCP_basic_string_char_Chassign
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAX_K0D@Z(ptr long long long) MSVCP_basic_string_char_Chassign
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IAEXIIG@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index 8eedf0fe23b..6f791084099 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15994,3 +15994,10 @@ basic_ostream_char* __cdecl _Clog_func(void)
 {
     return &MSVCP_clog.obj;
 }
+
+/* ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+/* ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
+basic_ostream_char* __cdecl _Cerr_func(void)
+{
+    return &cerr.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index d0861437cc6..52f9c9be014 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -2372,8 +2372,8 @@
 @ cdecl -arch=arm ?_Callfns@ios_base@std@@AAAXW4event@12@@Z(ptr long) ios_base_Callfns
 @ thiscall -arch=i386 ?_Callfns@ios_base@std@@AAEXW4event@12@@Z(ptr long) ios_base_Callfns
 @ cdecl -arch=win64 ?_Callfns@ios_base@std@@AEAAXW4event@12@@Z(ptr long) ios_base_Callfns
-@ stub -arch=win32 ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
-@ stub -arch=win64 ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ
+@ cdecl -arch=win32 ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cerr_func
+@ cdecl -arch=win64 ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ() _Cerr_func
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXIID@Z(ptr long long long) MSVCP_basic_string_char_Chassign
 @ cdecl -arch=win64 ?_Chassign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IEAAX_K0D@Z(ptr long long long) MSVCP_basic_string_char_Chassign
 @ thiscall -arch=win32 ?_Chassign@?$basic_string@GU?$char_traits@G@std@@V?$allocator@G@2@@std@@IAEXIIG@Z(ptr long long long) MSVCP_basic_string_wchar_Chassign
-- 
GitLab


From 2f45744d9a1733ccc1410f21c4a77d269e92f2b2 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:23:02 +0100
Subject: [PATCH 6/8] msvcp90: Add _Wcout_func implementation.

---
 dlls/msvcp80/msvcp80.spec |  8 ++++----
 dlls/msvcp90/ios.c        | 15 +++++++++++++++
 dlls/msvcp90/msvcp90.spec |  8 ++++----
 3 files changed, 23 insertions(+), 8 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 2bc65d9d65b..423e703d34c 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2832,10 +2832,10 @@
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
+@ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
+@ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
+@ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
 @ thiscall -arch=win32 ?_Widen_s@?$ctype@D@std@@QBEPBDPBD0PADI@Z(ptr ptr ptr ptr long) ctype_char__Widen_s
 @ cdecl -arch=win64 ?_Widen_s@?$ctype@D@std@@QEBAPEBDPEBD0PEAD_K@Z(ptr ptr ptr ptr long) ctype_char__Widen_s
 @ thiscall -arch=win32 ?_Widen_s@?$ctype@G@std@@QBEPBDPBD0PAGI@Z(ptr ptr ptr ptr long) ctype_wchar__Widen_s
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index 6f791084099..a6231af7257 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -15988,6 +15988,21 @@ basic_ostream_char* __cdecl _Cout_func(void)
     return &cout.obj;
 }
 
+/* ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+/* ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wcout_func_short(void)
+{
+    return &ucout.obj;
+}
+
+
+/* ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+/* ?_Wcout_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wcout_func(void)
+{
+    return &wcout.obj;
+}
+
 /* ?_Clog_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
 /* ?_Clog_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
 basic_ostream_char* __cdecl _Clog_func(void)
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index 52f9c9be014..7194dfb477c 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -3175,10 +3175,10 @@
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
 @ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
 @ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
+@ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
+@ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
+@ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
 @ thiscall -arch=win32 ?_Widen_s@?$ctype@D@std@@QBEPBDPBD0PADI@Z(ptr ptr ptr ptr long) ctype_char__Widen_s
 @ cdecl -arch=win64 ?_Widen_s@?$ctype@D@std@@QEBAPEBDPEBD0PEAD_K@Z(ptr ptr ptr ptr long) ctype_char__Widen_s
 @ thiscall -arch=win32 ?_Widen_s@?$ctype@G@std@@QBEPBDPBD0PAGI@Z(ptr ptr ptr ptr long) ctype_wchar__Widen_s
-- 
GitLab


From 40fdf9edc8845bd38b0bec7555db0929871469ba Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:23:03 +0100
Subject: [PATCH 7/8] msvcp90: Add _Wclog_func implementation.

---
 dlls/msvcp80/msvcp80.spec |  8 ++++----
 dlls/msvcp90/ios.c        | 14 ++++++++++++++
 dlls/msvcp90/msvcp90.spec |  8 ++++----
 3 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index 423e703d34c..b5fdab98fde 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2828,10 +2828,10 @@
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
-@ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wclog_func_short
+@ cdecl -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wclog_func_short
+@ cdecl -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wclog_func
+@ cdecl -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wclog_func
 @ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
 @ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
 @ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index a6231af7257..662c159fcc3 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -16010,6 +16010,20 @@ basic_ostream_char* __cdecl _Clog_func(void)
     return &MSVCP_clog.obj;
 }
 
+/* ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+/* ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wclog_func_short(void)
+{
+    return &uclog.obj;
+}
+
+/* ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+/* ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wclog_func(void)
+{
+    return &wclog.obj;
+}
+
 /* ?_Cerr_func@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
 /* ?_Cerr_func@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@1@XZ */
 basic_ostream_char* __cdecl _Cerr_func(void)
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index 7194dfb477c..a42a296d320 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -3171,10 +3171,10 @@
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
-@ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wclog_func_short
+@ cdecl -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wclog_func_short
+@ cdecl -arch=win32 ?_Wclog_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wclog_func
+@ cdecl -arch=win64 ?_Wclog_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wclog_func
 @ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
 @ cdecl -arch=win64 ?_Wcout_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcout_func_short
 @ cdecl -arch=win32 ?_Wcout_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcout_func
-- 
GitLab


From 698a066a821c0e457f7b0ec06019ee00c45e805d Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 30 Oct 2022 22:23:04 +0100
Subject: [PATCH 8/8] msvcp90: Add _Wcerr_func implementation.

---
 dlls/msvcp80/msvcp80.spec |  8 ++++----
 dlls/msvcp90/ios.c        | 14 ++++++++++++++
 dlls/msvcp90/msvcp90.spec |  8 ++++----
 3 files changed, 22 insertions(+), 8 deletions(-)

diff --git a/dlls/msvcp80/msvcp80.spec b/dlls/msvcp80/msvcp80.spec
index b5fdab98fde..06816896d06 100644
--- a/dlls/msvcp80/msvcp80.spec
+++ b/dlls/msvcp80/msvcp80.spec
@@ -2820,10 +2820,10 @@
 @ cdecl -arch=win64 ?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAXXZ(ptr) basic_streambuf_wchar__Unlock
 @ thiscall -arch=win32 ?_Unlock@_Mutex@std@@QAEXXZ(ptr) mutex_unlock
 @ cdecl -arch=win64 ?_Unlock@_Mutex@std@@QEAAXXZ(ptr) mutex_unlock
-@ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcerr_func_short
+@ cdecl -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcerr_func_short
+@ cdecl -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcerr_func
+@ cdecl -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcerr_func
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
diff --git a/dlls/msvcp90/ios.c b/dlls/msvcp90/ios.c
index 662c159fcc3..1240bb537c9 100644
--- a/dlls/msvcp90/ios.c
+++ b/dlls/msvcp90/ios.c
@@ -16030,3 +16030,17 @@ basic_ostream_char* __cdecl _Cerr_func(void)
 {
     return &cerr.obj;
 }
+
+/* ?_Wcerr_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+/* ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wcerr_func_short(void)
+{
+    return &ucerr.obj;
+}
+
+/* ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+/* ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ */
+basic_ostream_wchar* __cdecl _Wcerr_func(void)
+{
+    return &wcerr.obj;
+}
diff --git a/dlls/msvcp90/msvcp90.spec b/dlls/msvcp90/msvcp90.spec
index a42a296d320..766f248aaa6 100644
--- a/dlls/msvcp90/msvcp90.spec
+++ b/dlls/msvcp90/msvcp90.spec
@@ -3163,10 +3163,10 @@
 @ cdecl -arch=win64 ?_Unlock@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QEAAXXZ(ptr) basic_streambuf_wchar__Unlock
 @ thiscall -arch=win32 ?_Unlock@_Mutex@std@@QAEXXZ(ptr) mutex_unlock
 @ cdecl -arch=win64 ?_Unlock@_Mutex@std@@QEAAXXZ(ptr) mutex_unlock
-@ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ
-@ stub -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
-@ stub -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ
+@ cdecl -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcerr_func_short
+@ cdecl -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@GU?$char_traits@G@std@@@1@XZ() _Wcerr_func_short
+@ cdecl -arch=win32 ?_Wcerr_func@std@@YAAAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcerr_func
+@ cdecl -arch=win64 ?_Wcerr_func@std@@YAAEAV?$basic_ostream@_WU?$char_traits@_W@std@@@1@XZ() _Wcerr_func
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win64 ?_Wcin_func@std@@YAAEAV?$basic_istream@GU?$char_traits@G@std@@@1@XZ() _Wcin_func_short
 @ cdecl -arch=win32 ?_Wcin_func@std@@YAAAV?$basic_istream@_WU?$char_traits@_W@std@@@1@XZ() _Wcin_func
-- 
GitLab

From 3aa65bd020f7e75eb098db684c7f693f8ddd1d07 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?R=C3=A9mi=20Bernon?= <rbernon@codeweavers.com>
Date: Tue, 1 Nov 2022 15:03:01 +0100
Subject: [PATCH] winecrt0: Move loading of __wine_unix_call to an inline
 function.

This improves performance of unix calls a little by removing one level
of indirection and a branch.
---
 dlls/winecrt0/Makefile.in |  1 -
 dlls/winecrt0/unix_lib.c  | 56 ---------------------------------------
 include/wine/unixlib.h    | 32 ++++++++++++++++++++--
 3 files changed, 30 insertions(+), 59 deletions(-)
 delete mode 100644 dlls/winecrt0/unix_lib.c

diff --git a/dlls/winecrt0/Makefile.in b/dlls/winecrt0/Makefile.in
index 6915e69eb4b..db68f399ec3 100644
--- a/dlls/winecrt0/Makefile.in
+++ b/dlls/winecrt0/Makefile.in
@@ -18,4 +18,3 @@ C_SRCS = \
 	register.c \
 	setjmp.c \
 	stub.c \
-	unix_lib.c
diff --git a/dlls/winecrt0/unix_lib.c b/dlls/winecrt0/unix_lib.c
deleted file mode 100644
index c86897b9905..00000000000
--- a/dlls/winecrt0/unix_lib.c
+++ /dev/null
@@ -1,56 +0,0 @@
-/*
- * Support for the Unix part of builtin dlls
- *
- * Copyright 2019 Alexandre Julliard
- *
- * This library is free software; you can redistribute it and/or
- * modify it under the terms of the GNU Lesser General Public
- * License as published by the Free Software Foundation; either
- * version 2.1 of the License, or (at your option) any later version.
- *
- * This library is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
- * Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public
- * License along with this library; if not, write to the Free Software
- * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
- */
-
-#ifdef __WINE_PE_BUILD
-
-#include <stdarg.h>
-
-#include "ntstatus.h"
-#define WIN32_NO_STATUS
-#include "windef.h"
-#include "winbase.h"
-#include "winternl.h"
-#include "wine/unixlib.h"
-
-static NTSTATUS (WINAPI *p__wine_unix_call)( unixlib_handle_t, unsigned int, void * );
-
-static void load_func( void **func, const char *name, void *def )
-{
-    if (!*func)
-    {
-        HMODULE module = GetModuleHandleA( "ntdll.dll" );
-        void *proc = GetProcAddress( module, name );
-        InterlockedExchangePointer( func, proc ? proc : def );
-    }
-}
-#define LOAD_FUNC(name) load_func( (void **)&p ## name, #name, fallback ## name )
-
-static NTSTATUS __cdecl fallback__wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args )
-{
-    return STATUS_DLL_NOT_FOUND;
-}
-
-NTSTATUS WINAPI __wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args )
-{
-    LOAD_FUNC( __wine_unix_call );
-    return p__wine_unix_call( handle, code, args );
-}
-
-#endif  /* __WINE_PE_BUILD */
diff --git a/include/wine/unixlib.h b/include/wine/unixlib.h
index ef60b32184c..fe7a08effbd 100644
--- a/include/wine/unixlib.h
+++ b/include/wine/unixlib.h
@@ -24,10 +24,10 @@
 typedef NTSTATUS (*unixlib_entry_t)( void *args );
 typedef UINT64 unixlib_handle_t;
 
-extern NTSTATUS WINAPI __wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args );
-
 #ifdef WINE_UNIX_LIB
 
+extern NTSTATUS WINAPI __wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args );
+
 /* some useful helpers from ntdll */
 extern const char *ntdll_get_build_dir(void);
 extern const char *ntdll_get_data_dir(void);
@@ -264,6 +264,34 @@ static inline ULONG ntdll_wcstoul( const WCHAR *s, WCHAR **end, int base )
 #define wcstol(str,e,b)    ntdll_wcstol(str,e,b)
 #define wcstoul(str,e,b)   ntdll_wcstoul(str,e,b)
 
+#else
+
+#include "winternl.h"
+
+static inline NTSTATUS WINAPI delayload__wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args );
+static NTSTATUS (WINAPI *__wine_unix_call)( unixlib_handle_t, unsigned int, void * ) = delayload__wine_unix_call;
+static inline NTSTATUS WINAPI fallback__wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args )
+{
+    return STATUS_DLL_NOT_FOUND;
+}
+
+static inline NTSTATUS WINAPI delayload__wine_unix_call( unixlib_handle_t handle, unsigned int code, void *args )
+{
+    UNICODE_STRING ntdll_str;
+    ANSI_STRING name_str;
+    HMODULE module;
+    void *proc;
+
+    RtlInitUnicodeString( &ntdll_str, L"ntdll.dll" );
+    RtlInitAnsiString( &name_str, "__wine_unix_call" );
+
+    if (LdrGetDllHandleEx( LDR_GET_DLL_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT, NULL, NULL, &ntdll_str, &module )) proc = NULL;
+    else if (LdrGetProcedureAddress( module, &name_str, 0, &proc )) proc = NULL;
+
+    InterlockedExchangePointer( (void *)&__wine_unix_call, proc ? proc : fallback__wine_unix_call );
+    return __wine_unix_call( handle, code, args );
+}
+
 #endif /* WINE_UNIX_LIB */
 
 #endif  /* __WINE_WINE_UNIXLIB_H */
-- 
GitLab

From fc5cb9b577a66eab38ea61290bdac60ec36f80ec Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Tue, 28 Jun 2022 17:13:47 +0300
Subject: [PATCH 1/2] ntdll: Partially implement MemoryRegionInformation query.

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---
 dlls/ntdll/tests/virtual.c |  97 +++++++++++++++++++++++++++++++
 dlls/ntdll/unix/virtual.c  | 115 +++++++++++++++++++++++++------------
 dlls/wow64/struct32.h      |  11 ++++
 dlls/wow64/virtual.c       |  23 ++++++++
 include/winternl.h         |  24 ++++++++
 5 files changed, 233 insertions(+), 37 deletions(-)

diff --git a/dlls/ntdll/unix/virtual.c b/dlls/ntdll/unix/virtual.c
index d8b888aa49e..422d717b00d 100644
--- a/dlls/ntdll/unix/virtual.c
+++ b/dlls/ntdll/unix/virtual.c
@@ -4080,48 +4080,13 @@ static int get_free_mem_state_callback( void *start, SIZE_T size, void *arg )
     return 1;
 }
 
-/* get basic information about a memory block */
-static NTSTATUS get_basic_memory_info( HANDLE process, LPCVOID addr,
-                                       MEMORY_BASIC_INFORMATION *info,
-                                       SIZE_T len, SIZE_T *res_len )
+static NTSTATUS fill_basic_memory_info( const void *addr, MEMORY_BASIC_INFORMATION *info )
 {
-    struct file_view *view;
     char *base, *alloc_base = 0, *alloc_end = working_set_limit;
     struct wine_rb_entry *ptr;
+    struct file_view *view;
     sigset_t sigset;
 
-    if (len < sizeof(MEMORY_BASIC_INFORMATION))
-        return STATUS_INFO_LENGTH_MISMATCH;
-
-    if (process != NtCurrentProcess())
-    {
-        NTSTATUS status;
-        apc_call_t call;
-        apc_result_t result;
-
-        memset( &call, 0, sizeof(call) );
-
-        call.virtual_query.type = APC_VIRTUAL_QUERY;
-        call.virtual_query.addr = wine_server_client_ptr( addr );
-        status = server_queue_process_apc( process, &call, &result );
-        if (status != STATUS_SUCCESS) return status;
-
-        if (result.virtual_query.status == STATUS_SUCCESS)
-        {
-            info->BaseAddress       = wine_server_get_ptr( result.virtual_query.base );
-            info->AllocationBase    = wine_server_get_ptr( result.virtual_query.alloc_base );
-            info->RegionSize        = result.virtual_query.size;
-            info->Protect           = result.virtual_query.prot;
-            info->AllocationProtect = result.virtual_query.alloc_prot;
-            info->State             = (DWORD)result.virtual_query.state << 12;
-            info->Type              = (DWORD)result.virtual_query.alloc_type << 16;
-            if (info->RegionSize != result.virtual_query.size)  /* truncated */
-                return STATUS_INVALID_PARAMETER;  /* FIXME */
-            if (res_len) *res_len = sizeof(*info);
-        }
-        return result.virtual_query.status;
-    }
-
     base = ROUND_ADDR( addr, page_mask );
 
     if (is_beyond_limit( base, 1, working_set_limit )) return STATUS_INVALID_PARAMETER;
@@ -4195,6 +4160,79 @@ static NTSTATUS get_basic_memory_info( HANDLE process, LPCVOID addr,
     }
     server_leave_uninterrupted_section( &virtual_mutex, &sigset );
 
+    return STATUS_SUCCESS;
+}
+
+/* get basic information about a memory block */
+static NTSTATUS get_basic_memory_info( HANDLE process, LPCVOID addr,
+                                       MEMORY_BASIC_INFORMATION *info,
+                                       SIZE_T len, SIZE_T *res_len )
+{
+    NTSTATUS status;
+
+    if (len < sizeof(*info))
+        return STATUS_INFO_LENGTH_MISMATCH;
+
+    if (process != NtCurrentProcess())
+    {
+        NTSTATUS status;
+        apc_call_t call;
+        apc_result_t result;
+
+        memset( &call, 0, sizeof(call) );
+
+        call.virtual_query.type = APC_VIRTUAL_QUERY;
+        call.virtual_query.addr = wine_server_client_ptr( addr );
+        status = server_queue_process_apc( process, &call, &result );
+        if (status != STATUS_SUCCESS) return status;
+
+        if (result.virtual_query.status == STATUS_SUCCESS)
+        {
+            info->BaseAddress       = wine_server_get_ptr( result.virtual_query.base );
+            info->AllocationBase    = wine_server_get_ptr( result.virtual_query.alloc_base );
+            info->RegionSize        = result.virtual_query.size;
+            info->Protect           = result.virtual_query.prot;
+            info->AllocationProtect = result.virtual_query.alloc_prot;
+            info->State             = (DWORD)result.virtual_query.state << 12;
+            info->Type              = (DWORD)result.virtual_query.alloc_type << 16;
+            if (info->RegionSize != result.virtual_query.size)  /* truncated */
+                return STATUS_INVALID_PARAMETER;  /* FIXME */
+            if (res_len) *res_len = sizeof(*info);
+        }
+        return result.virtual_query.status;
+    }
+
+    if ((status = fill_basic_memory_info( addr, info ))) return status;
+
+    if (res_len) *res_len = sizeof(*info);
+    return STATUS_SUCCESS;
+}
+
+static NTSTATUS get_memory_region_info( HANDLE process, LPCVOID addr, MEMORY_REGION_INFORMATION *info,
+        SIZE_T len, SIZE_T *res_len )
+{
+    MEMORY_BASIC_INFORMATION basic_info;
+    NTSTATUS status;
+
+    if (len < FIELD_OFFSET(MEMORY_REGION_INFORMATION, CommitSize))
+        return STATUS_INFO_LENGTH_MISMATCH;
+
+    if (process != NtCurrentProcess())
+    {
+        FIXME("Unimplemented for other processes.\n");
+        return STATUS_NOT_IMPLEMENTED;
+    }
+
+    if ((status = fill_basic_memory_info( addr, &basic_info ))) return status;
+
+    info->AllocationBase = basic_info.AllocationBase;
+    info->AllocationProtect = basic_info.AllocationProtect;
+    info->RegionType = 0; /* FIXME */
+    if (len >= FIELD_OFFSET(MEMORY_REGION_INFORMATION, CommitSize))
+        info->RegionSize = basic_info.RegionSize;
+    if (len >= FIELD_OFFSET(MEMORY_REGION_INFORMATION, PartitionId))
+        info->CommitSize = basic_info.State == MEM_COMMIT ? basic_info.RegionSize : 0;
+
     if (res_len) *res_len = sizeof(*info);
     return STATUS_SUCCESS;
 }
@@ -4371,6 +4409,9 @@ NTSTATUS WINAPI NtQueryVirtualMemory( HANDLE process, LPCVOID addr,
         case MemoryMappedFilenameInformation:
             return get_memory_section_name( process, addr, buffer, len, res_len );
 
+        case MemoryRegionInformation:
+            return get_memory_region_info( process, addr, buffer, len, res_len );
+
         case MemoryWineUnixFuncs:
         case MemoryWineUnixWow64Funcs:
             if (len != sizeof(unixlib_handle_t)) return STATUS_INFO_LENGTH_MISMATCH;
diff --git a/dlls/wow64/struct32.h b/dlls/wow64/struct32.h
index 91acc26436f..0a0324a22f3 100644
--- a/dlls/wow64/struct32.h
+++ b/dlls/wow64/struct32.h
@@ -156,6 +156,17 @@ typedef struct
     DWORD    Type;
 } MEMORY_BASIC_INFORMATION32;
 
+typedef struct
+{
+    ULONG AllocationBase;
+    ULONG AllocationProtect;
+    ULONG RegionType;
+    ULONG RegionSize;
+    ULONG CommitSize;
+    ULONG PartitionId;
+    ULONG NodePreference;
+} MEMORY_REGION_INFORMATION32;
+
 typedef struct
 {
     UNICODE_STRING32 SectionFileName;
diff --git a/dlls/wow64/virtual.c b/dlls/wow64/virtual.c
index 8b7d022301f..4d3bb90386a 100644
--- a/dlls/wow64/virtual.c
+++ b/dlls/wow64/virtual.c
@@ -422,6 +422,29 @@ NTSTATUS WINAPI wow64_NtQueryVirtualMemory( UINT *args )
         break;
     }
 
+    case MemoryRegionInformation: /* MEMORY_REGION_INFORMATION */
+    {
+        if (len >= sizeof(MEMORY_REGION_INFORMATION32))
+        {
+            MEMORY_REGION_INFORMATION info;
+            MEMORY_REGION_INFORMATION32 *info32 = ptr;
+
+            if (!(status = NtQueryVirtualMemory( handle, addr, class, &info, sizeof(info), &res_len )))
+            {
+                info32->AllocationBase = PtrToUlong( info.AllocationBase );
+                info32->AllocationProtect = info.AllocationProtect;
+                info32->RegionType = info.RegionType;
+                info32->RegionSize = info.RegionSize;
+                info32->CommitSize = info.CommitSize;
+                info32->PartitionId = info.PartitionId;
+                info32->NodePreference = info.NodePreference;
+            }
+        }
+        else status = STATUS_INFO_LENGTH_MISMATCH;
+        res_len = sizeof(MEMORY_REGION_INFORMATION32);
+        break;
+    }
+
     case MemoryWorkingSetExInformation:  /* MEMORY_WORKING_SET_EX_INFORMATION */
     {
         MEMORY_WORKING_SET_EX_INFORMATION32 *info32 = ptr;
diff --git a/include/winternl.h b/include/winternl.h
index 5c564373fed..c64ff0f9082 100644
--- a/include/winternl.h
+++ b/include/winternl.h
@@ -1971,6 +1971,30 @@ typedef struct _MEMORY_WORKING_SET_EX_INFORMATION {
     MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
 } MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION;
 
+typedef struct _MEMORY_REGION_INFORMATION
+{
+    PVOID AllocationBase;
+    ULONG AllocationProtect;
+    union
+    {
+        ULONG RegionType;
+        struct
+        {
+            ULONG Private : 1;
+            ULONG MappedDataFile : 1;
+            ULONG MappedImage : 1;
+            ULONG MappedPageFile : 1;
+            ULONG MappedPhysical : 1;
+            ULONG DirectMapped : 1;
+            ULONG Reserved : 26;
+        } DUMMYSTRUCTNAME;
+    } DUMMYUNIONNAME;
+    SIZE_T RegionSize;
+    SIZE_T CommitSize;
+    ULONG_PTR PartitionId;
+    ULONG_PTR NodePreference;
+} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION;
+
 typedef enum _MUTANT_INFORMATION_CLASS
 {
     MutantBasicInformation
-- 
GitLab


From 9cd5bc0d86d53c2db32c8025df99a487dad94850 Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Tue, 28 Jun 2022 18:13:54 +0300
Subject: [PATCH 2/2] kernelbase: Add QueryVirtualMemoryInformation().

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---
 dlls/kernelbase/kernelbase.spec |  2 +-
 dlls/kernelbase/memory.c        | 17 +++++++++++++
 include/Makefile.in             |  1 +
 include/memoryapi.h             | 45 +++++++++++++++++++++++++++++++++
 include/winbase.h               |  1 +
 5 files changed, 65 insertions(+), 1 deletion(-)
 create mode 100644 include/memoryapi.h

diff --git a/dlls/kernelbase/kernelbase.spec b/dlls/kernelbase/kernelbase.spec
index cbce448d3e9..c51dbd6bc73 100644
--- a/dlls/kernelbase/kernelbase.spec
+++ b/dlls/kernelbase/kernelbase.spec
@@ -1250,7 +1250,7 @@
 @ stdcall QueryThreadpoolStackInformation(ptr ptr)
 @ stdcall QueryUnbiasedInterruptTime(ptr) ntdll.RtlQueryUnbiasedInterruptTime
 # @ stub QueryUnbiasedInterruptTimePrecise
-# @ stub QueryVirtualMemoryInformation
+@ stdcall QueryVirtualMemoryInformation(long ptr long ptr long ptr)
 @ stdcall QueryWorkingSet(long ptr long)
 @ stdcall QueryWorkingSetEx(long ptr long)
 @ stdcall QueueUserAPC(ptr long long)
diff --git a/dlls/kernelbase/memory.c b/dlls/kernelbase/memory.c
index 412d80f5cfd..19b1d0a3a1a 100644
--- a/dlls/kernelbase/memory.c
+++ b/dlls/kernelbase/memory.c
@@ -1411,6 +1411,23 @@ LPVOID WINAPI DECLSPEC_HOTPATCH VirtualAllocExNuma( HANDLE process, void *addr,
 }
 
 
+/***********************************************************************
+ *             QueryVirtualMemoryInformation   (kernelbase.@)
+ */
+BOOL WINAPI DECLSPEC_HOTPATCH QueryVirtualMemoryInformation( HANDLE process, const void *addr,
+        WIN32_MEMORY_INFORMATION_CLASS info_class, void *info, SIZE_T size, SIZE_T *ret_size)
+{
+    switch (info_class)
+    {
+        case MemoryRegionInfo:
+            return set_ntstatus( NtQueryVirtualMemory( process, addr, MemoryRegionInformation, info, size, ret_size ));
+        default:
+            FIXME("Unsupported info class %u.\n", info_class);
+            return FALSE;
+    }
+}
+
+
 /***********************************************************************
  * CPU functions
  ***********************************************************************/
diff --git a/include/Makefile.in b/include/Makefile.in
index 1c04f9a298b..28ac4b3f2dc 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -411,6 +411,7 @@ SOURCES = \
 	mcx.h \
 	mediaerr.h \
 	mediaobj.idl \
+	memoryapi.h \
 	metahost.idl \
 	mfapi.h \
 	mfd3d12.idl \
diff --git a/include/memoryapi.h b/include/memoryapi.h
new file mode 100644
index 00000000000..8743e67927c
--- /dev/null
+++ b/include/memoryapi.h
@@ -0,0 +1,45 @@
+/*
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+typedef enum WIN32_MEMORY_INFORMATION_CLASS
+{
+    MemoryRegionInfo
+} WIN32_MEMORY_INFORMATION_CLASS;
+
+typedef struct WIN32_MEMORY_REGION_INFORMATION
+{
+    PVOID AllocationBase;
+    ULONG AllocationProtect;
+    union
+    {
+        ULONG Flags;
+        struct
+        {
+            ULONG Private : 1;
+            ULONG MappedDataFile : 1;
+            ULONG MappedImage : 1;
+            ULONG MappedPageFile : 1;
+            ULONG MappedPhysical : 1;
+            ULONG DirectMapped : 1;
+            ULONG Reserved : 26;
+        } DUMMYSTRUCTNAME;
+    } DUMMYUNIONNAME;
+    SIZE_T RegionSize;
+    SIZE_T CommitSize;
+} WIN32_MEMORY_REGION_INFORMATION;
+
+BOOL WINAPI QueryVirtualMemoryInformation(HANDLE process,const void *addr,
+        WIN32_MEMORY_INFORMATION_CLASS info_class, void *info, SIZE_T size, SIZE_T *ret_size);
diff --git a/include/winbase.h b/include/winbase.h
index 58f21a1361a..7c0d8afd36c 100644
--- a/include/winbase.h
+++ b/include/winbase.h
@@ -43,6 +43,7 @@ extern "C" {
 #include <processthreadsapi.h>
 #include <synchapi.h>
 #include <threadpoolapiset.h>
+#include <memoryapi.h>
 
   /* Windows Exit Procedure flag values */
 #define	WEP_FREE_DLL        0
-- 
GitLab

From 404e590e06b4443d76bedfa1bc9f3c25dda6d8cb Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Thu, 27 Oct 2022 19:48:01 +0300
Subject: [PATCH 1/3] kernelbase: Forward some directory info classes in
 GetFileInformationByHandleEx().

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=53590
Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---
 dlls/kernelbase/file.c | 18 ++++++++++++++----
 1 file changed, 14 insertions(+), 4 deletions(-)

diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index 3e1fd5aec4e..c0cdfdcdf84 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -2967,12 +2967,8 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetFileInformationByHandleEx( HANDLE handle, FILE_
     case FileStreamInfo:
     case FileCompressionInfo:
     case FileRemoteProtocolInfo:
-    case FileFullDirectoryInfo:
-    case FileFullDirectoryRestartInfo:
     case FileStorageInfo:
     case FileAlignmentInfo:
-    case FileIdExtdDirectoryInfo:
-    case FileIdExtdDirectoryRestartInfo:
         FIXME( "%p, %u, %p, %lu\n", handle, class, info, size );
         SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
         return FALSE;
@@ -3004,6 +3000,20 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetFileInformationByHandleEx( HANDLE handle, FILE_
                                        (class == FileIdBothDirectoryRestartInfo) );
         break;
 
+    case FileFullDirectoryInfo:
+    case FileFullDirectoryRestartInfo:
+        status = NtQueryDirectoryFile( handle, NULL, NULL, NULL, &io, info, size,
+                                       FileFullDirectoryInformation, FALSE, NULL,
+                                       (class == FileFullDirectoryRestartInfo) );
+        break;
+
+    case FileIdExtdDirectoryInfo:
+    case FileIdExtdDirectoryRestartInfo:
+        status = NtQueryDirectoryFile( handle, NULL, NULL, NULL, &io, info, size,
+                                       FileIdExtdDirectoryInformation, FALSE, NULL,
+                                       (class == FileIdExtdDirectoryRestartInfo) );
+        break;
+
     case FileRenameInfo:
     case FileDispositionInfo:
     case FileAllocationInfo:
-- 
GitLab


From f054d2ab58a6fc129583775e683d84bbdd421425 Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Thu, 27 Oct 2022 21:41:38 +0300
Subject: [PATCH 2/3] kernelbase: Make sure to provide a message for missing
 information classes in GetFileInformationByHandleEx().

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---
 dlls/kernelbase/file.c | 4 ++++
 include/winbase.h      | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index c0cdfdcdf84..5e6d271c3b0 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -2969,6 +2969,10 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetFileInformationByHandleEx( HANDLE handle, FILE_
     case FileRemoteProtocolInfo:
     case FileStorageInfo:
     case FileAlignmentInfo:
+    case FileDispositionInfoEx:
+    case FileRenameInfoEx:
+    case FileCaseSensitiveInfo:
+    case FileNormalizedNameInfo:
         FIXME( "%p, %u, %p, %lu\n", handle, class, info, size );
         SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
         return FALSE;
diff --git a/include/winbase.h b/include/winbase.h
index 277f981982d..58f21a1361a 100644
--- a/include/winbase.h
+++ b/include/winbase.h
@@ -802,6 +802,10 @@ typedef enum _FILE_INFO_BY_HANDLE_CLASS {
     FileIdInfo,
     FileIdExtdDirectoryInfo,
     FileIdExtdDirectoryRestartInfo,
+    FileDispositionInfoEx,
+    FileRenameInfoEx,
+    FileCaseSensitiveInfo,
+    FileNormalizedNameInfo,
     MaximumFileInfoByHandlesClass
 } FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;
 
-- 
GitLab


From 69cff16d696bc2270f26826b3f2be64abf425725 Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Thu, 27 Oct 2022 23:02:37 +0300
Subject: [PATCH 3/3] kernelbase: Forward some more classes in
 GetFileInformationByHandleEx().

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---
 dlls/kernelbase/file.c | 15 ++++++++++++---
 1 file changed, 12 insertions(+), 3 deletions(-)

diff --git a/dlls/kernelbase/file.c b/dlls/kernelbase/file.c
index 5e6d271c3b0..661bc0c2778 100644
--- a/dlls/kernelbase/file.c
+++ b/dlls/kernelbase/file.c
@@ -2964,11 +2964,8 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetFileInformationByHandleEx( HANDLE handle, FILE_
 
     switch (class)
     {
-    case FileStreamInfo:
-    case FileCompressionInfo:
     case FileRemoteProtocolInfo:
     case FileStorageInfo:
-    case FileAlignmentInfo:
     case FileDispositionInfoEx:
     case FileRenameInfoEx:
     case FileCaseSensitiveInfo:
@@ -2977,6 +2974,18 @@ BOOL WINAPI DECLSPEC_HOTPATCH GetFileInformationByHandleEx( HANDLE handle, FILE_
         SetLastError( ERROR_CALL_NOT_IMPLEMENTED );
         return FALSE;
 
+    case FileStreamInfo:
+        status = NtQueryInformationFile( handle, &io, info, size, FileStreamInformation );
+        break;
+
+    case FileCompressionInfo:
+        status = NtQueryInformationFile( handle, &io, info, size, FileCompressionInformation );
+        break;
+
+    case FileAlignmentInfo:
+        status = NtQueryInformationFile( handle, &io, info, size, FileAlignmentInformation );
+        break;
+
     case FileAttributeTagInfo:
         status = NtQueryInformationFile( handle, &io, info, size, FileAttributeTagInformation );
         break;
-- 
GitLab

From 046bed65d46b5b096f473b9929784d2cd2409272 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 23 Oct 2022 23:31:40 +0200
Subject: [PATCH 3/4] msvcrt: Fix error handling for strcat_s.

---
 dlls/msvcrt/string.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/dlls/msvcrt/string.c b/dlls/msvcrt/string.c
index ba2f4fa4357..b787061d789 100644
--- a/dlls/msvcrt/string.c
+++ b/dlls/msvcrt/string.c
@@ -1350,9 +1350,9 @@ int CDECL strcpy_s( char* dst, size_t elem, const char* src )
 int CDECL strcat_s( char* dst, size_t elem, const char* src )
 {
     size_t i, j;
-    if(!dst) return EINVAL;
-    if(elem == 0) return EINVAL;
-    if(!src)
+    if (!MSVCRT_CHECK_PMT(dst != 0)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(elem != 0)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(src != NULL))
     {
         dst[0] = '\0';
         return EINVAL;
@@ -1369,6 +1369,7 @@ int CDECL strcat_s( char* dst, size_t elem, const char* src )
         }
     }
     /* Set the first element to 0, not the first element after the skipped part */
+    MSVCRT_INVALID_PMT("dst[elem] is too small", ERANGE);
     dst[0] = '\0';
     return ERANGE;
 }
-- 
GitLab


From 5b435796399a4bda28b41c0fca35b3e7d5d2df44 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Sun, 23 Oct 2022 23:33:16 +0200
Subject: [PATCH 4/4] msvcrt: Fix error handling for strcpy_s.

---
 dlls/msvcrt/string.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/dlls/msvcrt/string.c b/dlls/msvcrt/string.c
index b787061d789..d58a21406b1 100644
--- a/dlls/msvcrt/string.c
+++ b/dlls/msvcrt/string.c
@@ -1328,9 +1328,9 @@ char* CDECL strcpy(char *dst, const char *src)
 int CDECL strcpy_s( char* dst, size_t elem, const char* src )
 {
     size_t i;
-    if(!elem) return EINVAL;
-    if(!dst) return EINVAL;
-    if(!src)
+    if (!MSVCRT_CHECK_PMT(dst != 0)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(elem != 0)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(src != NULL))
     {
         dst[0] = '\0';
         return EINVAL;
@@ -1340,6 +1340,7 @@ int CDECL strcpy_s( char* dst, size_t elem, const char* src )
     {
         if((dst[i] = src[i]) == '\0') return 0;
     }
+    MSVCRT_INVALID_PMT("dst[elem] is too small", ERANGE);
     dst[0] = '\0';
     return ERANGE;
 }
-- 
GitLab

From 927a9a5a04c9c7d8dbcfbe887594a87887911ce3 Mon Sep 17 00:00:00 2001
From: Bartosz Kosiorek <gang65@poczta.onet.pl>
Date: Thu, 20 Oct 2022 00:55:59 +0200
Subject: [PATCH 4/6] msvcrt: Fix error handling for _mbscmp_l.

---
 dlls/msvcrt/mbcs.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/dlls/msvcrt/mbcs.c b/dlls/msvcrt/mbcs.c
index 49109943665..1754a732cb6 100644
--- a/dlls/msvcrt/mbcs.c
+++ b/dlls/msvcrt/mbcs.c
@@ -982,7 +982,8 @@ int CDECL _mbscmp_l(const unsigned char* str, const unsigned char* cmp, _locale_
 {
   pthreadmbcinfo mbcinfo;
 
-  if (!str || !cmp) return INT_MAX;
+  if (!MSVCRT_CHECK_PMT(str && cmp))
+    return _NLSCMPERROR;
 
   mbcinfo = locale ? locale->mbcinfo : get_mbcinfo();
 
-- 
GitLab

From f943d4497226e69265a8a278f5795756ba1b2f47 Mon Sep 17 00:00:00 2001
From: Piotr Caban <piotr@codeweavers.com>
Date: Sat, 22 Oct 2022 14:32:30 +0200
Subject: [PATCH] msvcrt: Fix _wputenv_s invalid argument handling.

---
 dlls/msvcrt/environ.c       |  4 ++--
 dlls/msvcrt/tests/environ.c | 39 +++++++++++++++++++++++++++++++++++--
 2 files changed, 39 insertions(+), 4 deletions(-)

diff --git a/dlls/msvcrt/environ.c b/dlls/msvcrt/environ.c
index 9800a1b66b1..e541bd5bff0 100644
--- a/dlls/msvcrt/environ.c
+++ b/dlls/msvcrt/environ.c
@@ -197,8 +197,8 @@ errno_t CDECL _wputenv_s(const wchar_t *name, const wchar_t *value)
 
     TRACE("%s %s\n", debugstr_w(name), debugstr_w(value));
 
-    if (!MSVCRT_CHECK_PMT(name != NULL)) return -1;
-    if (!MSVCRT_CHECK_PMT(value != NULL)) return -1;
+    if (!MSVCRT_CHECK_PMT(name != NULL)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(value != NULL)) return EINVAL;
 
     if (!SetEnvironmentVariableW(name, value[0] ? value : NULL))
     {
diff --git a/dlls/msvcrt/tests/environ.c b/dlls/msvcrt/tests/environ.c
index 62e4f3133cf..03129dcbf14 100644
--- a/dlls/msvcrt/tests/environ.c
+++ b/dlls/msvcrt/tests/environ.c
@@ -19,6 +19,7 @@
  */
 
 #include "wine/test.h"
+#include <errno.h>
 #include <stdlib.h>
 #include <process.h>
 
@@ -45,8 +46,10 @@ static const char *a_very_long_env_string =
 
 static char ***(__cdecl *p__p__environ)(void);
 static WCHAR ***(__cdecl *p__p__wenviron)(void);
-static void (*p_get_environ)(char ***);
-static void (*p_get_wenviron)(WCHAR ***);
+static void (__cdecl *p_get_environ)(char ***);
+static void (__cdecl *p_get_wenviron)(WCHAR ***);
+static errno_t (__cdecl *p_putenv_s)(const char*, const char*);
+static errno_t (__cdecl *p_wputenv_s)(const wchar_t*, const wchar_t*);
 
 static char ***p_environ;
 static WCHAR ***p_wenviron;
@@ -61,6 +64,8 @@ static void init(void)
     p_wenviron = (void *)GetProcAddress(hmod, "_wenviron");
     p_get_environ = (void *)GetProcAddress(hmod, "_get_environ");
     p_get_wenviron = (void *)GetProcAddress(hmod, "_get_wenviron");
+    p_putenv_s = (void *)GetProcAddress(hmod, "_putenv_s");
+    p_wputenv_s = (void *)GetProcAddress(hmod, "_wputenv_s");
 }
 
 static void test_system(void)
@@ -237,6 +242,8 @@ static void test__wenviron(void)
 
 static void test_environment_manipulation(void)
 {
+    errno_t ret;
+
     ok( _putenv("cat=") == 0, "_putenv failed on deletion of nonexistent environment variable\n" );
     ok( _putenv("cat=dog") == 0, "failed setting cat=dog\n" );
     ok( strcmp(getenv("cat"), "dog") == 0, "getenv did not return 'dog'\n" );
@@ -247,6 +254,34 @@ static void test_environment_manipulation(void)
     ok( _putenv(a_very_long_env_string) == 0, "_putenv failed for long environment string\n");
 
     ok( getenv("nonexistent") == NULL, "getenv should fail with nonexistent var name\n" );
+
+    if (p_putenv_s)
+    {
+        ret = p_putenv_s(NULL, "dog");
+        ok( ret == EINVAL, "_putenv_s returned %d\n", ret);
+        ret = p_putenv_s("cat", NULL);
+        ok( ret == EINVAL, "_putenv_s returned %d\n", ret);
+        ret = p_putenv_s("a=b", NULL);
+        ok( ret == EINVAL, "_putenv_s returned %d\n", ret);
+        ret = p_putenv_s("cat", "a=b");
+        ok( !ret, "_putenv_s returned %d\n", ret);
+        ret = p_putenv_s("cat", "");
+        ok( !ret, "_putenv_s returned %d\n", ret);
+    }
+
+    if (p_wputenv_s)
+    {
+        ret = p_wputenv_s(NULL, L"dog");
+        ok( ret == EINVAL, "_wputenv_s returned %d\n", ret);
+        ret = p_wputenv_s(L"cat", NULL);
+        ok( ret == EINVAL, "_wputenv_s returned %d\n", ret);
+        ret = p_wputenv_s(L"a=b", NULL);
+        ok( ret == EINVAL, "_wputenv_s returned %d\n", ret);
+        ret = p_wputenv_s(L"cat", L"a=b");
+        ok( !ret, "_wputenv_s returned %d\n", ret);
+        ret = p_wputenv_s(L"cat", L"");
+        ok( !ret, "_wputenv_s returned %d\n", ret);
+    }
 }
 
 START_TEST(environ)
-- 
GitLab

From 53acb6e736d6feb10b19fd609771ecfa33f7d1e9 Mon Sep 17 00:00:00 2001
From: Piotr Caban <piotr@codeweavers.com>
Date: Fri, 21 Oct 2022 13:28:23 +0200
Subject: [PATCH 1/2] msvcrt: Fix _putenv_s return value on error.

---
 dlls/msvcrt/environ.c | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/dlls/msvcrt/environ.c b/dlls/msvcrt/environ.c
index 83a493c1a9a..a35d0877891 100644
--- a/dlls/msvcrt/environ.c
+++ b/dlls/msvcrt/environ.c
@@ -165,17 +165,22 @@ finish:
  */
 errno_t CDECL _putenv_s(const char *name, const char *value)
 {
-    int ret;
+    errno_t ret = 0;
 
     TRACE("%s %s\n", debugstr_a(name), debugstr_a(value));
 
-    if (!MSVCRT_CHECK_PMT(name != NULL)) return -1;
-    if (!MSVCRT_CHECK_PMT(value != NULL)) return -1;
+    if (!MSVCRT_CHECK_PMT(name != NULL)) return EINVAL;
+    if (!MSVCRT_CHECK_PMT(value != NULL)) return EINVAL;
 
-    ret = SetEnvironmentVariableA(name, value[0] ? value : NULL) ? 0 : -1;
-
-    /* _putenv returns success on deletion of nonexistent variable, unlike [Rtl]SetEnvironmentVariable */
-    if ((ret == -1) && (GetLastError() == ERROR_ENVVAR_NOT_FOUND)) ret = 0;
+    if (!SetEnvironmentVariableA(name, value[0] ? value : NULL))
+    {
+        /* _putenv returns success on deletion of nonexistent variable */
+        if (GetLastError() != ERROR_ENVVAR_NOT_FOUND)
+        {
+            msvcrt_set_errno(GetLastError());
+            ret = *_errno();
+        }
+    }
 
     MSVCRT__environ = msvcrt_SnapshotOfEnvironmentA(MSVCRT__environ);
     MSVCRT__wenviron = msvcrt_SnapshotOfEnvironmentW(MSVCRT__wenviron);
-- 
GitLab


From f0e6447b7fc10c21bf6aa04f70a5094f16a294a5 Mon Sep 17 00:00:00 2001
From: Piotr Caban <piotr@codeweavers.com>
Date: Fri, 21 Oct 2022 13:30:19 +0200
Subject: [PATCH 2/2] msvcrt: Fix _wputenv_s return value on error.

---
 dlls/msvcrt/environ.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/dlls/msvcrt/environ.c b/dlls/msvcrt/environ.c
index a35d0877891..9800a1b66b1 100644
--- a/dlls/msvcrt/environ.c
+++ b/dlls/msvcrt/environ.c
@@ -191,19 +191,24 @@ int CDECL _putenv_s(const char *name, co
 /*********************************************************************
  *		_wputenv_s (MSVCRT.@)
  */
-int CDECL _wputenv_s(const wchar_t *name, const wchar_t *value)
+errno_t CDECL _wputenv_s(const wchar_t *name, const wchar_t *value)
 {
-    int ret;
+    errno_t ret = 0;
 
     TRACE("%s %s\n", debugstr_w(name), debugstr_w(value));
 
     if (!MSVCRT_CHECK_PMT(name != NULL)) return EINVAL;
     if (!MSVCRT_CHECK_PMT(value != NULL)) return EINVAL;
 
-    ret = SetEnvironmentVariableW(name, value[0] ? value : NULL) ? 0 : -1;
-
-    /* _putenv returns success on deletion of nonexistent variable, unlike [Rtl]SetEnvironmentVariable */
-    if ((ret == -1) && (GetLastError() == ERROR_ENVVAR_NOT_FOUND)) ret = 0;
+    if (!SetEnvironmentVariableW(name, value[0] ? value : NULL))
+    {
+        /* _putenv returns success on deletion of nonexistent variable */
+        if (GetLastError() != ERROR_ENVVAR_NOT_FOUND)
+        {
+            msvcrt_set_errno(GetLastError());
+            ret = *_errno();
+        }
+    }
 
     MSVCRT__environ = msvcrt_SnapshotOfEnvironmentA(MSVCRT__environ);
     MSVCRT__wenviron = msvcrt_SnapshotOfEnvironmentW(MSVCRT__wenviron);
-- 
GitLab

From 0d21e1cbcf705bb2cba3d59571bb8b730ba2feac Mon Sep 17 00:00:00 2001
From: Brendan Shanks <bshanks@codeweavers.com>
Date: Tue, 15 Feb 2022 12:09:25 -0800
Subject: [PATCH] server: Only require THREAD_SET_LIMITED_INFORMATION access to
 set thread description.

---
 dlls/kernel32/tests/thread.c | 2 --
 server/thread.c              | 4 +++-
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/dlls/kernel32/tests/thread.c b/dlls/kernel32/tests/thread.c
index 0274cb6e266..25e5a0dc1da 100644
--- a/dlls/kernel32/tests/thread.c
+++ b/dlls/kernel32/tests/thread.c
@@ -2538,13 +2538,11 @@ static void test_thread_description(void)
     thread = OpenThread(THREAD_SET_LIMITED_INFORMATION, FALSE, GetCurrentThreadId());
 
     hr = pSetThreadDescription(thread, desc);
-    todo_wine
     ok(hr == HRESULT_FROM_NT(STATUS_SUCCESS), "Failed to set thread description, hr %#lx.\n", hr);
 
     ptr = NULL;
     hr = pGetThreadDescription(GetCurrentThread(), &ptr);
     ok(hr == HRESULT_FROM_NT(STATUS_SUCCESS), "Failed to get thread description, hr %#lx.\n", hr);
-    todo_wine
     ok(!lstrcmpW(ptr, desc), "Unexpected description %s.\n", wine_dbgstr_w(ptr));
     LocalFree(ptr);
 
diff --git a/server/thread.c b/server/thread.c
index f49fbf40b78..c0fb0eef637 100644
--- a/server/thread.c
+++ b/server/thread.c
@@ -1534,8 +1534,10 @@ DECL_HANDLER(get_thread_times)
 DECL_HANDLER(set_thread_info)
 {
     struct thread *thread;
+    unsigned int access = (req->mask == SET_THREAD_INFO_DESCRIPTION) ? THREAD_SET_LIMITED_INFORMATION
+                                                                     : THREAD_SET_INFORMATION;
 
-    if ((thread = get_thread_from_handle( req->handle, THREAD_SET_INFORMATION )))
+    if ((thread = get_thread_from_handle( req->handle, access )))
     {
         set_thread_info( thread, req );
         release_object( thread );
-- 
GitLab

