diff --git a/dlls/ntdll/unix/sync.c b/dlls/ntdll/unix/sync.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/sync.c
+++ b/dlls/ntdll/unix/sync.c
@@ -214,8 +214,6 @@ static inline ULONGLONG monotonic_counter(void)
 #define FUTEX_WAIT_BITSET 9
 #define FUTEX_WAKE_BITSET 10
 
-static int futex_private = 128;
-
 static inline int futex_wait( const int *addr, int val, struct timespec *timeout )
 {
 #if (defined(__i386__) || defined(__arm__)) && _TIME_BITS==64
@@ -226,47 +224,35 @@ static inline int futex_wait( const int *addr, int val, struct timespec *timeout
             long tv_nsec;
         } timeout32 = { timeout->tv_sec, timeout->tv_nsec };
 
-        return syscall( __NR_futex, addr, FUTEX_WAIT | futex_private, val, &timeout32, 0, 0 );
+        return syscall( __NR_futex, addr, FUTEX_WAIT | 128, val, &timeout32, 0, 0 );
     }
 #endif
-    return syscall( __NR_futex, addr, FUTEX_WAIT | futex_private, val, timeout, 0, 0 );
+    return syscall( __NR_futex, addr, FUTEX_WAIT | 128, val, timeout, 0, 0 );
 }
 
 static inline int futex_wake( const int *addr, int val )
 {
-    return syscall( __NR_futex, addr, FUTEX_WAKE | futex_private, val, NULL, 0, 0 );
+    return syscall( __NR_futex, addr, FUTEX_WAKE | 128, val, NULL, 0, 0 );
 }
 
 static inline int futex_wait_abs( const int *addr, int val, struct timespec *timeout )
 {
-    return syscall( __NR_futex, addr, FUTEX_WAIT_BITSET | futex_private, val, timeout, 0, 0xffffffff );
+    return syscall( __NR_futex, addr, FUTEX_WAIT_BITSET | 128, val, timeout, 0, 0xffffffff );
 }
 
 static inline int futex_wait_bitset( const int *addr, int val, struct timespec *timeout, int mask )
 {
-    return syscall( __NR_futex, addr, FUTEX_WAIT_BITSET | futex_private, val, timeout, 0, mask );
+    return syscall( __NR_futex, addr, FUTEX_WAIT_BITSET | 128, val, timeout, 0, mask );
 }
 
 static inline int futex_wake_bitset( const int *addr, int val, int mask )
 {
-    return syscall( __NR_futex, addr, FUTEX_WAKE_BITSET | futex_private, val, NULL, 0, mask );
+    return syscall( __NR_futex, addr, FUTEX_WAKE_BITSET | 128, val, NULL, 0, mask );
 }
 
 static inline int use_futexes(void)
 {
-    static int supported = -1;
-
-    if (supported == -1)
-    {
-        futex_wait( &supported, 10, NULL );
-        if (errno == ENOSYS)
-        {
-            futex_private = 0;
-            futex_wait( &supported, 10, NULL );
-        }
-        supported = (errno != ENOSYS);
-    }
-    return supported;
+    return 1;
 }
 
 #endif

