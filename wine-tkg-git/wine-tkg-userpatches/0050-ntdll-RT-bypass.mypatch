--- a/dlls/ntdll/unix/thread.c	2022-01-10 23:50:38.266465526 -0500
+++ b/dlls/ntdll/unix/thread.c	2022-01-10 23:50:23.512470791 -0500
@@ -1303,6 +1303,8 @@ NTSTATUS WINAPI NtCreateThreadEx( HANDLE
     int ntdll_rt_policy = 0;
     pthread_attr_setschedpolicy (&pthread_attr, ntdll_rt_policy);
     pthread_attr_setschedparam (&pthread_attr, &parm);
+    // Add runtime option for checking thread info.
+    const char *ntdll_rt_bypass = getenv("NTDLL_RT_BYPASS");
 #endif
     DWORD tid = 0;
     int request_pipe[2];
@@ -1443,6 +1445,13 @@ done:
             //thread_data->pthread_id)) {
             return status;
         }
+        
+        // bypass setting all pthreads as RT threads
+        if (ntdll_rt_bypass) {
+            if (sched_getparam( pthread_self(), &param ) != 0) {
+                return status;
+            }
+        }
 
         // set RT for sync threads
         pthread_attr_setinheritsched(&pthread_attr, PTHREAD_EXPLICIT_SCHED);
