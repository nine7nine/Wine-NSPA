 - Fix for some windows installers that hang / don't complete.
 - rebased the original patch on Wine-5.9 (NSPA). Comments in the bug report 
   mention rebasing the patch, show the upstream changes that required a rebase, 
   but did not provide an actual updated patch. (not a big deal. trivial to 
   rebase) 

 Multiple .inf driver installers hang due to missing handling of 
 architecture-specific SourceDisks{Names,Files} .inf sections (NI Native Access 
 1.9,  WinCDEmu 4.1)

 https://bugs.winehq.org/show_bug.cgi?id=48455
 
 NOTE: temp fix. This will get resolved upstream.
 
 johnstonljordan <AT> gmail <DOT> com

--- a/dlls/setupapi/query.c	
+++ a/dlls/setupapi/query.c	
@@ -33,37 +33,6 @@ 
 
 WINE_DEFAULT_DEBUG_CHANNEL(setupapi);
 
-#ifdef __i386__
-static const WCHAR source_disks_names_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s','.','x','8','6',0};
-static const WCHAR source_disks_files_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s','.','x','8','6',0};
-#elif defined(__x86_64__)
-static const WCHAR source_disks_names_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s','.','a','m','d','6','4',0};
-static const WCHAR source_disks_files_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s','.','a','m','d','6','4',0};
-#elif defined(__arm__)
-static const WCHAR source_disks_names_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s','.','a','r','m',0};
-static const WCHAR source_disks_files_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s','.','a','r','m',0};
-#elif defined(__aarch64__)
-static const WCHAR source_disks_names_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s','.','a','r','m','6','4',0};
-static const WCHAR source_disks_files_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s','.','a','r','m','6','4',0};
-#else  /* FIXME: other platforms */
-static const WCHAR source_disks_names_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s',0};
-static const WCHAR source_disks_files_platform[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s',0};
-#endif
-static const WCHAR source_disks_names[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','N','a','m','e','s',0};
-static const WCHAR source_disks_files[] =
-    {'S','o','u','r','c','e','D','i','s','k','s','F','i','l','e','s',0};
-
 /* fills the PSP_INF_INFORMATION struct fill_info is TRUE
  * always returns the required size of the information
  */
--- a/dlls/setupapi/queue.c	
+++ a/dlls/setupapi/queue.c	
@@ -292,11 +292,14 @@ static void get_source_info( HINF hinf,
     DWORD len;
 
     /* find the SourceDisksFiles entry */
-    if (!SetupFindFirstLineW( hinf, L"SourceDisksFiles", src_file, &file_ctx )) return;
+    if (!SetupFindFirstLineW( hinf, L"source_disks_files_platform", src_file, &file_ctx ) &&
+        !SetupFindFirstLineW( hinf, source_disks_files, src_file, &file_ctx )) return;
     if (!SetupGetIntField( &file_ctx, 1, &diskid )) return;
-
+    
     /* now find the diskid in the SourceDisksNames section */
-    if (!SetupFindFirstLineW( hinf, L"SourceDisksNames", NULL, &disk_ctx )) return;
+    if (!SetupFindFirstLineW( hinf, L"source_disks_names_platform", NULL, &disk_ctx ) &&
+        !SetupFindFirstLineW( hinf, source_disks_names, NULL, &disk_ctx )) return;  
+    
     for (;;)
     {
         if (SetupGetIntField( &disk_ctx, 0, &id ) && (id == diskid)) break;

--- a/dlls/setupapi/setupapi_private.h	
+++ a/dlls/setupapi/setupapi_private.h	
@@ -111,4 +111,23 @@ extern OSVERSIONINFOW OsVersionInfo DECLSPEC_HIDDEN;
 extern BOOL create_fake_dll( const WCHAR *name, const WCHAR *source ) DECLSPEC_HIDDEN;
 extern void cleanup_fake_dlls(void) DECLSPEC_HIDDEN;
 
+#ifdef __i386__
+static const WCHAR source_disks_names_platform[] = L"SourceDisksNames.x86";
+static const WCHAR source_disks_files_platform[] = L"SourceDisksFiles.x86";
+#elif defined(__x86_64__)
+static const WCHAR source_disks_names_platform[] = L"SourceDisksNames.amd64";
+static const WCHAR source_disks_files_platform[] = L"SourceDisksFiles.amd64";
+#elif defined(__arm__)
+static const WCHAR source_disks_names_platform[] = L"SourceDisksNames.arm";
+static const WCHAR source_disks_files_platform[] = L"SourceDisksFiles.arm";
+#elif defined(__aarch64__)
+static const WCHAR source_disks_names_platform[] = L"SourceDisksNames.arm64";
+static const WCHAR source_disks_files_platform[] = L"SourceDisksFiles.arm64";
+#else  /* FIXME: other platforms */
+static const WCHAR source_disks_names_platform[] = L"SourceDisksNames";
+static const WCHAR source_disks_files_platform[] = L"SourceDisksFiles";
+#endif
+static const WCHAR source_disks_names[] = L"SourceDisksNames";
+static const WCHAR source_disks_files[] = L"SourceDisksFiles";
+
 #endif /* __SETUPAPI_PRIVATE_H */
-- 

