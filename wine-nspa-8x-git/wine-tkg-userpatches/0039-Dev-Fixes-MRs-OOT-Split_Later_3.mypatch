From: Vijay Kiran Kamuju <infyquest@gmail.com>
Subject: [PATCH] shell32: Partially implement ShellLink_AddDataBlock
Message-Id: <20191212105857.1669-1-infyquest@gmail.com>
Date: Thu, 12 Dec 2019 11:58:57 +0100

Wine Bug: https://bugs.winehq.org/show_bug.cgi?id=38171
Signed-off-by: Vijay Kiran Kamuju <infyquest@gmail.com>
---
 dlls/shell32/shelllink.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/dlls/shell32/shelllink.c b/dlls/shell32/shelllink.c
index 11111111111..11111111111 100644
--- a/dlls/shell32/shelllink.c
+++ b/dlls/shell32/shelllink.c
@@ -2234,8 +2234,11 @@ ShellLink_DataList_Release( IShellLinkDataList* iface )
 static HRESULT WINAPI
 ShellLink_AddDataBlock( IShellLinkDataList* iface, void* pDataBlock )
 {
-    FIXME("(%p)->(%p): stub\n", iface, pDataBlock);
-    return E_NOTIMPL;
+    DATABLOCK_HEADER *hdr = (DATABLOCK_HEADER *)pDataBlock;
+
+    FIXME("(%p)->(%p) (Size: %d - Signature: %08x): partially implemented.\n", iface, pDataBlock, hdr->cbSize, hdr->dwSignature);
+
+    return S_OK;
 }
 
 static HRESULT WINAPI

From: Jefferson Carpenter <jefferson@aoeu2code.com>
#Subject: [PATCH] msxml3: Null check url in parseURL.
Message-Id: <4530cb5e-ce6d-0a97-0d9f-da919bf3409d@aoeu2code.com>
Date: Mon, 14 Jun 2021 23:07:07 +0000

From 765e5f6725e1c41a6fe620cea5e52442fa0aa8f5 Mon Sep 17 00:00:00 2001
From: Jefferson Carpenter <jeffersoncarpenter2@gmail.com>
Date: Sun, 13 Jun 2021 06:20:19 +0000
Subject: [PATCH] msxml3: Null check url in parseURL.

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=51267
Signed-off-by: Jefferson Carpenter <jeffersoncarpenter2@gmail.com>
---
 dlls/msxml3/saxreader.c       | 2 ++
 dlls/msxml3/tests/saxreader.c | 7 +++++++
 2 files changed, 9 insertions(+)

diff --git a/dlls/msxml3/saxreader.c b/dlls/msxml3/saxreader.c
index 11111111111..11111111111 100644
--- a/dlls/msxml3/saxreader.c
+++ b/dlls/msxml3/saxreader.c
@@ -2729,6 +2729,8 @@ static HRESULT internal_parseURL(saxreader *reader, const WCHAR *url, BOOL vbInt
     if (!url && reader->version < MSXML4)
         return E_INVALIDARG;
 
+    if (!url) return E_INVALIDARG;
+
     hr = create_moniker_from_url(url, &mon);
     if(FAILED(hr))
         return hr;
diff --git a/dlls/msxml3/tests/saxreader.c b/dlls/msxml3/tests/saxreader.c
index 11111111111..11111111111 100644
--- a/dlls/msxml3/tests/saxreader.c
+++ b/dlls/msxml3/tests/saxreader.c
@@ -2303,6 +2303,13 @@ static void test_saxreader(void)
         V_VT(&var) = VT_BSTR;
         V_BSTR(&var) = SysAllocString(carriage_ret_test);
 
+        /* crashes on new versions */
+        if (IsEqualGUID(table->clsid, &CLSID_SAXXMLReader) ||
+            IsEqualGUID(table->clsid, &CLSID_SAXXMLReader30)) {
+            hr = ISAXXMLReader_parseURL(reader, NULL);
+            EXPECT_HR(hr, E_INVALIDARG);
+        }
+
         if (IsEqualGUID(table->clsid, &CLSID_SAXXMLReader40) ||
             IsEqualGUID(table->clsid, &CLSID_SAXXMLReader60))

             test_seq = content_handler_test2_alternate;
-- 
2.37.2

From: Fabian Maurer <dark.shadow4@web.de>
Subject: [PATCH] user32: When converting strings from A->W, ignore handles/resources
Message-Id: <20210809215524.448712-1-dark.shadow4@web.de>
Date: Mon,  9 Aug 2021 23:55:24 +0200

Wine-Bug: https://bugs.winehq.org/show_bug.cgi?id=51583
Signed-off-by: Fabian Maurer <dark.shadow4@web.de>
---
 dlls/user32/tests/msg.c | 3 +++
 dlls/user32/winproc.c   | 2 ++
 2 files changed, 5 insertions(+)

diff --git a/dlls/user32/tests/msg.c b/dlls/user32/tests/msg.c
index 11111111111..11111111111 100644
--- a/dlls/user32/tests/msg.c
+++ b/dlls/user32/tests/msg.c
@@ -5433,6 +5433,9 @@ static void test_sys_menu(void)
     ok(!hmenu, "GetSystemMenu error %ld\n", GetLastError());
 
     DestroyWindow(hwnd);
+
+    /* Test invalid text with WM_SETTEXT. This must not crash. */
+    SendMessageA(GetDesktopWindow(), WM_SETTEXT, 0, (LPARAM)55);
 }
 
 /* For shown WS_OVERLAPPEDWINDOW */
diff --git a/dlls/user32/winproc.c b/dlls/user32/winproc.c
index 11111111111..11111111111 100644
--- a/dlls/user32/winproc.c
+++ b/dlls/user32/winproc.c
@@ -338,6 +338,8 @@ LRESULT WINPROC_CallProcAtoW( winproc_callback_t callback, HWND hwnd, UINT msg,
     case LB_ADDFILE:
     case EM_REPLACESEL:
         if (!lParam) ret = callback( hwnd, msg, wParam, lParam, result, arg );
+        else if (IS_INTRESOURCE(lParam)) /* Check for handles/IDs similar to DEFWND_SetTextA */
+            return 0;
         else
         {
             WCHAR *ptr, buffer[512];
-- 
2.37.2

From: Nikolay Sivov <nsivov@codeweavers.com>
Subject: [PATCH 2/2] ntdll: Handle INVALID_HANDLE_VALUE explicitly in NtClose().
Message-Id: <20210810165120.171726-2-nsivov@codeweavers.com>
Date: Tue, 10 Aug 2021 19:51:20 +0300
In-Reply-To: <20210810165120.171726-1-nsivov@codeweavers.com>
References: <20210810165120.171726-1-nsivov@codeweavers.com>

Signed-off-by: Nikolay Sivov <nsivov@codeweavers.com>
---

Reported by Sergey Bychkow as https://bugs.winehq.org/show_bug.cgi?id=51529.

 dlls/ntdll/unix/server.c      | 2 ++
 3 files changed, 2 insertions(+), 3 deletions(-)

diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 11111111111..11111111111 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -1042,6 +1042,8 @@ int server_get_unix_fd( HANDLE handle, unsigned int wanted_access, int *unix_fd,
     ret = get_cached_fd( handle, &fd, type, &access, options );
     if (ret != STATUS_INVALID_HANDLE) goto done;
 
+    if (handle == INVALID_HANDLE_VALUE) return STATUS_SUCCESS;
+
     server_enter_uninterrupted_section( &fd_cache_mutex, &sigset );

     ret = get_cached_fd( handle, &fd, type, &access, options );
     if (ret == STATUS_INVALID_HANDLE)
-- 
2.37.2

From: "Rémi Bernon" <rbernon@codeweavers.com>
Subject: [PATCH 5/5] ntoskrnl.exe: Make user shared data pointers volatile (GCC 11).
Message-Id: <20210927085833.544992-5-rbernon@codeweavers.com>
Date: Mon, 27 Sep 2021 10:58:33 +0200
In-Reply-To: <20210927085833.544992-1-rbernon@codeweavers.com>
References: <20210927085833.544992-1-rbernon@codeweavers.com>

So that GCC 11 stops warning about reading from a 0-size memory region.

Signed-off-by: Rémi Bernon <rbernon@codeweavers.com>
---
 dlls/ntoskrnl.exe/instr.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/ntoskrnl.exe/instr.c b/dlls/ntoskrnl.exe/instr.c
index 11111111111..11111111111 100644
--- a/dlls/ntoskrnl.exe/instr.c
+++ b/dlls/ntoskrnl.exe/instr.c
@@ -497,8 +497,8 @@ WINE_DEFAULT_DEBUG_CHANNEL(int);
 #define SIB_BASE( sib, rex )    (((sib) & 7) | (((rex) & REX_B) ? 8 : 0))
 
 /* keep in sync with dlls/ntdll/thread.c:thread_init */
-static const BYTE *wine_user_shared_data = (BYTE *)0x7ffe0000;
-static const BYTE *user_shared_data      = (BYTE *)0xfffff78000000000;
+static const BYTE *const volatile wine_user_shared_data = (BYTE *)0x7ffe0000;
+static const BYTE *const volatile user_shared_data      = (BYTE *)0xfffff78000000000;
 
 static inline DWORD64 *get_int_reg( CONTEXT *context, int index )
 {

-- 
2.37.2
