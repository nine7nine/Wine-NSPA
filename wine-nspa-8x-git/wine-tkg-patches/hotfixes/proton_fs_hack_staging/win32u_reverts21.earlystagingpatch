diff --git a/patches/user32-Mouse_Message_Hwnd/0005-server-Add-support-for-a-layered-window-region.-v2.patch b/patches/user32-Mouse_Message_Hwnd/0005-server-Add-support-for-a-layered-window-region.-v2.patch
index 9ffdbffd..1acc800d 100644
--- a/patches/user32-Mouse_Message_Hwnd/0005-server-Add-support-for-a-layered-window-region.-v2.patch
+++ b/patches/user32-Mouse_Message_Hwnd/0005-server-Add-support-for-a-layered-window-region.-v2.patch
@@ -1,4 +1,4 @@
-From 0c3e20339d2b531e62819b670b30635af6e75ea0 Mon Sep 17 00:00:00 2001
+From 54065eb714959facb7f4d463d9c8a11e5c6b2b42 Mon Sep 17 00:00:00 2001
 From: Dmitry Timoshkov <dmitry@baikal.ru>
 Date: Wed, 17 May 2017 23:55:55 +0800
 Subject: [PATCH] server: Add support for a layered window region. (v3)
@@ -11,10 +11,10 @@ Subject: [PATCH] server: Add support for a layered window region. (v3)
  4 files changed, 84 insertions(+), 2 deletions(-)
 
 diff --git a/dlls/user32/tests/input.c b/dlls/user32/tests/input.c
-index 62ff4ad7777..a458e002ca0 100644
+index e15de7e5ccd..568fd26bb69 100644
 --- a/dlls/user32/tests/input.c
 +++ b/dlls/user32/tests/input.c
-@@ -3683,13 +3683,11 @@ static void test_Input_mouse(void)
+@@ -3695,13 +3695,11 @@ static void test_Input_mouse(void)
  
          if (msg.message == WM_LBUTTONDOWN)
          {
@@ -29,18 +29,18 @@ index 62ff4ad7777..a458e002ca0 100644
              got_button_up = TRUE;
              break;
 diff --git a/dlls/winex11.drv/bitblt.c b/dlls/winex11.drv/bitblt.c
-index 10388a1cc8f..5ff6e23fa8d 100644
+index 550c5f06f37..8204e3dba9e 100644
 --- a/dlls/winex11.drv/bitblt.c
 +++ b/dlls/winex11.drv/bitblt.c
-@@ -48,6 +48,7 @@
- 
+@@ -46,6 +46,7 @@
+ #include "winbase.h"
  #include "x11drv.h"
  #include "winternl.h"
 +#include "wine/server.h"
  #include "wine/debug.h"
  
  WINE_DEFAULT_DEBUG_CHANNEL(bitblt);
-@@ -1625,6 +1626,48 @@ static inline void add_row( HRGN rgn, RGNDATA *data, int x, int y, int len )
+@@ -1623,6 +1624,48 @@ static inline void add_row( HRGN rgn, RGNDATA *data, int x, int y, int len )
  }
  #endif
  
@@ -89,7 +89,7 @@ index 10388a1cc8f..5ff6e23fa8d 100644
  /***********************************************************************
   *           update_surface_region
   */
-@@ -1643,6 +1686,7 @@ static void update_surface_region( struct x11drv_window_surface *surface )
+@@ -1641,6 +1684,7 @@ static void update_surface_region( struct x11drv_window_surface *surface )
      if (!surface->is_argb && surface->color_key == CLR_INVALID)
      {
          XShapeCombineMask( gdi_display, surface->window, ShapeBounding, 0, 0, None, ShapeSet );
@@ -97,7 +97,7 @@ index 10388a1cc8f..5ff6e23fa8d 100644
          return;
      }
  
-@@ -1753,6 +1797,7 @@ static void update_surface_region( struct x11drv_window_surface *surface )
+@@ -1751,6 +1795,7 @@ static void update_surface_region( struct x11drv_window_surface *surface )
          free( data );
      }
  
