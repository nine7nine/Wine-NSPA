From fb5e9adb5eb72fa5d8369ec2e014985450432329 Mon Sep 17 00:00:00 2001
From: Thomas Crider <gloriouseggroll@gmail.com>
Date: Sat, 19 Feb 2022 16:58:07 -0700
Subject: [PATCH 04/88] Revert "winegstreamer: Create static pads on
 wg_transform struct."

This reverts commit 71bf5b24d7efabfcacfa707198efc4be0da3e446.
---
 dlls/winegstreamer/gst_private.h  |  3 +-
 dlls/winegstreamer/main.c         |  9 ++----
 dlls/winegstreamer/unixlib.h      |  2 --
 dlls/winegstreamer/wg_format.c    | 40 ++----------------------
 dlls/winegstreamer/wg_transform.c | 51 +------------------------------
 dlls/winegstreamer/wma_decoder.c  |  2 +-
 6 files changed, 7 insertions(+), 100 deletions(-)

diff --git a/dlls/winegstreamer/gst_private.h b/dlls/winegstreamer/gst_private.h
index a63daaf04b9..8bc9f838d29 100644
--- a/dlls/winegstreamer/gst_private.h
+++ b/dlls/winegstreamer/gst_private.h
@@ -96,8 +96,7 @@ uint64_t wg_parser_stream_get_duration(struct wg_parser_stream *stream);
 void wg_parser_stream_seek(struct wg_parser_stream *stream, double rate,
         uint64_t start_pos, uint64_t stop_pos, DWORD start_flags, DWORD stop_flags);
 
-struct wg_transform *wg_transform_create(const struct wg_format *input_format,
-        const struct wg_format *output_format);
+struct wg_transform *wg_transform_create(void);
 void wg_transform_destroy(struct wg_transform *transform);
 
 unsigned int wg_format_get_max_size(const struct wg_format *format);
diff --git a/dlls/winegstreamer/main.c b/dlls/winegstreamer/main.c
index 95b22abebb7..af5a691371d 100644
--- a/dlls/winegstreamer/main.c
+++ b/dlls/winegstreamer/main.c
@@ -254,14 +254,9 @@ void wg_parser_stream_seek(struct wg_parser_stream *stream, double rate,
     __wine_unix_call(unix_handle, unix_wg_parser_stream_seek, &params);
 }
 
-struct wg_transform *wg_transform_create(const struct wg_format *input_format,
-        const struct wg_format *output_format)
+struct wg_transform *wg_transform_create(void)
 {
-    struct wg_transform_create_params params =
-    {
-        .input_format = input_format,
-        .output_format = output_format,
-    };
+    struct wg_transform_create_params params = {0};
 
     if (__wine_unix_call(unix_handle, unix_wg_transform_create, &params))
         return NULL;
diff --git a/dlls/winegstreamer/unixlib.h b/dlls/winegstreamer/unixlib.h
index 4adbb694766..8e3f5e84bfb 100644
--- a/dlls/winegstreamer/unixlib.h
+++ b/dlls/winegstreamer/unixlib.h
@@ -232,8 +232,6 @@ struct wg_parser_stream_seek_params
 struct wg_transform_create_params
 {
     struct wg_transform *transform;
-    const struct wg_format *input_format;
-    const struct wg_format *output_format;
 };
 
 enum unix_funcs
diff --git a/dlls/winegstreamer/wg_format.c b/dlls/winegstreamer/wg_format.c
index 40b9acfefff..8f771bb8abd 100644
--- a/dlls/winegstreamer/wg_format.c
+++ b/dlls/winegstreamer/wg_format.c
@@ -394,43 +394,6 @@ static GstCaps *wg_format_to_caps_video(const struct wg_format *format)
     return caps;
 }
 
-static GstCaps *wg_format_to_caps_wma(const struct wg_format *format)
-{
-    GstBuffer *buffer;
-    GstCaps *caps;
-
-    if (!(caps = gst_caps_new_empty_simple("audio/x-wma")))
-        return NULL;
-    if (format->u.wma.version)
-        gst_caps_set_simple(caps, "wmaversion", G_TYPE_INT, format->u.wma.version, NULL);
-
-    if (format->u.wma.bitrate)
-        gst_caps_set_simple(caps, "bitrate", G_TYPE_INT, format->u.wma.bitrate, NULL);
-    if (format->u.wma.rate)
-        gst_caps_set_simple(caps, "rate", G_TYPE_INT, format->u.wma.rate, NULL);
-    if (format->u.wma.depth)
-        gst_caps_set_simple(caps, "depth", G_TYPE_INT, format->u.wma.depth, NULL);
-    if (format->u.wma.channels)
-        gst_caps_set_simple(caps, "channels", G_TYPE_INT, format->u.wma.channels, NULL);
-    if (format->u.wma.block_align)
-        gst_caps_set_simple(caps, "block_align", G_TYPE_INT, format->u.wma.block_align, NULL);
-
-    if (format->u.wma.codec_data_len)
-    {
-        if (!(buffer = gst_buffer_new_and_alloc(format->u.wma.codec_data_len)))
-        {
-            gst_caps_unref(caps);
-            return NULL;
-        }
-
-        gst_buffer_fill(buffer, 0, format->u.wma.codec_data, format->u.wma.codec_data_len);
-        gst_caps_set_simple(caps, "codec_data", GST_TYPE_BUFFER, buffer, NULL);
-        gst_buffer_unref(buffer);
-    }
-
-    return caps;
-}
-
 GstCaps *wg_format_to_caps(const struct wg_format *format)
 {
     switch (format->major_type)
@@ -438,7 +401,8 @@ GstCaps *wg_format_to_caps(const struct wg_format *format)
         case WG_MAJOR_TYPE_UNKNOWN:
             return NULL;
         case WG_MAJOR_TYPE_WMA:
-            return wg_format_to_caps_wma(format);
+            GST_FIXME("WMA format not implemented!\n");
+            return NULL;
         case WG_MAJOR_TYPE_AUDIO:
             return wg_format_to_caps_audio(format);
         case WG_MAJOR_TYPE_VIDEO:
diff --git a/dlls/winegstreamer/wg_transform.c b/dlls/winegstreamer/wg_transform.c
index e4545774428..2f225e5bc55 100644
--- a/dlls/winegstreamer/wg_transform.c
+++ b/dlls/winegstreamer/wg_transform.c
@@ -44,29 +44,13 @@ GST_DEBUG_CATEGORY_EXTERN(wine);
 
 struct wg_transform
 {
-    GstPad *my_src, *my_sink;
+    int dummy;
 };
 
-static GstFlowReturn transform_sink_chain_cb(GstPad *pad, GstObject *parent, GstBuffer *buffer)
-{
-    struct wg_transform *transform = gst_pad_get_element_private(pad);
-
-    GST_INFO("transform %p, buffer %p.", transform, buffer);
-
-    gst_buffer_unref(buffer);
-
-    return GST_FLOW_OK;
-}
-
 NTSTATUS wg_transform_destroy(void *args)
 {
     struct wg_transform *transform = args;
 
-    if (transform->my_sink)
-        g_object_unref(transform->my_sink);
-    if (transform->my_src)
-        g_object_unref(transform->my_src);
-
     free(transform);
     return STATUS_SUCCESS;
 }
@@ -74,10 +58,6 @@ NTSTATUS wg_transform_destroy(void *args)
 NTSTATUS wg_transform_create(void *args)
 {
     struct wg_transform_create_params *params = args;
-    struct wg_format output_format = *params->output_format;
-    struct wg_format input_format = *params->input_format;
-    GstCaps *src_caps = NULL, *sink_caps = NULL;
-    GstPadTemplate *template = NULL;
     struct wg_transform *transform;
     NTSTATUS status;
 
@@ -89,38 +69,9 @@ NTSTATUS wg_transform_create(void *args)
     if (!(transform = calloc(1, sizeof(*transform))))
         goto done;
 
-    if (!(src_caps = wg_format_to_caps(&input_format)))
-        goto done;
-    if (!(sink_caps = wg_format_to_caps(&output_format)))
-        goto done;
-
-    if (!(template = gst_pad_template_new("src", GST_PAD_SRC, GST_PAD_ALWAYS, src_caps)))
-        goto done;
-    if (!(transform->my_src = gst_pad_new_from_template(template, "src")))
-        goto done;
-    g_object_unref(template);
-    template = NULL;
-
-    if (!(template = gst_pad_template_new("sink", GST_PAD_SINK, GST_PAD_ALWAYS, sink_caps)))
-        goto done;
-    if (!(transform->my_sink = gst_pad_new_from_template(template, "sink")))
-        goto done;
-    g_object_unref(template);
-    template = NULL;
-
-    gst_pad_set_element_private(transform->my_sink, transform);
-    gst_pad_set_chain_function(transform->my_sink, transform_sink_chain_cb);
-
     status = STATUS_SUCCESS;
 
 done:
-    if (template)
-        g_object_unref(template);
-    if (sink_caps)
-        gst_caps_unref(sink_caps);
-    if (src_caps)
-        gst_caps_unref(src_caps);
-
     if (status)
     {
         GST_ERROR("Failed to create winegstreamer transform.");
diff --git a/dlls/winegstreamer/wma_decoder.c b/dlls/winegstreamer/wma_decoder.c
index 6c198706944..b14261706a7 100644
--- a/dlls/winegstreamer/wma_decoder.c
+++ b/dlls/winegstreamer/wma_decoder.c
@@ -78,7 +78,7 @@ static HRESULT try_create_wg_transform(struct wma_decoder *decoder)
     if (output_format.major_type == WG_MAJOR_TYPE_UNKNOWN)
         return MF_E_INVALIDMEDIATYPE;
 
-    if (!(decoder->wg_transform = wg_transform_create(&input_format, &output_format)))
+    if (!(decoder->wg_transform = wg_transform_create()))
         return E_FAIL;
 
     return S_OK;
-- 
2.34.1

