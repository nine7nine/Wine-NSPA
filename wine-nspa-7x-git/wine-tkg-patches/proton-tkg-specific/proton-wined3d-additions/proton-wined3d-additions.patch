From ac4f647aef87e1332f1a407b2b90111ee4b597a6 Mon Sep 17 00:00:00 2001
From: Matteo Bruni <mbruni@codeweavers.com>
Date: Sat, 24 Aug 2019 00:58:42 +0200
Subject: [PATCH] wined3d: Avoid NaNs in RCP and RSQ in <= SM3.

Fixes sporadic white screen in Chapter 1 Act 3 in A Hat in Time.

FWIW the NaNs end up in a RGBA16F render target, another option that
might work is to fixup NaNs when writing them into the pixel shader
output.
---
 dlls/wined3d/glsl_shader.c | 37 ++++++++++++++++++++++++-------------
 1 file changed, 24 insertions(+), 13 deletions(-)

diff --git a/dlls/wined3d/glsl_shader.c b/dlls/wined3d/glsl_shader.c
index c1f9d4cfe70..b0e55f95adf 100644
--- a/dlls/wined3d/glsl_shader.c
+++ b/dlls/wined3d/glsl_shader.c
@@ -2521,6 +2521,7 @@ static void shader_generate_glsl_declarations(const struct wined3d_context *cont
             shader_addline(buffer, ";\n");
         }
     }
+    shader_addline(buffer, "const float FLT_MAX = 1e38;\n");
 }
 
 /* Prototypes */
@@ -4125,9 +4126,10 @@ static void shader_glsl_scalar_op(const struct wined3d_shader_instruction *ins)
 {
     DWORD shader_version = WINED3D_SHADER_VERSION(ins->ctx->reg_maps->shader_version.major,
             ins->ctx->reg_maps->shader_version.minor);
+    struct shader_glsl_ctx_priv *priv = ins->ctx->backend_data;
     struct wined3d_string_buffer *buffer = ins->ctx->buffer;
+    struct wined3d_string_buffer *prefix, *suffix;
     struct glsl_src_param src0_param;
-    const char *prefix, *suffix;
     unsigned int dst_size;
     DWORD dst_write_mask;
 
@@ -4139,41 +4141,50 @@ static void shader_glsl_scalar_op(const struct wined3d_shader_instruction *ins)
 
     shader_glsl_add_src_param(ins, &ins->src[0], dst_write_mask, &src0_param);
 
+    prefix = string_buffer_get(priv->string_buffers);
+    suffix = string_buffer_get(priv->string_buffers);
+
     switch (ins->handler_idx)
     {
         case WINED3DSIH_EXP:
         case WINED3DSIH_EXPP:
-            prefix = "exp2(";
-            suffix = ")";
+            string_buffer_sprintf(prefix, "exp2(");
+            string_buffer_sprintf(suffix, ")");
             break;
 
         case WINED3DSIH_LOG:
         case WINED3DSIH_LOGP:
-            prefix = "log2(abs(";
-            suffix = "))";
+            string_buffer_sprintf(prefix, "log2(abs(");
+            string_buffer_sprintf(suffix, "))");
             break;
 
         case WINED3DSIH_RCP:
-            prefix = "1.0 / ";
-            suffix = "";
+            if (shader_version <= WINED3D_SHADER_VERSION(3, 0))
+                string_buffer_sprintf(prefix, "%s == 0.0 ? FLT_MAX : 1.0 / ", src0_param.param_str);
+            else
+                string_buffer_sprintf(prefix, "1.0 / ");
             break;
 
         case WINED3DSIH_RSQ:
-            prefix = "inversesqrt(abs(";
-            suffix = "))";
+            if (shader_version <= WINED3D_SHADER_VERSION(3, 0))
+                string_buffer_sprintf(prefix, "%s == 0.0 ? FLT_MAX : inversesqrt(abs(", src0_param.param_str);
+            else
+                string_buffer_sprintf(prefix, "inversesqrt(abs(");
+            string_buffer_sprintf(suffix, "))");
             break;
 
         default:
-            prefix = "";
-            suffix = "";
             FIXME("Unhandled instruction %#x.\n", ins->handler_idx);
             break;
     }
 
     if (dst_size > 1 && shader_version < WINED3D_SHADER_VERSION(4, 0))
-        shader_addline(buffer, "vec%u(%s%s%s));\n", dst_size, prefix, src0_param.param_str, suffix);
+        shader_addline(buffer, "vec%u(%s%s%s));\n", dst_size, prefix->buffer, src0_param.param_str, suffix->buffer);
     else
-        shader_addline(buffer, "%s%s%s);\n", prefix, src0_param.param_str, suffix);
+        shader_addline(buffer, "%s%s%s);\n", prefix->buffer, src0_param.param_str, suffix->buffer);
+
+    string_buffer_release(priv->string_buffers, prefix);
+    string_buffer_release(priv->string_buffers, suffix);
 }
 
 /** Process the WINED3DSIO_EXPP instruction in GLSL:
From 404140d93cce37d77807628199ab760dfb15f7ac Mon Sep 17 00:00:00 2001
From: Matteo Bruni <mbruni@codeweavers.com>
Date: Tue, 27 Aug 2019 02:55:16 +0200
Subject: [PATCH] wined3d: Avoid NaNs in LOG and LOGP.

Fixes some white artifacts in A Hat in Time Chapter 2 Act 1.
---
 dlls/wined3d/glsl_shader.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/dlls/wined3d/glsl_shader.c b/dlls/wined3d/glsl_shader.c
index b0e55f95adf..22dc2fd7817 100644
--- a/dlls/wined3d/glsl_shader.c
+++ b/dlls/wined3d/glsl_shader.c
@@ -4154,7 +4154,10 @@ static void shader_glsl_scalar_op(const struct wined3d_shader_instruction *ins)
 
         case WINED3DSIH_LOG:
         case WINED3DSIH_LOGP:
-            string_buffer_sprintf(prefix, "log2(abs(");
+            if (shader_version <= WINED3D_SHADER_VERSION(3, 0))
+                string_buffer_sprintf(prefix, "%s == 0.0 ? -FLT_MAX : log2(abs(", src0_param.param_str);
+            else
+                string_buffer_sprintf(prefix, "log2(abs(");
             string_buffer_sprintf(suffix, "))");
             break;
 

