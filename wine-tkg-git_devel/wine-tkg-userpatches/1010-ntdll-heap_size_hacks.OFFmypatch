--- a/dlls/ntdll/heap.c	2023-05-08 08:45:20.112355388 -0500
+++ b/dlls/ntdll/heap.c	2023-05-08 08:44:47.086427575 -0500
@@ -200,7 +200,16 @@ C_ASSERT( sizeof(SUBHEAP) == 4 * BLOCK_A
 #define BIN_SIZE_MIN_5   0x1000
 #define BIN_SIZE_MIN_6   0x2000
 #define BIN_SIZE_MIN_7   0x4000
-#define BIN_SIZE_MAX     0x8000
+#define BIN_SIZE_MIN_8   0x8000
+#define BIN_SIZE_MIN_9   0x10000
+#define BIN_SIZE_MIN_10  0x20000
+#define BIN_SIZE_MIN_11  0x40000
+#define BIN_SIZE_MIN_12  0x80000
+#define BIN_SIZE_MIN_13  0x100000
+#define BIN_SIZE_MIN_14  0x200000
+#define BIN_SIZE_MIN_15  0x400000
+#define BIN_SIZE_MIN_16  0x800000
+#define BIN_SIZE_MAX     0x1000000

 #define BIN_SIZE_STEP_0                   (16)
 #define BIN_SIZE_STEP_1  (BIN_SIZE_MIN_1 >> 4)
@@ -210,11 +213,25 @@ C_ASSERT( sizeof(SUBHEAP) == 4 * BLOCK_A
 #define BIN_SIZE_STEP_5  (BIN_SIZE_MIN_5 >> 4)
 #define BIN_SIZE_STEP_6  (BIN_SIZE_MIN_6 >> 4)
 #define BIN_SIZE_STEP_7  (BIN_SIZE_MIN_7 >> 4)
+#define BIN_SIZE_STEP_8  (BIN_SIZE_MIN_8 >> 4)
+#define BIN_SIZE_STEP_9  (BIN_SIZE_MIN_9 >> 4)
+#define BIN_SIZE_STEP_10 (BIN_SIZE_MIN_10 >> 4)
+#define BIN_SIZE_STEP_11 (BIN_SIZE_MIN_11 >> 4)
+#define BIN_SIZE_STEP_12 (BIN_SIZE_MIN_12 >> 4)
+#define BIN_SIZE_STEP_13 (BIN_SIZE_MIN_13 >> 4)
+#define BIN_SIZE_STEP_14 (BIN_SIZE_MIN_14 >> 4)
+#define BIN_SIZE_STEP_15 (BIN_SIZE_MIN_15 >> 4)
+#define BIN_SIZE_STEP_16 (BIN_SIZE_MIN_16 >> 4)
 
 #define BLOCK_BIN_SIZE_N( n, bin )   (BIN_SIZE_MIN_##n + (bin + 1) * BIN_SIZE_STEP_##n)
 #define BLOCK_SIZE_BIN_N( n, size )  (((size) - 1 - BIN_SIZE_MIN_##n) / BIN_SIZE_STEP_##n)
 
-#define BLOCK_BIN_SIZE( bin )   ((bin) >= 0x80 ? ~(SIZE_T)0 : \
+#define BLOCK_BIN_SIZE( bin )   ((bin) >= 0x170 ? ~(SIZE_T)0 : \
+                                 (bin) >= 0x160 ? BLOCK_BIN_SIZE_N( 16, bin - 0x160 ) : \
+                                 (bin) >= 0x150 ? BLOCK_BIN_SIZE_N( 15, bin - 0x150 ) : \
+                                 (bin) >= 0x140 ? BLOCK_BIN_SIZE_N( 14, bin - 0x140 ) : \
+                                 (bin) >= 0x130 ? BLOCK_BIN_SIZE_N( 13, bin - 0x130 ) : \
+                                 (bin) >= 0x120 ? BLOCK_BIN_SIZE_N( 12, bin - 0x120 ) : \
+                                 (bin) >= 0x110 ? BLOCK_BIN_SIZE_N( 11, bin - 0x110 ) : \
+                                 (bin) >= 0x100 ? BLOCK_BIN_SIZE_N( 10, bin - 0x100 ) : \
+                                 (bin) >= 0x90 ? BLOCK_BIN_SIZE_N( 9, bin - 0x90 ) : \
+                                 (bin) >= 0x80 ? BLOCK_BIN_SIZE_N( 8, bin - 0x80 ) : \
                                  (bin) >= 0x70 ? BLOCK_BIN_SIZE_N( 7, bin - 0x70 ) : \
                                  (bin) >= 0x60 ? BLOCK_BIN_SIZE_N( 6, bin - 0x60 ) : \
                                  (bin) >= 0x50 ? BLOCK_BIN_SIZE_N( 5, bin - 0x50 ) : \
@@ -224,7 +233,16 @@ C_ASSERT( sizeof(SUBHEAP) == 4 * BLOCK_A
                                  (bin) >= 0x10 ? BLOCK_BIN_SIZE_N( 1, bin - 0x10 ) : \
                                  BLOCK_BIN_SIZE_N( 0, bin ))
 
-#define BLOCK_SIZE_BIN( size )  ((size) > BIN_SIZE_MAX   ? 0x80 : \
+#define BLOCK_SIZE_BIN( size )  ((size) > BIN_SIZE_MAX   ? 0x170 : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x160 + BLOCK_SIZE_BIN_N( 16, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x150 + BLOCK_SIZE_BIN_N( 15, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x140 + BLOCK_SIZE_BIN_N( 14, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x130 + BLOCK_SIZE_BIN_N( 13, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x120 + BLOCK_SIZE_BIN_N( 12, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x110 + BLOCK_SIZE_BIN_N( 11, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x100 + BLOCK_SIZE_BIN_N( 10, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x90 + BLOCK_SIZE_BIN_N( 9, size ) : \
+                                 (size) > BIN_SIZE_MIN_7 ? 0x80 + BLOCK_SIZE_BIN_N( 8, size ) : \
                                  (size) > BIN_SIZE_MIN_7 ? 0x70 + BLOCK_SIZE_BIN_N( 7, size ) : \
                                  (size) > BIN_SIZE_MIN_6 ? 0x60 + BLOCK_SIZE_BIN_N( 6, size ) : \
                                  (size) > BIN_SIZE_MIN_5 ? 0x50 + BLOCK_SIZE_BIN_N( 5, size ) : \
