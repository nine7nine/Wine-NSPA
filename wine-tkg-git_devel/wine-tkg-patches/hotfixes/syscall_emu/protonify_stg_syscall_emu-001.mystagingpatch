From 76e0c24f410417973d784705c9729041af435929 Mon Sep 17 00:00:00 2001
From: Tk-Glitch <ti3nou@gmail.com>
Date: Fri, 2 Apr 2021 06:03:28 +0200
Subject: protonify staging syscall emu


diff --git a/patches/ntdll-Syscall_Emulation/0001-ntdll-Support-x86_64-syscall-emulation.patch b/patches/ntdll-Syscall_Emulation/0001-ntdll-Support-x86_64-syscall-emulation.patch
index aa3df4a..5251820 100644
--- a/patches/ntdll-Syscall_Emulation/0001-ntdll-Support-x86_64-syscall-emulation.patch
+++ b/patches/ntdll-Syscall_Emulation/0001-ntdll-Support-x86_64-syscall-emulation.patch
@@ -1,13 +1,27 @@
 Subject: [PATCH] ntdll: Support x86_64 syscall emulation.
 
 ---
+ configure                       |   1 +
  configure.ac                    |   1 +
- dlls/ntdll/unix/signal_x86_64.c | 117 ++++++++++++++++++++++++++++++++
+ dlls/ntdll/unix/signal_x86_64.c | 118 ++++++++++++++++++++++++++++++++
+ include/config.h.in             |   3 +
  tools/winebuild/import.c        |   3 +-
- 3 files changed, 120 insertions(+), 1 deletion(-)
+ 5 files changed, 125 insertions(+), 1 deletion(-)
 
+diff --git a/configure b/configure
+index fda1b04604f..976bc529e7c 100755
+--- a/configure
++++ b/configure
+@@ -7465,6 +7465,7 @@ for ac_header in \
+ 	linux/joystick.h \
+ 	linux/major.h \
+ 	linux/param.h \
++	linux/seccomp.h \
+ 	linux/serial.h \
+ 	linux/types.h \
+ 	linux/ucdrom.h \
 diff --git a/configure.ac b/configure.ac
-index caff5d1fe52..d30b437320a 100644
+index 6202d68ee45..bcc37745576 100644
 --- a/configure.ac
 +++ b/configure.ac
 @@ -467,6 +467,7 @@ AC_CHECK_HEADERS(\
@@ -47,13 +61,14 @@ index 8d3353e959d..a8a142c2ab1 100644
  #define NONAMELESSUNION
  #define NONAMELESSSTRUCT
  #include "ntstatus.h"
-@@ -2292,6 +2300,114 @@ static inline DWORD is_privileged_instr( CONTEXT *context )
+@@ -2344,6 +2352,115 @@ static inline DWORD is_privileged_instr( CONTEXT *context )
      return 0;
  }
  
 +#ifdef HAVE_SECCOMP
 +static void sigsys_handler( int signal, siginfo_t *siginfo, void *sigcontext )
 +{
++    ULONG64 *dispatcher_address = (ULONG64 *)((char *)user_shared_data + page_size);
 +    ucontext_t *ctx = sigcontext;
 +    void ***rsp;
 +
@@ -64,7 +79,7 @@ index 8d3353e959d..a8a142c2ab1 100644
 +    *rsp -= 1;
 +    **rsp = (void *)(ctx->uc_mcontext.gregs[REG_RIP] + 0xb);
 +
-+    ctx->uc_mcontext.gregs[REG_RIP] = (ULONG64)__wine_syscall_dispatcher;
++    ctx->uc_mcontext.gregs[REG_RIP] = *dispatcher_address;
 +}
 +#endif
 +
@@ -162,7 +177,7 @@ index 8d3353e959d..a8a142c2ab1 100644
  
  /***********************************************************************
   *           handle_interrupt
-@@ -2751,6 +2867,7 @@ void signal_init_process(void)
+@@ -2816,6 +2933,7 @@ void signal_init_process(void)
      if (sigaction( SIGSEGV, &sig_act, NULL ) == -1) goto error;
      if (sigaction( SIGILL, &sig_act, NULL ) == -1) goto error;
      if (sigaction( SIGBUS, &sig_act, NULL ) == -1) goto error;
@@ -170,11 +185,25 @@ index 8d3353e959d..a8a142c2ab1 100644
      return;
  
   error:
+diff --git a/include/config.h.in b/include/config.h.in
+index cf3aaa17a5d..b602a292eea 100644
+--- a/include/config.h.in
++++ b/include/config.h.in
+@@ -450,6 +450,9 @@
+ /* Define to 1 if you have the <linux/rtnetlink.h> header file. */
+ #undef HAVE_LINUX_RTNETLINK_H
+ 
++/* Define to 1 if you have the <linux/seccomp.h> header file. */
++#undef HAVE_LINUX_SECCOMP_H
++
+ /* Define to 1 if you have the <linux/serial.h> header file. */
+ #undef HAVE_LINUX_SERIAL_H
+ 
 diff --git a/tools/winebuild/import.c b/tools/winebuild/import.c
-index 0fddbaf6134..901423cc028 100644
+index 720cf0589fd..9a7537451ae 100644
 --- a/tools/winebuild/import.c
 +++ b/tools/winebuild/import.c
-@@ -1510,6 +1510,7 @@ static void output_syscall_dispatcher( int count, const char *variant )
+@@ -1518,6 +1518,7 @@ static void output_syscall_dispatcher( int count, const char *variant )
          /* Legends of Runeterra hooks the first system call return instruction, and
           * depends on us returning to it. Adjust the return address accordingly. */
          output( "\tsubq $0xb,0x8(%%rbp)\n" );
@@ -182,7 +211,7 @@ index 0fddbaf6134..901423cc028 100644
          output( "\tmovq 0x8(%%rbp),%%rbx\n" );
          output( "\tmovq %%rbx,-0x28(%%rbp)\n" );
          output( "\tleaq 0x10(%%rbp),%%rbx\n" );
-@@ -1779,7 +1780,7 @@ void output_syscalls( DLLSPEC *spec )
+@@ -1810,7 +1811,7 @@ void output_syscalls( DLLSPEC *spec )
               * validate that instruction, we can just put a jmp there instead. */
              output( "\t.byte 0x4c,0x8b,0xd1\n" ); /* movq %rcx,%r10 */
              output( "\t.byte 0xb8\n" );           /* movl $i,%eax */
