From 587ce9ff24747b30b2a48020a8671d6fd142b110 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Sat, 9 Oct 2021 13:47:39 +1100
Subject: [PATCH 01/22] Revert "winegstreamer: Get rid of the WMReader
 typedef."

This reverts commit 2652416be7b3914a98474faa562274c363f1dce8.
---
 dlls/winegstreamer/wm_asyncreader.c | 497 ++++++++++++++--------------
 1 file changed, 248 insertions(+), 249 deletions(-)

diff --git a/dlls/winegstreamer/wm_asyncreader.c b/dlls/winegstreamer/wm_asyncreader.c
index b4ef4851c33..d3fd1624f24 100644
--- a/dlls/winegstreamer/wm_asyncreader.c
+++ b/dlls/winegstreamer/wm_asyncreader.c
@@ -21,8 +21,7 @@
 
 WINE_DEFAULT_DEBUG_CHANNEL(wmvcore);
 
-struct async_reader
-{
+typedef struct {
     IWMReader IWMReader_iface;
     IWMReaderAdvanced6 IWMReaderAdvanced6_iface;
     IWMReaderAccelerator IWMReaderAccelerator_iface;
@@ -37,16 +36,16 @@ struct async_reader
     IWMProfile3 IWMProfile3_iface;
     IWMPacketSize2 IWMPacketSize2_iface;
     LONG ref;
-};
+} WMReader;
 
-static struct async_reader *impl_from_IWMReader(IWMReader *iface)
+static inline WMReader *impl_from_IWMReader(IWMReader *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReader_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReader_iface);
 }
 
 static HRESULT WINAPI WMReader_QueryInterface(IWMReader *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
 
     if(IsEqualGUID(riid, &IID_IUnknown)) {
         TRACE("(%p)->(IID_IUnknown %p)\n", This, ppv);
@@ -135,7 +134,7 @@ static HRESULT WINAPI WMReader_QueryInterface(IWMReader *iface, REFIID riid, voi
 
 static ULONG WINAPI WMReader_AddRef(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     LONG ref = InterlockedIncrement(&This->ref);
 
     TRACE("(%p) ref=%d\n", This, ref);
@@ -145,7 +144,7 @@ static ULONG WINAPI WMReader_AddRef(IWMReader *iface)
 
 static ULONG WINAPI WMReader_Release(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     LONG ref = InterlockedDecrement(&This->ref);
 
     TRACE("(%p) ref=%d\n", This, ref);
@@ -158,21 +157,21 @@ static ULONG WINAPI WMReader_Release(IWMReader *iface)
 
 static HRESULT WINAPI WMReader_Open(IWMReader *iface, const WCHAR *url, IWMReaderCallback *callback, void *context)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%s %p %p)\n", This, debugstr_w(url), callback, context);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_Close(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_GetOutputCount(IWMReader *iface, DWORD *outputs)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%p)\n", This, outputs);
 
     if(!outputs)
@@ -184,56 +183,56 @@ static HRESULT WINAPI WMReader_GetOutputCount(IWMReader *iface, DWORD *outputs)
 
 static HRESULT WINAPI WMReader_GetOutputProps(IWMReader *iface, DWORD output_num, IWMOutputMediaProps **output)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%u %p)\n", This, output_num, output);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_SetOutputProps(IWMReader *iface, DWORD output_num, IWMOutputMediaProps *output)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%u %p)\n", This, output_num, output);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_GetOutputFormatCount(IWMReader *iface, DWORD output_num, DWORD *formats)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%u %p)\n", This, output_num, formats);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_GetOutputFormat(IWMReader *iface, DWORD output_num, DWORD format_num, IWMOutputMediaProps **props)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%u %u %p)\n", This, output_num, format_num, props);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_Start(IWMReader *iface, QWORD start, QWORD duration, float rate, void *context)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)->(%s %s %f %p)\n", This, wine_dbgstr_longlong(start), wine_dbgstr_longlong(duration), rate, context);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_Stop(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_Pause(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReader_Resume(IWMReader *iface)
 {
-    struct async_reader *This = impl_from_IWMReader(iface);
+    WMReader *This = impl_from_IWMReader(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
@@ -255,60 +254,60 @@ static const IWMReaderVtbl WMReaderVtbl = {
     WMReader_Resume
 };
 
-static struct async_reader *impl_from_IWMReaderAdvanced6(IWMReaderAdvanced6 *iface)
+static inline WMReader *impl_from_IWMReaderAdvanced6(IWMReaderAdvanced6 *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderAdvanced6_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderAdvanced6_iface);
 }
 
 static HRESULT WINAPI WMReaderAdvanced_QueryInterface(IWMReaderAdvanced6 *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI WMReaderAdvanced_AddRef(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI WMReaderAdvanced_Release(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetUserProvidedClock(IWMReaderAdvanced6 *iface, BOOL user_clock)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%x)\n", This, user_clock);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetUserProvidedClock(IWMReaderAdvanced6 *iface, BOOL *user_clock)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, user_clock);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_DeliverTime(IWMReaderAdvanced6 *iface, QWORD time)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%s)\n", This, wine_dbgstr_longlong(time));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetManualStreamSelection(IWMReaderAdvanced6 *iface, BOOL selection)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%x)\n", This, selection);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetManualStreamSelection(IWMReaderAdvanced6 *iface, BOOL *selection)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, selection);
     return E_NOTIMPL;
 }
@@ -316,7 +315,7 @@ static HRESULT WINAPI WMReaderAdvanced_GetManualStreamSelection(IWMReaderAdvance
 static HRESULT WINAPI WMReaderAdvanced_SetStreamsSelected(IWMReaderAdvanced6 *iface, WORD stream_count,
         WORD *stream_numbers, WMT_STREAM_SELECTION *selections)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p %p)\n", This, stream_count, stream_numbers, selections);
     return E_NOTIMPL;
 }
@@ -324,21 +323,21 @@ static HRESULT WINAPI WMReaderAdvanced_SetStreamsSelected(IWMReaderAdvanced6 *if
 static HRESULT WINAPI WMReaderAdvanced_GetStreamSelected(IWMReaderAdvanced6 *iface, WORD stream_num,
         WMT_STREAM_SELECTION *selection)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, stream_num, selection);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetReceiveSelectionCallbacks(IWMReaderAdvanced6 *iface, BOOL get_callbacks)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%x)\n", This, get_callbacks);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetReceiveSelectionCallbacks(IWMReaderAdvanced6 *iface, BOOL *get_callbacks)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, get_callbacks);
     return E_NOTIMPL;
 }
@@ -346,7 +345,7 @@ static HRESULT WINAPI WMReaderAdvanced_GetReceiveSelectionCallbacks(IWMReaderAdv
 static HRESULT WINAPI WMReaderAdvanced_SetReceiveStreamSamples(IWMReaderAdvanced6 *iface, WORD stream_num,
         BOOL receive_stream_samples)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %x)\n", This, stream_num, receive_stream_samples);
     return E_NOTIMPL;
 }
@@ -354,91 +353,91 @@ static HRESULT WINAPI WMReaderAdvanced_SetReceiveStreamSamples(IWMReaderAdvanced
 static HRESULT WINAPI WMReaderAdvanced_GetReceiveStreamSamples(IWMReaderAdvanced6 *iface, WORD stream_num,
         BOOL *receive_stream_samples)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, stream_num, receive_stream_samples);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetAllocateForOutput(IWMReaderAdvanced6 *iface, DWORD output_num, BOOL allocate)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %x)\n", This, output_num, allocate);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetAllocateForOutput(IWMReaderAdvanced6 *iface, DWORD output_num, BOOL *allocate)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, output_num, allocate);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetAllocateForStream(IWMReaderAdvanced6 *iface, WORD output_num, BOOL allocate)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %x)\n", This, output_num, allocate);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetAllocateForStream(IWMReaderAdvanced6 *iface, WORD output_num, BOOL *allocate)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, output_num, allocate);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetStatistics(IWMReaderAdvanced6 *iface, WM_READER_STATISTICS *statistics)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, statistics);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_SetClientInfo(IWMReaderAdvanced6 *iface, WM_READER_CLIENTINFO *client_info)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, client_info);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetMaxOutputSampleSize(IWMReaderAdvanced6 *iface, DWORD output, DWORD *max)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, output, max);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_GetMaxStreamSampleSize(IWMReaderAdvanced6 *iface, WORD stream, DWORD *max)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, stream, max);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced_NotifyLateDelivery(IWMReaderAdvanced6 *iface, QWORD lateness)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%s)\n", This, wine_dbgstr_longlong(lateness));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_SetPlayMode(IWMReaderAdvanced6 *iface, WMT_PLAY_MODE mode)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d)\n", This, mode);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_GetPlayMode(IWMReaderAdvanced6 *iface, WMT_PLAY_MODE *mode)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, mode);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_GetBufferProgress(IWMReaderAdvanced6 *iface, DWORD *percent, QWORD *buffering)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %p)\n", This, percent, buffering);
     return E_NOTIMPL;
 }
@@ -446,28 +445,28 @@ static HRESULT WINAPI WMReaderAdvanced2_GetBufferProgress(IWMReaderAdvanced6 *if
 static HRESULT WINAPI WMReaderAdvanced2_GetDownloadProgress(IWMReaderAdvanced6 *iface, DWORD *percent,
         QWORD *bytes_downloaded, QWORD *download)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %p %p)\n", This, percent, bytes_downloaded, download);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_GetSaveAsProgress(IWMReaderAdvanced6 *iface, DWORD *percent)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, percent);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_SaveFileAs(IWMReaderAdvanced6 *iface, const WCHAR *filename)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%s)\n", This, debugstr_w(filename));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_GetProtocolName(IWMReaderAdvanced6 *iface, WCHAR *protocol, DWORD *protocol_len)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %p)\n", This, protocol, protocol_len);
     return E_NOTIMPL;
 }
@@ -475,7 +474,7 @@ static HRESULT WINAPI WMReaderAdvanced2_GetProtocolName(IWMReaderAdvanced6 *ifac
 static HRESULT WINAPI WMReaderAdvanced2_StartAtMarker(IWMReaderAdvanced6 *iface, WORD marker_index,
         QWORD duration, float rate, void *context)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %s %f %p)\n", This, marker_index, wine_dbgstr_longlong(duration), rate, context);
     return E_NOTIMPL;
 }
@@ -483,7 +482,7 @@ static HRESULT WINAPI WMReaderAdvanced2_StartAtMarker(IWMReaderAdvanced6 *iface,
 static HRESULT WINAPI WMReaderAdvanced2_GetOutputSetting(IWMReaderAdvanced6 *iface, DWORD output_num,
         const WCHAR *name, WMT_ATTR_DATATYPE *type, BYTE *value, WORD *length)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %s %p %p %p)\n", This, output_num, debugstr_w(name), type, value, length);
     return E_NOTIMPL;
 }
@@ -491,35 +490,35 @@ static HRESULT WINAPI WMReaderAdvanced2_GetOutputSetting(IWMReaderAdvanced6 *ifa
 static HRESULT WINAPI WMReaderAdvanced2_SetOutputSetting(IWMReaderAdvanced6 *iface, DWORD output_num,
         const WCHAR *name, WMT_ATTR_DATATYPE type, const BYTE *value, WORD length)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %s %d %p %d)\n", This, output_num, debugstr_w(name), type, value, length);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_Preroll(IWMReaderAdvanced6 *iface, QWORD start, QWORD duration, float rate)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%s %s %f)\n", This, wine_dbgstr_longlong(start), wine_dbgstr_longlong(duration), rate);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_SetLogClientID(IWMReaderAdvanced6 *iface, BOOL log_client_id)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%x)\n", This, log_client_id);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_GetLogClientID(IWMReaderAdvanced6 *iface, BOOL *log_client_id)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, log_client_id);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced2_StopBuffering(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
@@ -527,14 +526,14 @@ static HRESULT WINAPI WMReaderAdvanced2_StopBuffering(IWMReaderAdvanced6 *iface)
 static HRESULT WINAPI WMReaderAdvanced2_OpenStream(IWMReaderAdvanced6 *iface, IStream *stream,
         IWMReaderCallback *callback, void *context)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %p %p)\n", This, stream, callback, context);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced3_StopNetStreaming(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
@@ -542,14 +541,14 @@ static HRESULT WINAPI WMReaderAdvanced3_StopNetStreaming(IWMReaderAdvanced6 *ifa
 static HRESULT WINAPI WMReaderAdvanced3_StartAtPosition(IWMReaderAdvanced6 *iface, WORD stream_num,
         void *offset_start, void *duration, WMT_OFFSET_FORMAT format, float rate, void *context)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p %p %d %f %p)\n", This, stream_num, offset_start, duration, format, rate, context);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_GetLanguageCount(IWMReaderAdvanced6 *iface, DWORD output_num, WORD *language_count)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, output_num, language_count);
     return E_NOTIMPL;
 }
@@ -557,21 +556,21 @@ static HRESULT WINAPI WMReaderAdvanced4_GetLanguageCount(IWMReaderAdvanced6 *ifa
 static HRESULT WINAPI WMReaderAdvanced4_GetLanguage(IWMReaderAdvanced6 *iface, DWORD output_num,
        WORD language, WCHAR *language_string, WORD *language_string_len)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %x %p %p)\n", This, output_num, language, language_string, language_string_len);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_GetMaxSpeedFactor(IWMReaderAdvanced6 *iface, double *factor)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, factor);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_IsUsingFastCache(IWMReaderAdvanced6 *iface, BOOL *using_fast_cache)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, using_fast_cache);
     return E_NOTIMPL;
 }
@@ -579,42 +578,42 @@ static HRESULT WINAPI WMReaderAdvanced4_IsUsingFastCache(IWMReaderAdvanced6 *ifa
 static HRESULT WINAPI WMReaderAdvanced4_AddLogParam(IWMReaderAdvanced6 *iface, const WCHAR *namespace,
         const WCHAR *name, const WCHAR *value)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%s %s %s)\n", This, debugstr_w(namespace), debugstr_w(name), debugstr_w(value));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_SendLogParams(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_CanSaveFileAs(IWMReaderAdvanced6 *iface, BOOL *can_save)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p)\n", This, can_save);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_CancelSaveFileAs(IWMReaderAdvanced6 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced4_GetURL(IWMReaderAdvanced6 *iface, WCHAR *url, DWORD *url_len)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %p)\n", This, url, url_len);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI WMReaderAdvanced5_SetPlayerHook(IWMReaderAdvanced6 *iface, DWORD output_num, IWMPlayerHook *hook)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%d %p)\n", This, output_num, hook);
     return E_NOTIMPL;
 }
@@ -622,7 +621,7 @@ static HRESULT WINAPI WMReaderAdvanced5_SetPlayerHook(IWMReaderAdvanced6 *iface,
 static HRESULT WINAPI WMReaderAdvanced6_SetProtectStreamSamples(IWMReaderAdvanced6 *iface, BYTE *cert,
         DWORD cert_size, DWORD cert_type, DWORD flags, BYTE *initialization_vector, DWORD *initialization_vector_size)
 {
-    struct async_reader *This = impl_from_IWMReaderAdvanced6(iface);
+    WMReader *This = impl_from_IWMReaderAdvanced6(iface);
     FIXME("(%p)->(%p %d %d %x %p %p)\n", This, cert, cert_size, cert_type, flags, initialization_vector,
           initialization_vector_size);
     return E_NOTIMPL;
@@ -682,32 +681,32 @@ static const IWMReaderAdvanced6Vtbl WMReaderAdvanced6Vtbl = {
     WMReaderAdvanced6_SetProtectStreamSamples
 };
 
-static struct async_reader *impl_from_IWMReaderAccelerator(IWMReaderAccelerator *iface)
+static inline WMReader *impl_from_IWMReaderAccelerator(IWMReaderAccelerator *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderAccelerator_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderAccelerator_iface);
 }
 
 static HRESULT WINAPI reader_accl_QueryInterface(IWMReaderAccelerator *iface, REFIID riid, void **object)
 {
-    struct async_reader *This = impl_from_IWMReaderAccelerator(iface);
+    WMReader *This = impl_from_IWMReaderAccelerator(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, object);
 }
 
 static ULONG WINAPI reader_accl_AddRef(IWMReaderAccelerator *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAccelerator(iface);
+    WMReader *This = impl_from_IWMReaderAccelerator(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI reader_accl_Release(IWMReaderAccelerator *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderAccelerator(iface);
+    WMReader *This = impl_from_IWMReaderAccelerator(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI reader_accl_GetCodecInterface(IWMReaderAccelerator *iface, DWORD output, REFIID riid, void **codec)
 {
-    struct async_reader *This = impl_from_IWMReaderAccelerator(iface);
+    WMReader *This = impl_from_IWMReaderAccelerator(iface);
 
     FIXME("%p, %d, %s, %p\n", This, output, debugstr_guid(riid), codec);
 
@@ -716,7 +715,7 @@ static HRESULT WINAPI reader_accl_GetCodecInterface(IWMReaderAccelerator *iface,
 
 static HRESULT WINAPI reader_accl_Notify(IWMReaderAccelerator *iface, DWORD output, WM_MEDIA_TYPE *subtype)
 {
-    struct async_reader *This = impl_from_IWMReaderAccelerator(iface);
+    WMReader *This = impl_from_IWMReaderAccelerator(iface);
 
     FIXME("%p, %d, %p\n", This, output, subtype);
 
@@ -731,39 +730,39 @@ static const IWMReaderAcceleratorVtbl WMReaderAcceleratorVtbl = {
     reader_accl_Notify
 };
 
-static struct async_reader *impl_from_IWMReaderNetworkConfig2(IWMReaderNetworkConfig2 *iface)
+static inline WMReader *impl_from_IWMReaderNetworkConfig2(IWMReaderNetworkConfig2 *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderNetworkConfig2_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderNetworkConfig2_iface);
 }
 
 static HRESULT WINAPI networkconfig_QueryInterface(IWMReaderNetworkConfig2 *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI networkconfig_AddRef(IWMReaderNetworkConfig2 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI networkconfig_Release(IWMReaderNetworkConfig2 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI networkconfig_GetBufferingTime(IWMReaderNetworkConfig2 *iface, QWORD *buffering_time)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, buffering_time);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetBufferingTime(IWMReaderNetworkConfig2 *iface, QWORD buffering_time)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s\n", This, wine_dbgstr_longlong(buffering_time));
     return E_NOTIMPL;
 }
@@ -771,7 +770,7 @@ static HRESULT WINAPI networkconfig_SetBufferingTime(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_GetUDPPortRanges(IWMReaderNetworkConfig2 *iface, WM_PORT_NUMBER_RANGE *array,
         DWORD *ranges)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p, %p\n", This, array, ranges);
     return E_NOTIMPL;
 }
@@ -779,7 +778,7 @@ static HRESULT WINAPI networkconfig_GetUDPPortRanges(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_SetUDPPortRanges(IWMReaderNetworkConfig2 *iface, WM_PORT_NUMBER_RANGE *array,
         DWORD ranges)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p, %u\n", This, array, ranges);
     return E_NOTIMPL;
 }
@@ -787,7 +786,7 @@ static HRESULT WINAPI networkconfig_SetUDPPortRanges(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_GetProxySettings(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         WMT_PROXY_SETTINGS *proxy)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %p\n", This, debugstr_w(protocol), proxy);
     return E_NOTIMPL;
 }
@@ -795,7 +794,7 @@ static HRESULT WINAPI networkconfig_GetProxySettings(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_SetProxySettings(IWMReaderNetworkConfig2 *iface, LPCWSTR protocol,
         WMT_PROXY_SETTINGS proxy)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %d\n", This, debugstr_w(protocol), proxy);
     return E_NOTIMPL;
 }
@@ -803,7 +802,7 @@ static HRESULT WINAPI networkconfig_SetProxySettings(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_GetProxyHostName(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         WCHAR *hostname, DWORD *size)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %p, %p\n", This, debugstr_w(protocol), hostname, size);
     return E_NOTIMPL;
 }
@@ -811,7 +810,7 @@ static HRESULT WINAPI networkconfig_GetProxyHostName(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_SetProxyHostName(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         const WCHAR *hostname)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %s\n", This, debugstr_w(protocol), debugstr_w(hostname));
     return E_NOTIMPL;
 }
@@ -819,7 +818,7 @@ static HRESULT WINAPI networkconfig_SetProxyHostName(IWMReaderNetworkConfig2 *if
 static HRESULT WINAPI networkconfig_GetProxyPort(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         DWORD *port)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %p\n", This, debugstr_w(protocol), port);
     return E_NOTIMPL;
 }
@@ -827,7 +826,7 @@ static HRESULT WINAPI networkconfig_GetProxyPort(IWMReaderNetworkConfig2 *iface,
 static HRESULT WINAPI networkconfig_SetProxyPort(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         DWORD port)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %u\n", This, debugstr_w(protocol), port);
     return E_NOTIMPL;
 }
@@ -835,7 +834,7 @@ static HRESULT WINAPI networkconfig_SetProxyPort(IWMReaderNetworkConfig2 *iface,
 static HRESULT WINAPI networkconfig_GetProxyExceptionList(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         WCHAR *exceptions, DWORD *count)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %p, %p\n", This, debugstr_w(protocol), exceptions, count);
     return E_NOTIMPL;
 }
@@ -843,7 +842,7 @@ static HRESULT WINAPI networkconfig_GetProxyExceptionList(IWMReaderNetworkConfig
 static HRESULT WINAPI networkconfig_SetProxyExceptionList(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         const WCHAR *exceptions)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %s\n", This, debugstr_w(protocol), debugstr_w(exceptions));
     return E_NOTIMPL;
 }
@@ -851,7 +850,7 @@ static HRESULT WINAPI networkconfig_SetProxyExceptionList(IWMReaderNetworkConfig
 static HRESULT WINAPI networkconfig_GetProxyBypassForLocal(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         BOOL *bypass)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %p\n", This, debugstr_w(protocol), bypass);
     return E_NOTIMPL;
 }
@@ -859,7 +858,7 @@ static HRESULT WINAPI networkconfig_GetProxyBypassForLocal(IWMReaderNetworkConfi
 static HRESULT WINAPI networkconfig_SetProxyBypassForLocal(IWMReaderNetworkConfig2 *iface, const WCHAR *protocol,
         BOOL bypass)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s, %d\n", This, debugstr_w(protocol), bypass);
     return E_NOTIMPL;
 }
@@ -867,7 +866,7 @@ static HRESULT WINAPI networkconfig_SetProxyBypassForLocal(IWMReaderNetworkConfi
 static HRESULT WINAPI networkconfig_GetForceRerunAutoProxyDetection(IWMReaderNetworkConfig2 *iface,
         BOOL *detection)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, detection);
     return E_NOTIMPL;
 }
@@ -875,91 +874,91 @@ static HRESULT WINAPI networkconfig_GetForceRerunAutoProxyDetection(IWMReaderNet
 static HRESULT WINAPI networkconfig_SetForceRerunAutoProxyDetection(IWMReaderNetworkConfig2 *iface,
         BOOL detection)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, detection);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableMulticast(IWMReaderNetworkConfig2 *iface, BOOL *multicast)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, multicast);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableMulticast(IWMReaderNetworkConfig2 *iface, BOOL multicast)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, multicast);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableHTTP(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableHTTP(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableUDP(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableUDP(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableTCP(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableTCP(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_ResetProtocolRollover(IWMReaderNetworkConfig2 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetConnectionBandwidth(IWMReaderNetworkConfig2 *iface, DWORD *bandwidth)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetConnectionBandwidth(IWMReaderNetworkConfig2 *iface, DWORD bandwidth)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u\n", This, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetNumProtocolsSupported(IWMReaderNetworkConfig2 *iface, DWORD *protocols)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, protocols);
     return E_NOTIMPL;
 }
@@ -967,14 +966,14 @@ static HRESULT WINAPI networkconfig_GetNumProtocolsSupported(IWMReaderNetworkCon
 static HRESULT WINAPI networkconfig_GetSupportedProtocolName(IWMReaderNetworkConfig2 *iface, DWORD protocol_num,
         WCHAR *protocol, DWORD *size)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u, %p %p\n", This, protocol_num, protocol, size);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_AddLoggingUrl(IWMReaderNetworkConfig2 *iface, const WCHAR *url)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s\n", This, debugstr_w(url));
     return E_NOTIMPL;
 }
@@ -982,49 +981,49 @@ static HRESULT WINAPI networkconfig_AddLoggingUrl(IWMReaderNetworkConfig2 *iface
 static HRESULT WINAPI networkconfig_GetLoggingUrl(IWMReaderNetworkConfig2 *iface, DWORD index, WCHAR *url,
         DWORD *size)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u, %p, %p\n", This, index, url, size);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetLoggingUrlCount(IWMReaderNetworkConfig2 *iface, DWORD *count)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, count);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_ResetLoggingUrlList(IWMReaderNetworkConfig2 *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableContentCaching(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableContentCaching(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableFastCache(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableFastCache(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %d\n", This, enable);
     return E_NOTIMPL;
 }
@@ -1032,7 +1031,7 @@ static HRESULT WINAPI networkconfig_SetEnableFastCache(IWMReaderNetworkConfig2 *
 static HRESULT WINAPI networkconfig_GetAcceleratedStreamingDuration(IWMReaderNetworkConfig2 *iface,
         QWORD *duration)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, duration);
     return E_NOTIMPL;
 }
@@ -1040,56 +1039,56 @@ static HRESULT WINAPI networkconfig_GetAcceleratedStreamingDuration(IWMReaderNet
 static HRESULT WINAPI networkconfig_SetAcceleratedStreamingDuration(IWMReaderNetworkConfig2 *iface,
         QWORD duration)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %s\n", This, wine_dbgstr_longlong(duration));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetAutoReconnectLimit(IWMReaderNetworkConfig2 *iface, DWORD *limit)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, limit);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetAutoReconnectLimit(IWMReaderNetworkConfig2 *iface, DWORD limit)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u\n", This, limit);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableResends(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableResends(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetEnableThinning(IWMReaderNetworkConfig2 *iface, BOOL *enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_SetEnableThinning(IWMReaderNetworkConfig2 *iface, BOOL enable)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %u\n", This, enable);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI networkconfig_GetMaxNetPacketSize(IWMReaderNetworkConfig2 *iface, DWORD *packet_size)
 {
-    struct async_reader *This = impl_from_IWMReaderNetworkConfig2(iface);
+    WMReader *This = impl_from_IWMReaderNetworkConfig2(iface);
     FIXME("%p, %p\n", This, packet_size);
     return E_NOTIMPL;
 }
@@ -1147,46 +1146,46 @@ static const IWMReaderNetworkConfig2Vtbl WMReaderNetworkConfig2Vtbl =
     networkconfig_GetMaxNetPacketSize
 };
 
-static struct async_reader *impl_from_IWMReaderStreamClock(IWMReaderStreamClock *iface)
+static inline WMReader *impl_from_IWMReaderStreamClock(IWMReaderStreamClock *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderStreamClock_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderStreamClock_iface);
 }
 
 static HRESULT WINAPI readclock_QueryInterface(IWMReaderStreamClock *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI readclock_AddRef(IWMReaderStreamClock *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI readclock_Release(IWMReaderStreamClock *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI readclock_GetTime(IWMReaderStreamClock *iface, QWORD *now)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     FIXME("%p, %p\n", This, now);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI readclock_SetTimer(IWMReaderStreamClock *iface, QWORD when, void *param, DWORD *id)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     FIXME("%p, %s, %p, %p\n", This, wine_dbgstr_longlong(when), param, id);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI readclock_KillTimer(IWMReaderStreamClock *iface, DWORD id)
 {
-    struct async_reader *This = impl_from_IWMReaderStreamClock(iface);
+    WMReader *This = impl_from_IWMReaderStreamClock(iface);
     FIXME("%p, %d\n", This, id);
     return E_NOTIMPL;
 }
@@ -1201,32 +1200,32 @@ static const IWMReaderStreamClockVtbl WMReaderStreamClockVtbl =
     readclock_KillTimer
 };
 
-static struct async_reader *impl_from_IWMReaderTypeNegotiation(IWMReaderTypeNegotiation *iface)
+static inline WMReader *impl_from_IWMReaderTypeNegotiation(IWMReaderTypeNegotiation *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderTypeNegotiation_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderTypeNegotiation_iface);
 }
 
 static HRESULT WINAPI negotiation_QueryInterface(IWMReaderTypeNegotiation *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderTypeNegotiation(iface);
+    WMReader *This = impl_from_IWMReaderTypeNegotiation(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI negotiation_AddRef(IWMReaderTypeNegotiation *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderTypeNegotiation(iface);
+    WMReader *This = impl_from_IWMReaderTypeNegotiation(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI negotiation_Release(IWMReaderTypeNegotiation *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderTypeNegotiation(iface);
+    WMReader *This = impl_from_IWMReaderTypeNegotiation(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI negotiation_TryOutputProps(IWMReaderTypeNegotiation *iface, DWORD output, IWMOutputMediaProps *props)
 {
-    struct async_reader *This = impl_from_IWMReaderTypeNegotiation(iface);
+    WMReader *This = impl_from_IWMReaderTypeNegotiation(iface);
     FIXME("%p, %d, %p\n", This, output, props);
     return E_NOTIMPL;
 }
@@ -1239,32 +1238,32 @@ static const IWMReaderTypeNegotiationVtbl WMReaderTypeNegotiationVtbl =
     negotiation_TryOutputProps
 };
 
-static struct async_reader *impl_from_IWMReaderTimecode(IWMReaderTimecode *iface)
+static inline WMReader *impl_from_IWMReaderTimecode(IWMReaderTimecode *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderTimecode_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderTimecode_iface);
 }
 
 static HRESULT WINAPI timecode_QueryInterface(IWMReaderTimecode *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderTimecode(iface);
+    WMReader *This = impl_from_IWMReaderTimecode(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI timecode_AddRef(IWMReaderTimecode *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderTimecode(iface);
+    WMReader *This = impl_from_IWMReaderTimecode(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI timecode_Release(IWMReaderTimecode *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderTimecode(iface);
+    WMReader *This = impl_from_IWMReaderTimecode(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI timecode_GetTimecodeRangeCount(IWMReaderTimecode *iface, WORD num, WORD *count)
 {
-    struct async_reader *This = impl_from_IWMReaderTimecode(iface);
+    WMReader *This = impl_from_IWMReaderTimecode(iface);
     FIXME("%p, %d, %p\n", This, num, count);
     return E_NOTIMPL;
 }
@@ -1272,7 +1271,7 @@ static HRESULT WINAPI timecode_GetTimecodeRangeCount(IWMReaderTimecode *iface, W
 static HRESULT WINAPI timecode_GetTimecodeRangeBounds(IWMReaderTimecode *iface, WORD stream, WORD range,
         DWORD *start_timecode, DWORD *end_timecode)
 {
-    struct async_reader *This = impl_from_IWMReaderTimecode(iface);
+    WMReader *This = impl_from_IWMReaderTimecode(iface);
     FIXME("%p, %d, %d, %p, %p\n", This, stream, range, start_timecode, end_timecode);
     return E_NOTIMPL;
 }
@@ -1287,54 +1286,54 @@ static const IWMReaderTimecodeVtbl WMReaderTimecodeVtbl =
 };
 
 
-static struct async_reader *impl_from_IWMReaderPlaylistBurn(IWMReaderPlaylistBurn *iface)
+static inline WMReader *impl_from_IWMReaderPlaylistBurn(IWMReaderPlaylistBurn *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMReaderPlaylistBurn_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMReaderPlaylistBurn_iface);
 }
 
 static HRESULT WINAPI playlist_QueryInterface(IWMReaderPlaylistBurn *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI playlist_AddRef(IWMReaderPlaylistBurn *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI playlist_Release(IWMReaderPlaylistBurn *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI playlist_InitPlaylistBurn(IWMReaderPlaylistBurn *iface, DWORD count,
         LPCWSTR_WMSDK_TYPE_SAFE *filenames, IWMStatusCallback *callback, void *context)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     FIXME("%p, %d, %p, %p, %p\n", This, count, filenames, callback, context);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI playlist_GetInitResults(IWMReaderPlaylistBurn *iface, DWORD count, HRESULT *stat)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     FIXME("%p, %d, %p\n", This, count, stat);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI playlist_Cancel(IWMReaderPlaylistBurn *iface)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     FIXME("%p\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI playlist_EndPlaylistBurn(IWMReaderPlaylistBurn *iface, HRESULT result)
 {
-    struct async_reader *This = impl_from_IWMReaderPlaylistBurn(iface);
+    WMReader *This = impl_from_IWMReaderPlaylistBurn(iface);
     FIXME("%p, 0x%08x\n", This, result);
     return E_NOTIMPL;
 }
@@ -1350,32 +1349,32 @@ static const IWMReaderPlaylistBurnVtbl WMReaderPlaylistBurnVtbl =
     playlist_EndPlaylistBurn
 };
 
-static struct async_reader *impl_from_IWMHeaderInfo3(IWMHeaderInfo3 *iface)
+static inline WMReader *impl_from_IWMHeaderInfo3(IWMHeaderInfo3 *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMHeaderInfo3_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMHeaderInfo3_iface);
 }
 
 static HRESULT WINAPI headerinfo_QueryInterface(IWMHeaderInfo3 *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI headerinfo_AddRef(IWMHeaderInfo3 *iface)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI headerinfo_Release(IWMHeaderInfo3 *iface)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI headerinfo_GetAttributeCount(IWMHeaderInfo3 *iface, WORD stream_num, WORD *attributes)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p\n", This, stream_num, attributes);
     return E_NOTIMPL;
 }
@@ -1383,7 +1382,7 @@ static HRESULT WINAPI headerinfo_GetAttributeCount(IWMHeaderInfo3 *iface, WORD s
 static HRESULT WINAPI headerinfo_GetAttributeByIndex(IWMHeaderInfo3 *iface, WORD index, WORD *stream_num,
         WCHAR *name, WORD *name_len, WMT_ATTR_DATATYPE *type, BYTE *value, WORD *length)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p, %p, %p, %p, %p, %p\n", This, index, stream_num, name, name_len, type,
             value, length);
     return E_NOTIMPL;
@@ -1392,7 +1391,7 @@ static HRESULT WINAPI headerinfo_GetAttributeByIndex(IWMHeaderInfo3 *iface, WORD
 static HRESULT WINAPI headerinfo_GetAttributeByName(IWMHeaderInfo3 *iface, WORD *stream_num, LPCWSTR name,
         WMT_ATTR_DATATYPE *type, BYTE *value, WORD *length)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p, %s, %p, %p, %p\n", This, stream_num, debugstr_w(name), type, value, length);
     return E_NOTIMPL;
 }
@@ -1400,14 +1399,14 @@ static HRESULT WINAPI headerinfo_GetAttributeByName(IWMHeaderInfo3 *iface, WORD
 static HRESULT WINAPI headerinfo_SetAttribute(IWMHeaderInfo3 *iface, WORD stream_num, LPCWSTR name,
         WMT_ATTR_DATATYPE type, const BYTE *value, WORD length)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %s, %d, %p, %d\n", This, stream_num, debugstr_w(name), type, value, length);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI headerinfo_GetMarkerCount(IWMHeaderInfo3 *iface, WORD *markers)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p\n", This, markers);
     return E_NOTIMPL;
 }
@@ -1415,7 +1414,7 @@ static HRESULT WINAPI headerinfo_GetMarkerCount(IWMHeaderInfo3 *iface, WORD *mar
 static HRESULT WINAPI headerinfo_GetMarker(IWMHeaderInfo3 *iface, WORD index, WCHAR *marker_name,
         WORD *marker_len, QWORD *marker_time)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p, %p, %p\n", This, index, marker_name, marker_len, marker_time);
     return E_NOTIMPL;
 }
@@ -1423,21 +1422,21 @@ static HRESULT WINAPI headerinfo_GetMarker(IWMHeaderInfo3 *iface, WORD index, WC
 static HRESULT WINAPI headerinfo_AddMarker(IWMHeaderInfo3 *iface, LPCWSTR_WMSDK_TYPE_SAFE marker_name,
         QWORD marker_time)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p, %s\n", This, marker_name, wine_dbgstr_longlong(marker_time));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI headerinfo_RemoveMarker(IWMHeaderInfo3 *iface, WORD index)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d\n", This, index);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI headerinfo_GetScriptCount(IWMHeaderInfo3 *iface, WORD *scripts)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p\n", This, scripts);
     return E_NOTIMPL;
 }
@@ -1445,7 +1444,7 @@ static HRESULT WINAPI headerinfo_GetScriptCount(IWMHeaderInfo3 *iface, WORD *scr
 static HRESULT WINAPI headerinfo_GetScript(IWMHeaderInfo3 *iface, WORD index, WCHAR *type,
         WORD *type_len, WCHAR *command, WORD *command_len, QWORD *script_time)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p, %p, %p, %p, %p\n", This, index, type, type_len, command, command_len, script_time);
     return E_NOTIMPL;
 }
@@ -1453,21 +1452,21 @@ static HRESULT WINAPI headerinfo_GetScript(IWMHeaderInfo3 *iface, WORD index, WC
 static HRESULT WINAPI headerinfo_AddScript(IWMHeaderInfo3 *iface, LPCWSTR_WMSDK_TYPE_SAFE type,
         LPCWSTR_WMSDK_TYPE_SAFE command, QWORD script_time)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %s, %s, %s\n", This, debugstr_w(type), debugstr_w(command), wine_dbgstr_longlong(script_time));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI headerinfo_RemoveScript(IWMHeaderInfo3 *iface, WORD index)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d\n", This, index);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI headerinfo_GetCodecInfoCount(IWMHeaderInfo3 *iface, DWORD *codec_infos)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p\n", This, codec_infos);
     return E_NOTIMPL;
 }
@@ -1476,7 +1475,7 @@ static HRESULT WINAPI headerinfo_GetCodecInfo(IWMHeaderInfo3 *iface, DWORD index
         WCHAR *name, WORD *description_len, WCHAR *description, WMT_CODEC_INFO_TYPE *codec_type,
         WORD *codec_info_cnt, BYTE *codec_info)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p, %p, %p, %p, %p, %p, %p\n", This, index, name_len, name, description_len,
             description, codec_type, codec_info_cnt, codec_info);
     return E_NOTIMPL;
@@ -1484,7 +1483,7 @@ static HRESULT WINAPI headerinfo_GetCodecInfo(IWMHeaderInfo3 *iface, DWORD index
 
 static HRESULT WINAPI headerinfo_GetAttributeCountEx(IWMHeaderInfo3 *iface, WORD stream_num, WORD *attributes)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %p\n", This, stream_num, attributes);
     return E_NOTIMPL;
 }
@@ -1492,7 +1491,7 @@ static HRESULT WINAPI headerinfo_GetAttributeCountEx(IWMHeaderInfo3 *iface, WORD
 static HRESULT WINAPI headerinfo_GetAttributeIndices(IWMHeaderInfo3 *iface, WORD stream_num, LPCWSTR name,
         WORD *lang_index, WORD *indices, WORD *count)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %s, %p, %p, %p\n", This, stream_num, debugstr_w(name), lang_index, indices, count);
     return E_NOTIMPL;
 }
@@ -1501,7 +1500,7 @@ static HRESULT WINAPI headerinfo_GetAttributeByIndexEx(IWMHeaderInfo3 *iface, WO
         WORD index, LPWSTR name, WORD *name_len, WMT_ATTR_DATATYPE *type, WORD *lang_index,
         BYTE *value, DWORD *data_len)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %d, %s, %p, %p, %p, %p, %p\n", This, stream_num, index, debugstr_w(name), name_len,
             type, lang_index, value, data_len);
     return E_NOTIMPL;
@@ -1510,7 +1509,7 @@ static HRESULT WINAPI headerinfo_GetAttributeByIndexEx(IWMHeaderInfo3 *iface, WO
 static HRESULT WINAPI headerinfo_ModifyAttribute(IWMHeaderInfo3 *iface, WORD stream_num,
         WORD index, WMT_ATTR_DATATYPE type, WORD lang_index, const BYTE *value, DWORD length)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %d, %d, %d, %p, %d\n", This, stream_num, index, type, lang_index, value, length);
     return E_NOTIMPL;
 }
@@ -1518,7 +1517,7 @@ static HRESULT WINAPI headerinfo_ModifyAttribute(IWMHeaderInfo3 *iface, WORD str
 static HRESULT WINAPI headerinfo_AddAttribute(IWMHeaderInfo3 *iface, WORD stream_num, LPCWSTR name,
         WORD *index, WMT_ATTR_DATATYPE type, WORD lang_index, const BYTE *value, DWORD length)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %s, %p, %d, %d, %p, %d\n", This, stream_num, debugstr_w(name), index,
             type, lang_index, value, length);
     return E_NOTIMPL;
@@ -1526,7 +1525,7 @@ static HRESULT WINAPI headerinfo_AddAttribute(IWMHeaderInfo3 *iface, WORD stream
 
 static HRESULT WINAPI headerinfo_DeleteAttribute(IWMHeaderInfo3 *iface, WORD stream_num, WORD index)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %d, %d\n", This, stream_num, index);
     return E_NOTIMPL;
 }
@@ -1535,7 +1534,7 @@ static HRESULT WINAPI headerinfo_AddCodecInfo(IWMHeaderInfo3 *iface, LPCWSTR_WMS
         LPCWSTR_WMSDK_TYPE_SAFE description, WMT_CODEC_INFO_TYPE codec_type, WORD codec_info_cnt,
         BYTE *codec_info)
 {
-    struct async_reader *This = impl_from_IWMHeaderInfo3(iface);
+    WMReader *This = impl_from_IWMHeaderInfo3(iface);
     FIXME("%p, %p, %p, %d, %d, %p\n", This, name, description, codec_type, codec_info_cnt,
             codec_info);
     return E_NOTIMPL;
@@ -1570,32 +1569,32 @@ static const IWMHeaderInfo3Vtbl WMHeaderInfo3Vtbl =
 };
 
 
-static struct async_reader *impl_from_IWMLanguageList(IWMLanguageList *iface)
+static inline WMReader *impl_from_IWMLanguageList(IWMLanguageList *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMLanguageList_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMLanguageList_iface);
 }
 
 static HRESULT WINAPI langlist_QueryInterface(IWMLanguageList *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI langlist_AddRef(IWMLanguageList *iface)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI langlist_Release(IWMLanguageList *iface)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI langlist_GetLanguageCount(IWMLanguageList *iface, WORD *count)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     FIXME("%p, %p\n", This, count);
     return E_NOTIMPL;
 }
@@ -1603,7 +1602,7 @@ static HRESULT WINAPI langlist_GetLanguageCount(IWMLanguageList *iface, WORD *co
 static HRESULT WINAPI langlist_GetLanguageDetails(IWMLanguageList *iface, WORD index,
         WCHAR *language, WORD *length)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     FIXME("%p, %d, %p, %p\n", This, index, language, length);
     return E_NOTIMPL;
 }
@@ -1611,7 +1610,7 @@ static HRESULT WINAPI langlist_GetLanguageDetails(IWMLanguageList *iface, WORD i
 static HRESULT WINAPI langlist_AddLanguageByRFC1766String(IWMLanguageList *iface, LPCWSTR_WMSDK_TYPE_SAFE language,
         WORD *index)
 {
-    struct async_reader *This = impl_from_IWMLanguageList(iface);
+    WMReader *This = impl_from_IWMLanguageList(iface);
     FIXME("%p, %p, %p\n", This, language, index);
     return E_NOTIMPL;
 }
@@ -1626,32 +1625,32 @@ static const IWMLanguageListVtbl WMLanguageListVtbl =
     langlist_AddLanguageByRFC1766String
 };
 
-static struct async_reader *impl_from_IReferenceClock(IReferenceClock *iface)
+static inline WMReader *impl_from_IReferenceClock(IReferenceClock *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IReferenceClock_iface);
+    return CONTAINING_RECORD(iface, WMReader, IReferenceClock_iface);
 }
 
 static HRESULT WINAPI refclock_QueryInterface(IReferenceClock *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI refclock_AddRef(IReferenceClock *iface)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI refclock_Release(IReferenceClock *iface)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI refclock_GetTime(IReferenceClock *iface, REFERENCE_TIME *time)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     FIXME("%p, %p\n", This, time);
     return E_NOTIMPL;
 }
@@ -1659,7 +1658,7 @@ static HRESULT WINAPI refclock_GetTime(IReferenceClock *iface, REFERENCE_TIME *t
 static HRESULT WINAPI refclock_AdviseTime(IReferenceClock *iface, REFERENCE_TIME basetime,
         REFERENCE_TIME streamtime, HEVENT event, DWORD_PTR *cookie)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     FIXME("%p, %s, %s, %lu, %p\n", This, wine_dbgstr_longlong(basetime),
             wine_dbgstr_longlong(streamtime), event, cookie);
     return E_NOTIMPL;
@@ -1668,7 +1667,7 @@ static HRESULT WINAPI refclock_AdviseTime(IReferenceClock *iface, REFERENCE_TIME
 static HRESULT WINAPI refclock_AdvisePeriodic(IReferenceClock *iface, REFERENCE_TIME starttime,
         REFERENCE_TIME period, HSEMAPHORE semaphore, DWORD_PTR *cookie)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     FIXME("%p, %s, %s, %lu, %p\n", This, wine_dbgstr_longlong(starttime),
             wine_dbgstr_longlong(period), semaphore, cookie);
     return E_NOTIMPL;
@@ -1676,7 +1675,7 @@ static HRESULT WINAPI refclock_AdvisePeriodic(IReferenceClock *iface, REFERENCE_
 
 static HRESULT WINAPI refclock_Unadvise(IReferenceClock *iface, DWORD_PTR cookie)
 {
-    struct async_reader *This = impl_from_IReferenceClock(iface);
+    WMReader *This = impl_from_IReferenceClock(iface);
     FIXME("%p, %lu\n", This, cookie);
     return E_NOTIMPL;
 }
@@ -1692,67 +1691,67 @@ static const IReferenceClockVtbl ReferenceClockVtbl =
     refclock_Unadvise
 };
 
-static struct async_reader *impl_from_IWMProfile3(IWMProfile3 *iface)
+static inline WMReader *impl_from_IWMProfile3(IWMProfile3 *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMProfile3_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMProfile3_iface);
 }
 
 static HRESULT WINAPI profile3_QueryInterface(IWMProfile3 *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI profile3_AddRef(IWMProfile3 *iface)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI profile3_Release(IWMProfile3 *iface)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI profile3_GetVersion(IWMProfile3 *iface, WMT_VERSION *version)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, version);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetName(IWMProfile3 *iface, WCHAR *name, DWORD *length)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p, %p\n", This, name, length);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_SetName(IWMProfile3 *iface, const WCHAR *name)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %s\n", This, debugstr_w(name));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetDescription(IWMProfile3 *iface, WCHAR *description, DWORD *length)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p, %p\n", This, description, length);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_SetDescription(IWMProfile3 *iface, const WCHAR *description)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %s\n", This, debugstr_w(description));
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetStreamCount(IWMProfile3 *iface, DWORD *count)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, count);
 
     if (!count)
@@ -1764,175 +1763,175 @@ static HRESULT WINAPI profile3_GetStreamCount(IWMProfile3 *iface, DWORD *count)
 
 static HRESULT WINAPI profile3_GetStream(IWMProfile3 *iface, DWORD index, IWMStreamConfig **config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d, %p\n", This, index, config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetStreamByNumber(IWMProfile3 *iface, WORD stream, IWMStreamConfig **config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d, %p\n", This, stream, config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_RemoveStream(IWMProfile3 *iface, IWMStreamConfig *config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_RemoveStreamByNumber(IWMProfile3 *iface, WORD stream)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d\n", This, stream);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_AddStream(IWMProfile3 *iface, IWMStreamConfig *config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_ReconfigStream(IWMProfile3 *iface, IWMStreamConfig *config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_CreateNewStream(IWMProfile3 *iface, REFGUID type, IWMStreamConfig **config)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %s, %p\n", This, debugstr_guid(type), config);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetMutualExclusionCount(IWMProfile3 *iface, DWORD *count)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, count);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetMutualExclusion(IWMProfile3 *iface, DWORD index, IWMMutualExclusion **mutual)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d, %p\n", This, index, mutual);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_RemoveMutualExclusion(IWMProfile3 *iface, IWMMutualExclusion *mutual)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, mutual);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_AddMutualExclusion(IWMProfile3 *iface, IWMMutualExclusion *mutual)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, mutual);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_CreateNewMutualExclusion(IWMProfile3 *iface, IWMMutualExclusion **mutual)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, mutual);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetProfileID(IWMProfile3 *iface, GUID *guid)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, guid);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetStorageFormat(IWMProfile3 *iface, WMT_STORAGE_FORMAT *storage)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, storage);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_SetStorageFormat(IWMProfile3 *iface, WMT_STORAGE_FORMAT storage)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d\n", This, storage);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetBandwidthSharingCount(IWMProfile3 *iface, DWORD *count)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, count);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetBandwidthSharing(IWMProfile3 *iface, DWORD index, IWMBandwidthSharing **bandwidth)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %d, %p\n", This, index, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_RemoveBandwidthSharing( IWMProfile3 *iface, IWMBandwidthSharing *bandwidth)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_AddBandwidthSharing(IWMProfile3 *iface, IWMBandwidthSharing *bandwidth)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_CreateNewBandwidthSharing( IWMProfile3 *iface, IWMBandwidthSharing **bandwidth)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, bandwidth);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetStreamPrioritization(IWMProfile3 *iface, IWMStreamPrioritization **stream)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, stream);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_SetStreamPrioritization(IWMProfile3 *iface, IWMStreamPrioritization *stream)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, stream);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_RemoveStreamPrioritization(IWMProfile3 *iface)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p\n", This);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_CreateNewStreamPrioritization(IWMProfile3 *iface, IWMStreamPrioritization **stream)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %p\n", This, stream);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI profile3_GetExpectedPacketCount(IWMProfile3 *iface, QWORD duration, QWORD *packets)
 {
-    struct async_reader *This = impl_from_IWMProfile3(iface);
+    WMReader *This = impl_from_IWMProfile3(iface);
     FIXME("%p, %s, %p\n", This, wine_dbgstr_longlong(duration), packets);
     return E_NOTIMPL;
 }
@@ -1975,53 +1974,53 @@ static const IWMProfile3Vtbl WMProfile3Vtbl =
     profile3_GetExpectedPacketCount
 };
 
-static struct async_reader *impl_from_IWMPacketSize2(IWMPacketSize2 *iface)
+static inline WMReader *impl_from_IWMPacketSize2(IWMPacketSize2 *iface)
 {
-    return CONTAINING_RECORD(iface, struct async_reader, IWMPacketSize2_iface);
+    return CONTAINING_RECORD(iface, WMReader, IWMPacketSize2_iface);
 }
 
 static HRESULT WINAPI packetsize_QueryInterface(IWMPacketSize2 *iface, REFIID riid, void **ppv)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     return IWMReader_QueryInterface(&This->IWMReader_iface, riid, ppv);
 }
 
 static ULONG WINAPI packetsize_AddRef(IWMPacketSize2 *iface)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     return IWMReader_AddRef(&This->IWMReader_iface);
 }
 
 static ULONG WINAPI packetsize_Release(IWMPacketSize2 *iface)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     return IWMReader_Release(&This->IWMReader_iface);
 }
 
 static HRESULT WINAPI packetsize_GetMaxPacketSize(IWMPacketSize2 *iface, DWORD *size)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     FIXME("%p, %p\n", This, size);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI packetsize_SetMaxPacketSize(IWMPacketSize2 *iface, DWORD size)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     FIXME("%p, %d\n", This, size);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI packetsize_GetMinPacketSize(IWMPacketSize2 *iface, DWORD *size)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     FIXME("%p, %p\n", This, size);
     return E_NOTIMPL;
 }
 
 static HRESULT WINAPI packetsize_SetMinPacketSize(IWMPacketSize2 *iface, DWORD size)
 {
-    struct async_reader *This = impl_from_IWMPacketSize2(iface);
+    WMReader *This = impl_from_IWMPacketSize2(iface);
     FIXME("%p, %d\n", This, size);
     return E_NOTIMPL;
 }
@@ -2039,7 +2038,7 @@ static const IWMPacketSize2Vtbl WMPacketSize2Vtbl =
 
 HRESULT WINAPI winegstreamer_create_wm_async_reader(IWMReader **reader)
 {
-    struct async_reader *object;
+    WMReader *object;
 
     TRACE("reader %p.\n", reader);
 
-- 
2.33.0

