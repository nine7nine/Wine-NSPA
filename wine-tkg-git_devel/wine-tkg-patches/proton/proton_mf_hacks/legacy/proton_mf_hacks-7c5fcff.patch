From 3b1cf8d88755a420b62e0d920bd4baa16cbcd0b0 Mon Sep 17 00:00:00 2001
From: Andrew Eikum <aeikum@codeweavers.com>
Date: Mon, 15 Jul 2019 08:49:49 -0500
Subject: [PATCH] mfreadwrite: HACK Stub out source reader

This lets games like RE2 behave as they did before.
---
 dlls/mfreadwrite/main.c | 41 ++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 40 insertions(+), 1 deletion(-)

diff --git a/dlls/mfreadwrite/main.c b/dlls/mfreadwrite/main.c
index dd9233794b6..e0502f63645 100644
--- a/dlls/mfreadwrite/main.c
+++ b/dlls/mfreadwrite/main.c
@@ -278,6 +278,8 @@ static HRESULT WINAPI source_reader_source_events_callback_Invoke(IMFAsyncCallba
 
     TRACE("%p, %p.\n", iface, result);
 
+    return E_NOTIMPL;
+
     source = (IMFMediaSource *)IMFAsyncResult_GetStateNoAddRef(result);
 
     if (FAILED(hr = IMFMediaSource_EndGetEvent(source, result, &event)))
@@ -437,6 +439,8 @@ static HRESULT WINAPI source_reader_stream_events_callback_Invoke(IMFAsyncCallba
 
     TRACE("%p, %p.\n", iface, result);
 
+    return E_NOTIMPL;
+
     stream = (IMFMediaStream *)IMFAsyncResult_GetStateNoAddRef(result);
 
     if (FAILED(hr = IMFMediaStream_EndGetEvent(stream, result, &event)))
@@ -562,6 +566,8 @@ static HRESULT WINAPI src_reader_GetStreamSelection(IMFSourceReader *iface, DWOR
 
     TRACE("%p, %#x, %p.\n", iface, index, selected);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -589,6 +595,8 @@ static HRESULT WINAPI src_reader_SetStreamSelection(IMFSourceReader *iface, DWOR
 
     TRACE("%p, %#x, %d.\n", iface, index, selected);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -637,6 +645,8 @@ static HRESULT WINAPI src_reader_GetNativeMediaType(IMFSourceReader *iface, DWOR
 
     TRACE("%p, %#x, %#x, %p.\n", iface, index, type_index, type);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -680,6 +690,8 @@ static HRESULT WINAPI src_reader_GetCurrentMediaType(IMFSourceReader *iface, DWO
 
     TRACE("%p, %#x, %p.\n", iface, index, type);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -715,6 +727,8 @@ static HRESULT WINAPI src_reader_SetCurrentMediaType(IMFSourceReader *iface, DWO
 
     TRACE("%p, %#x, %p, %p.\n", iface, index, reserved, type);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -749,6 +763,8 @@ static HRESULT WINAPI src_reader_SetCurrentPosition(IMFSourceReader *iface, REFG
 
     TRACE("%p, %s, %p.\n", iface, debugstr_guid(format), position);
 
+    return E_NOTIMPL;
+
     /* FIXME: fail if we got pending samples. */
 
     if (FAILED(hr = IMFMediaSource_GetCharacteristics(reader->source, &flags)))
@@ -787,6 +803,8 @@ static HRESULT WINAPI src_reader_ReadSample(IMFSourceReader *iface, DWORD index,
 
     TRACE("%p, %#x, %#x, %p, %p, %p, %p\n", iface, index, flags, actual_index, stream_flags, timestamp, sample);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_FIRST_VIDEO_STREAM:
@@ -882,6 +900,8 @@ static HRESULT WINAPI src_reader_GetServiceForStream(IMFSourceReader *iface, DWO
 
     TRACE("%p, %#x, %s, %s, %p\n", iface, index, debugstr_guid(service), debugstr_guid(riid), object);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_MEDIASOURCE:
@@ -921,6 +941,8 @@ static HRESULT WINAPI src_reader_GetPresentationAttribute(IMFSourceReader *iface
 
     TRACE("%p, %#x, %s, %p.\n", iface, index, debugstr_guid(guid), value);
 
+    return E_NOTIMPL;
+
     switch (index)
     {
         case MF_SOURCE_READER_MEDIASOURCE:
@@ -1499,9 +1521,26 @@ static HRESULT create_source_reader_from_object(IUnknown *unk, IMFAttributes *at
 HRESULT WINAPI MFCreateSourceReaderFromByteStream(IMFByteStream *stream, IMFAttributes *attributes,
         IMFSourceReader **reader)
 {
+    struct source_reader *object;
+
     TRACE("%p, %p, %p.\n", stream, attributes, reader);
 
-    return create_source_reader_from_object((IUnknown *)stream, attributes, &IID_IMFSourceReader, (void **)reader);
+    object = heap_alloc_zero(sizeof(*object));
+    if (!object)
+        return E_OUTOFMEMORY;
+
+    object->IMFSourceReader_iface.lpVtbl = &srcreader_vtbl;
+    object->source_events_callback.lpVtbl = &source_events_callback_vtbl;
+    object->stream_events_callback.lpVtbl = &stream_events_callback_vtbl;
+    object->refcount = 1;
+
+    InitializeCriticalSection(&object->cs);
+
+    *reader = &object->IMFSourceReader_iface;
+
+    return S_OK;
+
+//    return create_source_reader_from_object((IUnknown *)stream, attributes, &IID_IMFSourceReader, (void **)reader);
 }
 
 /***********************************************************************

From 8514ef9e50dc7a0868992c6084c15b86422a1b1b Mon Sep 17 00:00:00 2001
From: Nikolay Sivov <nsivov@codeweavers.com>
Date: Fri, 12 Jul 2019 10:39:24 -0500
Subject: [PATCH] mf: Return failure from IMFMediaSession::BeginGetEvent

These APIs don't work yet anyway, so this avoids a crash.
---
 dlls/mf/session.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/dlls/mf/session.c b/dlls/mf/session.c
index c43e6d2838b..f35106b505b 100644
--- a/dlls/mf/session.c
+++ b/dlls/mf/session.c
@@ -335,9 +335,9 @@ static HRESULT WINAPI mfsession_BeginGetEvent(IMFMediaSession *iface, IMFAsyncCa
 {
     struct media_session *session = impl_from_IMFMediaSession(iface);
 
-    TRACE("(%p)->(%p, %p)\n", iface, callback, state);
+    FIXME("(%p)->(%p, %p)\n", iface, callback, state);
 
-    return IMFMediaEventQueue_BeginGetEvent(session->event_queue, callback, state);
+    return E_NOTIMPL;
 }
 
 static HRESULT WINAPI mfsession_EndGetEvent(IMFMediaSession *iface, IMFAsyncResult *result, IMFMediaEvent **event)

